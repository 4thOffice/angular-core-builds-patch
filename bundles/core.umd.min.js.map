{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","getHighestElementOrICUContainer","getParentNative","getHostNative","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","eventTargetResolver","resolved","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","changes","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+73.sha-91a8a4f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n            lView[FLAGS] |= 32 /* RunInit */;\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the native node (element or a comment) for the parent of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            // skip over element and ICU containers as those are represented by a comment node and\n            // can't be used as a render parent\n            tNode = getHighestElementOrICUContainer(tNode);\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent;\n        currentNode = getHighestElementOrICUContainer(currentNode);\n        parent = currentNode.parent;\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var renderParent = getRenderParent(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getRenderParent(childTNode, currentView);\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value, tNode.tagName || '', name);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+73.sha-91a8a4f');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}