{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","error_1","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_FACTORY_DEF","ngFactoryDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","elementDepthCount","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","view","getIsParent","setIsNotParent","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","selectView","newView","hostTNode","oldView","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","RendererStyleFlags3","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstTemplatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","ɵɵadvance","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","str","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TView","queries","bindingStartIndex","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","nodes","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","viewData","selectedIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","getHostNative","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","tViewNodeChild","currentChild","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","tNodeType","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","injectorDef","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","valueHasChanged","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","getComponentMetadata","compileFactory","hasSelectorScope","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","compileDirective","getDirectiveMetadata","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","getPipeMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵINJECTOR_SCOPE","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵallowSanitizationBypassAndThrow","ɵgetSanitizationBypassType","ɵunwrapSafeValue","ɵdetectChanges","ɵrenderComponent","renderComponent$1","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.5+67.sha-8a7129e.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error_1 = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error_1.name = 'NullInjectorError';\n                throw error_1;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ngFactoryDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var factoryFn = type[NG_FACTORY_DEF] || null;\n        if (!factoryFn && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngFactoryDef' property.\");\n        }\n        return factoryFn;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param host Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function selectView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function isMapBased(prop) {\n        return prop === MAP_BASED_ENTRY_PROP_NAME;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 2 /* isComponentHost */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        // TODO(crisbeto): unify injectable factories with getFactory.\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        var factory = def && def.factory || getFactoryDef(typeAny);\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n            // empty\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ?\n            value.changingThisBreaksApplicationSecurity :\n            '';\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() ||\n            null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        if (value !== NO_CHANGE) {\n            var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << index;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        if (value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ||\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << index;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"bindingIndex\", {\n            get: function () { return this._raw_lView[BINDING_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstTemplatePass) {\n                tView.firstTemplatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            selectView(oldView, null);\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var oldView = selectView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingRoot(lView[BINDING_INDEX] = tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            selectView(oldView, null);\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tView, tNode, direction) {\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tView, tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            propName[0] === ANIMATION_PROP_PREFIX || typeof Node !== 'function' ||\n            !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 8 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 2 /* isComponentHost */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = (flags & 2 /* isComponentHost */) | 1 /* isDirectiveHost */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n            setPreviousOrParentTNode(previousOrParentTNode, isParent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        var view = getComponentViewByInstance(component);\n        checkNoChangesInternal(view, component);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tView, tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tView, tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            if (tViewNodeChild !== null) {\n                if (tViewNodeChild.type === 4 /* ElementContainer */ ||\n                    tViewNodeChild.type === 5 /* IcuContainer */) {\n                    var currentChild = tViewNodeChild.child;\n                    while (currentChild && (currentChild.type === 4 /* ElementContainer */ ||\n                        currentChild.type === 5 /* IcuContainer */)) {\n                        currentChild = currentChild.child;\n                    }\n                    tViewNodeChild = currentChild || tViewNodeChild;\n                }\n                return getNativeByTNodeOrNull(tViewNodeChild, lView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponentHost(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(getNativeByTNode(tNode, lView), lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var valueHasChanged = false;\n        if (isClassBased) {\n            valueHasChanged = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n        }\n        else {\n            var sanitizer = getCurrentStyleSanitizer();\n            valueHasChanged = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = lView[bindingIndex];\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n        if (isClassBased) {\n            updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n        }\n        else {\n            var sanitizer = getCurrentStyleSanitizer();\n            updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tView, tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstTemplatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            selectView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        selectView(lContainer[PARENT], null);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tView, tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, lView[BINDING_INDEX] - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, lView[BINDING_INDEX] - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    lView[BINDING_INDEX] - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = selectView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            selectView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ngInjectableDef = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.5+67.sha-8a7129e.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(-1, null, 1, 0, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = selectView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                selectView(oldLView, null);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData, /* markAsDetached */ true);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, lView[BINDING_INDEX]++, value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(getLView(), index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        var ngFactoryDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    var meta = getComponentMetadata(compiler, type, metadata);\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, meta.templateUrl, meta.metadata);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getComponentMetadata(compiler, type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            var error_1 = [\"Component '\" + type.name + \"' is not resolved:\"];\n            if (metadata.templateUrl) {\n                error_1.push(\" - templateUrl: \" + metadata.templateUrl);\n            }\n            if (metadata.styleUrls && metadata.styleUrls.length) {\n                error_1.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n            }\n            error_1.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n            throw new Error(error_1.join('\\n'));\n        }\n        var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n        var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n        if (meta.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: meta, templateUrl: templateUrl };\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/ngFactory.js\", meta.metadata);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/ngDirectiveDef.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addBaseDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngFactoryDef = getCompilerFacade().compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngFactory.js\", metadata, true);\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/ngPipeDef.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        var context = loadLContext(element, false);\n        if (!context) {\n            return {};\n        }\n        var lView = context.lView;\n        var tData = lView[TVIEW].data;\n        var tNode = tData[context.nodeIndex];\n        if (isClassBased) {\n            return isStylingContext(tNode.classes) ?\n                new NodeStylingDebug(tNode.classes, lView, true).values :\n                stylingMapToStringMap(tNode.classes);\n        }\n        else {\n            return isStylingContext(tNode.styles) ?\n                new NodeStylingDebug(tNode.styles, lView, false).values :\n                stylingMapToStringMap(tNode.styles);\n        }\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please add `import \\'@angular/localize\\';` to your polyfills.ts file.');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}