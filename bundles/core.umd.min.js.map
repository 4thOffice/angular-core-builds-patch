{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__window","window","__self","WorkerGlobalScope","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","onDestroy","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","add","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","input","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","componentNeedsResolution","component","templateUrl","styleUrls","clearResolutionOfComponentResourcesQueue","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$2","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isOnChangesDirectiveWrapper","isExactInstanceOf","OnChangesDirectiveWrapper","unwrapOnChangesDirectiveWrapper","instance","seenProps","changes","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","inputs","outputs","exportAs","onChanges","ngOnChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","hooksToCall","callHooks","hook","isOnChangesHook","directiveOrWrappedDirective","directive","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","getRenderParent","getHighestElementOrICUContainer","getHostNative","insertBefore","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","clone","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","changesHooks","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","minifiedName","subscription","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","inputAliases","privateName","recordChangeAndUpdateProperty","direction","propStore","isInput","defs","publicToMinifiedNames","publicToDeclaredNames","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","recordChange","simpleChanges","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","superPrototype","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","initializeBaseDef","inheritedBaseDef","getOrCreateDefinitionAndUpdateMappingFor","getPropertyToUpdate","updateIOProp","defProp","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_q","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_r","ɵangular_packages_core_core_e","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_k","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_i","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.0+11.sha-e172e97\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks an object to see if it's an exact instance of a particular type\n     * without traversing the inheritance hierarchy like `instanceof` does.\n     * @param obj The object to check\n     * @param type The type to check the object against\n     */\n    function isExactInstanceOf(obj, type) {\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == type.prototype;\n    }\n    /**\n     * Checks to see if an object is an instance of {@link OnChangesDirectiveWrapper}\n     * @param obj the object to check (generally from `LView`)\n     */\n    function isOnChangesDirectiveWrapper(obj) {\n        return isExactInstanceOf(obj, OnChangesDirectiveWrapper);\n    }\n    /**\n     * Removes the `OnChangesDirectiveWrapper` if present.\n     *\n     * @param obj to unwrap.\n     */\n    function unwrapOnChangesDirectiveWrapper(obj) {\n        return isOnChangesDirectiveWrapper(obj) ? obj.instance : obj;\n    }\n    /**\n     * A class that wraps directive instances for storage in LView when directives\n     * have onChanges hooks to deal with.\n     */\n    var OnChangesDirectiveWrapper = /** @class */ (function () {\n        function OnChangesDirectiveWrapper(instance) {\n            this.instance = instance;\n            this.seenProps = new Set();\n            this.previous = {};\n            this.changes = null;\n        }\n        return OnChangesDirectiveWrapper;\n    }());\n    /**\n     * Updates the `changes` property on the `wrapper` instance, such that when it's\n     * checked in {@link callHooks} it will fire the related `onChanges` hook.\n     * @param wrapper the wrapper for the directive instance\n     * @param declaredName the declared name to be used in `SimpleChange`\n     * @param value The new value for the property\n     */\n    function recordChange(wrapper, declaredName, value) {\n        var simpleChanges = wrapper.changes || (wrapper.changes = {});\n        var firstChange = !wrapper.seenProps.has(declaredName);\n        if (firstChange) {\n            wrapper.seenProps.add(declaredName);\n        }\n        var previous = wrapper.previous;\n        var previousValue = previous[declaredName];\n        simpleChanges[declaredName] = new SimpleChange(firstChange ? undefined : previousValue && previousValue.currentValue, value, firstChange);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        var record = view[index + HEADER_OFFSET];\n        // If we're storing an array because of a directive or component with ngOnChanges,\n        // return the directive or component instance.\n        return isOnChangesDirectiveWrapper(record) ? record.instance : record;\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: typePrototype.ngOnChanges || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(-directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? firstPassHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass, and skipping onChanges hooks if there are no changes present.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            var directiveIndex = arr[i];\n            var hook = arr[i + 1];\n            // Negative indices signal that we're dealing with an `onChanges` hook.\n            var isOnChangesHook = directiveIndex < 0;\n            var directiveOrWrappedDirective = currentView[isOnChangesHook ? -directiveIndex : directiveIndex];\n            var directive = unwrapOnChangesDirectiveWrapper(directiveOrWrappedDirective);\n            if (isOnChangesHook) {\n                var onChanges = directiveOrWrappedDirective;\n                var changes = onChanges.changes;\n                if (changes) {\n                    onChanges.previous = changes;\n                    onChanges.changes = null;\n                    hook.call(onChanges.instance, changes);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // If this is the first content query on a node, any existing LQueries needs to be cloned.\n        // In subsequent template passes, the cloning occurs before directive instantiation\n        // in `createDirectivesAndLocals`.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n                lView[FLAGS] |= 32 /* RunInit */;\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else {\n            value = unwrapOnChangesDirectiveWrapper(value);\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (unwrapOnChangesDirectiveWrapper(lView[i]) === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual$1(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination.\n            if (parent.flags & 1 /* isComponent */) {\n                return null;\n            }\n            else {\n                return getNativeByTNode(parent, currentView);\n            }\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY$2;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$2;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$2;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapOnChangesDirectiveWrapper(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        else {\n            // During first template pass, queries are created or cloned when first requested\n            // using `getOrCreateCurrentQueries`. For subsequent template passes, we clone\n            // any current LQueries here up-front if the current node hosts a content query.\n            if (isContentQueryHost(getPreviousOrParentTNode()) && lView[QUERIES]) {\n                lView[QUERIES] = lView[QUERIES].clone();\n            }\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            changesHooks: null,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                // Subscribe to listeners for each output, and setup clean up for each.\n                for (var i = 0; i < propsLength;) {\n                    var directiveIndex = props[i++];\n                    var minifiedName = props[i++];\n                    var declaredName = props[i++];\n                    ngDevMode && assertDataInRange(lView, directiveIndex);\n                    var directive = unwrapOnChangesDirectiveWrapper(lView[directiveIndex]);\n                    var output = directive[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directive.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs, 'class', getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAttribute(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, inputData, propName, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateProperty(propName);\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param publicName public binding name. (This is the `<div [publicName]=value>`)\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputAliases, publicName, value) {\n        var inputs = inputAliases[publicName];\n        for (var i = 0; i < inputs.length;) {\n            var directiveIndex = inputs[i++];\n            var privateName = inputs[i++];\n            var declaredName = inputs[i++];\n            ngDevMode && assertDataInRange(lView, directiveIndex);\n            recordChangeAndUpdateProperty(lView[directiveIndex], declaredName, privateName, value);\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length;) {\n            var directiveIndex = inputs[i++];\n            var privateName = inputs[i++];\n            var declaredName = inputs[i++];\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(privateName);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var publicToMinifiedNames = isInput ? directiveDef.inputs : directiveDef.outputs;\n                var publicToDeclaredNames = isInput ? directiveDef.declaredInputs : null;\n                for (var publicName in publicToMinifiedNames) {\n                    if (publicToMinifiedNames.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var minifiedName = publicToMinifiedNames[publicName];\n                        var declaredName = publicToDeclaredNames ? publicToDeclaredNames[publicName] : minifiedName;\n                        var aliases = propStore.hasOwnProperty(publicName) ?\n                            propStore[publicName] :\n                            propStore[publicName] = [];\n                        aliases.push(i, minifiedName, declaredName);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs, 'class', classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = unwrapOnChangesDirectiveWrapper(viewData[i]);\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, directive, def, directiveDefIdx) {\n        if (def.onChanges) {\n            // We have onChanges, wrap it so that we can track changes.\n            lView[directiveDefIdx] = new OnChangesDirectiveWrapper(lView[directiveDefIdx]);\n        }\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(lView, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(lView, directiveDefIdx, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var directiveOrWrappedDirective = lView[directiveIndex];\n            for (var i = 0; i < initialInputs.length;) {\n                var privateName = initialInputs[i++];\n                var declaredName = initialInputs[i++];\n                var attrValue = initialInputs[i++];\n                recordChangeAndUpdateProperty(directiveOrWrappedDirective, declaredName, privateName, attrValue);\n            }\n        }\n    }\n    /**\n     * Checks to see if the instanced passed as `directiveOrWrappedDirective` is wrapped in {@link\n     * OnChangesDirectiveWrapper} or not.\n     * If it is, it will update the related {@link SimpleChanges} object with the change to signal\n     * `ngOnChanges` hook\n     * should fire, then it will unwrap the instance. After that, it will set the property with the key\n     * provided\n     * in `privateName` on the instance with the passed value.\n     * @param directiveOrWrappedDirective The directive instance or a directive instance wrapped in\n     * {@link OnChangesDirectiveWrapper}\n     * @param declaredName The original, declared name of the property to update.\n     * @param privateName The private, possibly minified name of the property to update.\n     * @param value The value to update the property with.\n     */\n    function recordChangeAndUpdateProperty(directiveOrWrappedDirective, declaredName, privateName, value) {\n        var instance;\n        if (isOnChangesDirectiveWrapper(directiveOrWrappedDirective)) {\n            instance = unwrapOnChangesDirectiveWrapper(directiveOrWrappedDirective);\n            recordChange(directiveOrWrappedDirective, declaredName, value);\n        }\n        else {\n            instance = directiveOrWrappedDirective;\n        }\n        instance[privateName] = value;\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, directiveDef, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var privateName = directiveDef.inputs[attrName];\n            var declaredName = directiveDef.declaredInputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (privateName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(privateName, declaredName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        registerPostOrderHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                definition.onChanges = definition.onChanges || superDef.onChanges;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    definition.onChanges = definition.onChanges || superPrototype.ngOnChanges;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context =\n                unwrapOnChangesDirectiveWrapper(this._lView[PARENT][this._componentIndex]);\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.0+11.sha-e172e97');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        var textNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Returns a function that will update the static definition on a class to have the\n     * appropriate input or output mapping.\n     *\n     * Will also add an {@link ngBaseDef} property to a directive if no `ngDirectiveDef`\n     * or `ngComponentDef` is present. This is done because a class may have {@link InputDecorator}s and\n     * {@link OutputDecorator}s without having a {@link ComponentDecorator} or {@link DirectiveDecorator},\n     * and those inputs and outputs should still be inheritable, we need to add an\n     * `ngBaseDef` property if there are no existing `ngComponentDef` or `ngDirectiveDef`\n     * properties, so that we can track the inputs and outputs for inheritance purposes.\n     *\n     * @param getPropertyToUpdate A function that maps to either the `inputs` property or the\n     * `outputs` property of a definition.\n     * @returns A function that, the called, will add a `ngBaseDef` if no other definition is present,\n     * then update the `inputs` or `outputs` on it, depending on what was selected by `getPropertyToUpdate`\n     *\n     *\n     * @see InputDecorator\n     * @see OutputDecorator\n     * @see InheritenceFeature\n     */\n    function getOrCreateDefinitionAndUpdateMappingFor(getPropertyToUpdate) {\n        return function updateIOProp(target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            var def = constructor[NG_COMPONENT_DEF] || constructor[NG_DIRECTIVE_DEF] || constructor[NG_BASE_DEF];\n            if (!def) {\n                initializeBaseDef(target);\n                def = constructor[NG_BASE_DEF];\n            }\n            var defProp = getPropertyToUpdate(def);\n            // Use of `in` because we *do* want to check the prototype chain here.\n            if (!(name in defProp)) {\n                defProp[name] = args[0];\n            }\n        };\n    }\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, getOrCreateDefinitionAndUpdateMappingFor(function (def) { return def.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, getOrCreateDefinitionAndUpdateMappingFor(function (def) { return def.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_q = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_n = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _localeFactory;\n    exports.ɵangular_packages_core_core_r = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_e = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_l = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_m = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_k = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_j = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_b = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_c = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_d = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_i = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = SCHEDULER;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bg = loadInternal;\n    exports.ɵangular_packages_core_core_f = createElementRef;\n    exports.ɵangular_packages_core_core_g = createTemplateRef;\n    exports.ɵangular_packages_core_core_h = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}