{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","RendererStyleFlags3","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","hasConfig","allowDirectStyling","isClassBased","firstUpdatePass","allow","hasOnlyMapOrPropsFlag","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLViewParent","findComponentView","declaredView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","hostBindingsFlag","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","collisionFlag","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","config","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","movedViews","declaredComponentLView","movedLView","insertedComponentLView","movedTView","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","attrsIndex","localRefsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","patchHostStylingFlag","isHostStyling","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesLifecycleHook","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_s","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,mBACvF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,gBAAiB,CAAC,UAAW,OAAQ,kBAAmBJ,GAClFA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,KAAO,IAAKT,EAAOU,KAAMV,EAAOU,KAAKC,WAHnH,CAIEC,MAAM,SAAWV,EAASQ,EAAMC,GAAa,aAkB3C,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAehC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GA4CpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,GACd,CACHI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,EAAI,CAAEG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,EAAK,GAAIlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;;AAiEX,IAAIK,EAAc,kBACdC,EAAa,iBACbC,EAAgB,qBAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAGL,IAFA,IAAIC,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,GAAIxE,gBAAgBqE,EAEhB,OADAF,EAAS5C,KAAKC,MAAM2C,EAAUX,EAAS,CAACxD,MAAOuE,IACxCvE,KAEX,IAAIyE,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKlD,MAAM8C,EAAId,EAAS,MAAC,GAASe,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAO1C,WAAM,EAAQgC,EAAS,CAACoB,GAAML,KAGvBK,EAAInE,eAAeiD,GACjCkB,EAAIlB,GACJtD,OAAO+B,eAAeyC,EAAKlB,EAAa,CAAET,MAAO,KAAMS,IAC/CJ,KAAKmB,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiBxD,UAAYT,OAAOU,OAAOkD,EAAYnD,YAE3DwD,EAAiBxD,UAAUgE,eAAiBf,EAC5CO,EAAiBS,cAAgBT,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASgB,IAEZ,IADA,IAAIR,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,GAAIT,EAAO,CACP,IAAIiB,EAASjB,EAAMvC,WAAM,EAAQgC,EAASe,IAC1C,IAAK,IAAIU,KAAYD,EACjBhF,KAAKiF,GAAYD,EAAOC,KAKxC,SAASC,EAAmBpB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASoB,IAGL,IAFA,IAAIb,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,GAAIxE,gBAAgBmF,EAEhB,OADAhB,EAAS3C,MAAMxB,KAAMuE,GACdvE,KAEX,IAAIyE,EAAqB,KAAMH,EAAKa,GAAuBT,KAAKlD,MAAM8C,EAAId,EAAS,MAAC,GAASe,KAE7F,OADAa,EAAeC,WAAaZ,EACrBW,EACP,SAASA,EAAeR,EAAKU,EAAWC,GAQpC,IALA,IAAIC,EAAaZ,EAAInE,eAAekD,GAChCiB,EAAIjB,GACJvD,OAAO+B,eAAeyC,EAAKjB,EAAY,CAAEV,MAAO,KAAMU,GAGnD6B,EAAWlE,QAAUiE,GACxBC,EAAWlC,KAAK,MAGpB,OADCkC,EAAWD,GAASC,EAAWD,IAAU,IAAIjC,KAAKmB,GAC5CG,GAQf,OALIZ,IACAmB,EAAsBtE,UAAYT,OAAOU,OAAOkD,EAAYnD,YAEhEsE,EAAsBtE,UAAUgE,eAAiBf,EACjDqB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB3B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS2B,IAGL,IAFA,IAAIpB,EACAC,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,GAAIxE,gBAAgB0F,EAEhB,OADAvB,EAAS3C,MAAMxB,KAAMuE,GACdvE,KAEX,IAAI2F,EAAoB,KAAMrB,EAAKoB,GAAsBhB,KAAKlD,MAAM8C,EAAId,EAAS,MAAC,GAASe,KAa3F,OAZA,SAASqB,EAAcjE,EAAQmC,GAC3B,IAAIlD,EAAce,EAAOf,YAGrBiF,EAAOjF,EAAYH,eAAemD,GAClChD,EAAYgD,GACZxD,OAAO+B,eAAevB,EAAagD,EAAe,CAAEX,MAAO,KAAMW,GACrEiC,EAAK/B,GAAQ+B,EAAKpF,eAAeqD,IAAS+B,EAAK/B,IAAS,GACxD+B,EAAK/B,GAAMgC,QAAQH,GACf1B,GACAA,EAAqBzC,WAAM,EAAQgC,EAAS,CAAC7B,EAAQmC,GAAOS,KASxE,OALIP,IACA0B,EAAqB7E,UAAYT,OAAOU,OAAOkD,EAAYnD,YAE/D6E,EAAqB7E,UAAUgE,eAAiBf,EAChD4B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OAUX,IAoDWK,EApDPC,EAAK,SAAUC,GAAS,MAAO,CAAGA,MAAOA,IAOzCC,EAAShB,EAAmB,SAAUc,GAOtCG,EAAWjB,EAAmB,YAO9BkB,EAAOlB,EAAmB,QAO1BmB,EAAWnB,EAAmB,YAO9BoB,EAAOpB,EAAmB,QAC1BqB,EAAK,SAAUC,GAAiB,MAAO,CAAGA,cAAeA,IAOzDC,EAAYvB,EAAmB,YAAaqB;;;;;;;;AAiChD,SAASG,EAAuBC,GAC5B,IAAK,IAAI/E,KAAO+E,EACZ,GAAIA,EAAyB/E,KAAS8E,EAClC,OAAO9E,EAGf,MAAMgF,MAAM,qDAQhB,SAASC,EAAelF,EAAQmF,GAC5B,IAAK,IAAIlF,KAAOkF,EACRA,EAAOrG,eAAemB,KAASD,EAAOlB,eAAemB,KACrDD,EAAOC,GAAOkF,EAAOlF;;;;;;;OA4BjC,SAASmF,EAAmBC,GACxB,MAAO,CACHf,MAAOe,EAAKf,MAAOgB,WAAYD,EAAKC,YAAc,KAAM5H,QAAS2H,EAAK3H,QACtE4D,WAAOiE;;;;;;;;AAxEJnB,EAeRzG,EAAQyG,cAAgBzG,EAAQyG,YAAc,KAZjCA,EAAqB,QAAI,GAAK,UAK1CA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAsB,SAAI,GAAK,WAE3CA,EAAYA,EAAsB,SAAI,GAAK,WAkE/C,IAAIoB,EAAmBJ,EAqBvB,SAASK,EAAiBC,GACtB,MAAO,CACHhI,QAASgI,EAAQhI,QAASiI,UAAWD,EAAQC,WAAa,GAAIC,QAASF,EAAQE,SAAW,IASlG,SAASC,EAAiBC,GACtB,OAAOC,EAAiBD,EAAMA,EAAKE,KAC/BD,EAAiBD,EAAMA,EAAKG,IAapC,SAASF,EAAiBD,EAAMI,GAC5B,OAAOA,GAAOA,EAAI5B,QAAUwB,EAAOI,EAAM,KA4B7C,SAASC,EAAeL,GACpB,OAAOA,IAASA,EAAKhH,eAAesH,IAAeN,EAAKhH,eAAeuH,IACnEP,EAAKM,GACL,KAER,IAAIJ,EAAcjB,EAAuB,CAAEuB,QAAOvB,IAC9CqB,EAAarB,EAAuB,CAAEwB,OAAMxB,IAE5CkB,EAAoBlB,EAAuB,CAAEyB,gBAAiBzB,IAC9DsB,EAAkBtB,EAAuB,CAAE0B,cAAe1B;;;;;;;;AAS9D,SAAS2B,EAAUpC,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAI1F,MAAM+H,QAAQrC,GACd,MAAO,IAAMA,EAAMsC,IAAIF,GAAWG,KAAK,MAAQ,IAEnD,GAAa,MAATvC,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMwC,eACN,MAAO,GAAKxC,EAAMwC,eAEtB,GAAIxC,EAAMnC,KACN,MAAO,GAAKmC,EAAMnC,KAEtB,IAAI4E,EAAMzC,EAAM0C,WAChB,GAAW,MAAPD,EACA,MAAO,GAAKA,EAEhB,IAAIE,EAAeF,EAAIG,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBF,EAAMA,EAAII,UAAU,EAAGF;;;;;;;OAUxD,IAAIG,EAAkBrC,EAAuB,CAAEqC,gBAAiBrC,IAahE,SAASsC,EAAWC,GAGhB,OAFAA,EAAaF,gBAAkBC,EAC/BC,EAAaN,SAAW,WAAc,OAAON,EAAUrI,SAChDiJ,EAeX,SAASC,EAAkBzB,GACvB,OAAO0B,EAAa1B,GAAQA,IAASA,EAGzC,SAAS0B,EAAaC,GAClB,MAAqB,mBAAPA,GAAqBA,EAAG3I,eAAesI,IACjDK,EAAGL,kBAAoBC;;;;;;;OAU/B,IAiBIK,EAMAC,EAvBAC,EAAqC,oBAAfC,YAA8BA,WACpDC,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAAThK,MAAqD,oBAAtBiK,mBAC/CjK,gBAAgBiK,mBAAqBjK,KACrCkK,EAA6B,oBAAXzK,QAA0BA,OAI5C0K,EAAUP,GAAgBM,GAAYJ,GAAYE;;;;;;;;AA+BtD,SAASI,IACL,IAAIC,EAAWF,EAAY,GAC3B,IAAKE,IAAaA,EAASC,gBACvB,MAAM,IAAIrD,MAAM,+VAKpB,OAAOoD,EAASC;;;;;;;QA7BpB,SAAWZ,GACPA,EAAyBA,EAAgC,MAAI,GAAK,QAClEA,EAAyBA,EAAoC,UAAI,GAAK,YACtEA,EAAyBA,EAA4C,kBAAI,GAAK,oBAHlF,CAIGA,IAA6BA,EAA2B,KAE3D,SAAWC,GACPA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA4B,WAAI,GAAK,aACrDA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAA0B,SAAI,GAAK,WALvD,CAMGA,IAAoBA,EAAkB,KA2BzC,IAoIIY,EApIAC,GAAczD,EAAuB,CAAE0D,OAAM1D,IAC7C2D,GAAa3D,EAAuB,CAAE4D,OAAM5D,IAC5C6D,GAAc7D,EAAuB,CAAE8D,QAAO9D,IAC9C+D,GAAa/D,EAAuB,CAAEgE,OAAMhE,IAC5CiE,GAAgBjE,EAAuB,CAAEkE,OAAMlE,IAC/CmE,GAAiBnE,EAAuB,CAAEoE,OAAMpE,IAOhDqE,GAAgBrE,EAAuB,CAAEsE,kBAAmBtE,IAiD5DuE,GAAgC,WAChC,SAASA,EAAeC,EAAO7D,GAC3BrH,KAAKkL,MAAQA,EAEblL,KAAK6E,eAAiB,iBACtB7E,KAAKiI,WAAQf,EACS,iBAAXG,EAIPrH,KAAKgL,kBAAoB3D,OAERH,IAAZG,IACLrH,KAAKiI,MAAQlB,EAAmB,CAC5Bd,MAAOjG,KACPiH,WAAYI,EAAQJ,YAAc,OAClC5H,QAASgI,EAAQhI,WAK7B,OADA4L,EAAepK,UAAU8H,SAAW,WAAc,MAAO,kBAAoB3I,KAAKkL,OAC3ED,EArBwB,GAuC/BE,GAAW,IAAIF,GAAe,YAAa,GAG3CG,GADsB,IAAIhL,OAE1BiL,GAAqB,kBACrBC,GAAgB,cAChBC,GAAW,OACXC,GAAc,IACdC,GAAS,WAETC,GAAYhF,EAAuB,CAAEiF,QAASC,OAAQC,SAD/CnF,IAQPoF,QAAmB5E,EACvB,SAAS6E,GAAmBC,GACxB,IAAIC,EAASH,GAEb,OADAA,GAAmBE,EACZC,EAeX,SAASC,GAAwBC,GAC7B,IAAIC,EAAWlC,EAEf,OADAA,EAAwBiC,EACjBC,EAEX,SAASC,GAAmBpG,EAAOqG,GAE/B,QADc,IAAVA,IAAoBA,EAAQhN,EAAQyG,YAAYwG,cAC3BrF,IAArB4E,GACA,MAAM,IAAIlF,MAAM,qDAEf,OAAyB,OAArBkF,GACEU,GAAmBvG,OAAOiB,EAAWoF,GAGrCR,GAAiBW,IAAIxG,EAAOqG,EAAQhN,EAAQyG,YAAYI,SAAW,UAAOe,EAAWoF,GAGpG,SAASI,GAASzG,EAAOqG,GAErB,YADc,IAAVA,IAAoBA,EAAQhN,EAAQyG,YAAYwG,UAC5CrC,GAAyBmC,IAAoBnD,EAAkBjD,GAAQqG,GA0BnF,IAAIK,GAASD,GAQb,SAASF,GAAmBvG,EAAO2G,EAAeN,GAC9C,IAAIO,EAAgBrF,EAAiBvB,GACrC,GAAI4G,GAA6C,QAA5BA,EAAc5F,WAC/B,YAA+BC,IAAxB2F,EAAc5J,MAAsB4J,EAAc5J,MAAQ4J,EAAcxN,UAC3EwN,EAAc5J,MAEtB,GAAIqJ,EAAQhN,EAAQyG,YAAYI,SAC5B,OAAO,KACX,QAAsBe,IAAlB0F,EACA,OAAOA,EACX,MAAM,IAAIhG,MAAM,wBAA0ByB,EAAUpC,GAAS,KAEjE,SAAS6G,GAAWC,GAEhB,IADA,IAAIxI,EAAO,GACFpD,EAAI,EAAGA,EAAI4L,EAAMzL,OAAQH,IAAK,CACnC,IAAI6L,EAAM9D,EAAkB6D,EAAM5L,IAClC,GAAIZ,MAAM+H,QAAQ0E,GAAM,CACpB,GAAmB,IAAfA,EAAI1L,OACJ,MAAM,IAAIsF,MAAM,wCAIpB,IAFA,IAAIa,OAAOP,EACPoF,EAAQhN,EAAQyG,YAAYwG,QACvBU,EAAI,EAAGA,EAAID,EAAI1L,OAAQ2L,IAAK,CACjC,IAAIpH,EAAOmH,EAAIC,GACXpH,aAAgBM,GAAoC,aAAxBN,EAAKhB,gBAAiCgB,IAASM,EAC3EmG,GAAShN,EAAQyG,YAAYI,SAExBN,aAAgBQ,GAAoC,aAAxBR,EAAKhB,gBAAiCgB,IAASQ,EAChFiG,GAAShN,EAAQyG,YAAYM,SAExBR,aAAgBO,GAAgC,SAAxBP,EAAKhB,gBAA6BgB,IAASO,EACxEkG,GAAShN,EAAQyG,YAAYK,KAG7BqB,EADK5B,aAAgBK,GAAUL,IAASK,EACjCL,EAAKI,MAGLJ,EAGftB,EAAKjB,KAAKoJ,GAASjF,EAAM6E,SAGzB/H,EAAKjB,KAAKoJ,GAASM,IAG3B,OAAOzI,EAEX,IAAI2I,GAA8B,WAC9B,SAASA,KAeT,OAbAA,EAAarM,UAAU4L,IAAM,SAAUxG,EAAO2G,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBxB,IAC5CwB,IAAkBxB,GAAoB,CAKtC,IAAI7H,EAAQ,IAAIqD,MAAM,sCAAwCyB,EAAUpC,GAAS,KAEjF,MADA1C,EAAMO,KAAO,oBACPP,EAEV,OAAOqJ,GAEJM,EAhBsB,GAkBjC,SAASC,GAAmB/J,EAAG6C,EAAOmH,EAAmBtG,GACrD,IAAIuG,EAAYjK,EAAEiI,IAOlB,MANIpF,EAAMwF,KACN4B,EAAUvH,QAAQG,EAAMwF,KAE5BrI,EAAEkK,QAAUC,GAAY,KAAOnK,EAAEkK,QAASD,EAAWD,EAAmBtG,GACxE1D,EAAEkI,IAAiB+B,EACnBjK,EAAEiI,IAAsB,KAClBjI,EAEV,SAASmK,GAAYC,EAAMC,EAAKL,EAAmBtG,QAChC,IAAXA,IAAqBA,EAAS,MAClC0G,EAAOA,GAA2B,OAAnBA,EAAKE,OAAO,IAAeF,EAAKE,OAAO,IAAMlC,GAAcgC,EAAKG,OAAO,GAAKH,EAC3F,IAAII,EAAUvF,EAAUoF,GACxB,GAAIlN,MAAM+H,QAAQmF,GACdG,EAAUH,EAAIlF,IAAIF,GAAWG,KAAK,aAEjC,GAAmB,iBAARiF,EAAkB,CAC9B,IAAII,EAAQ,GACZ,IAAK,IAAIjM,KAAO6L,EACZ,GAAIA,EAAIhN,eAAemB,GAAM,CACzB,IAAIqB,EAAQwK,EAAI7L,GAChBiM,EAAMvK,KAAK1B,EAAM,KAAwB,iBAAVqB,EAAqB6K,KAAKzF,UAAUpF,GAASoF,EAAUpF,KAG9F2K,EAAU,IAAMC,EAAMrF,KAAK,MAAQ,IAEvC,OAAY4E,GAAqBtG,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAM8G,EAAU,MAAQJ,EAAKO,QAAQxC,GAAU;;;;;;;OAexH,IAwMWyC,GAcAC,GAmDAC,GAzQPC,GAAmB,CACnBpH,qBAAsBA,EACtBK,mBAAoBA,EACpBsF,WAAYA,GACZ0B,iBAEJ,SAASC,EAAa5G,GAClB,IAAI6G,EAAU7G,EACd,GAAI0B,EAAa1B,GACb,OAAO,WACH,IAAIpI,EAAUgP,EAAanF,EAAkBoF,IAC7C,OAAOjP,EAAUA,IAAY,MAGrC,IAAIwI,EAAML,EAAiB8G,IAAYxG,EAAewG,GACtD,OAAKzG,QAAuBX,IAAhBW,EAAIxI,QAGTwI,EAAIxI,QAFA;;;;;;;SAoBXkP,GACA,SAASA,OAOTC,GACA,SAASA;;;;;;;;AAkBb,SAASC,GAAcC,EAAOC,GAC1B,IAAK,IAAIxN,EAAI,EAAGA,EAAIuN,EAAMpN,OAAQH,IAC9BwN,EAAIrL,KAAKoL,EAAMvN,IAMvB,SAASyN,GAAQC,EAAMC,QACP5H,IAAR4H,IACAA,EAAMD,GACV,IAAK,IAAI1N,EAAI,EAAGA,EAAI0N,EAAKvN,OAAQH,IAAK,CAClC,IAAI4N,EAAOF,EAAK1N,GACZZ,MAAM+H,QAAQyG,IAEVD,IAAQD,IAGRC,EAAMD,EAAKG,MAAM,EAAG7N,IAExByN,GAAQG,EAAMD,IAETA,IAAQD,GACbC,EAAIxL,KAAKyL,GAGjB,OAAOD,EAEX,SAASG,GAAYC,EAAO9F,GACxB8F,EAAMC,SAAQ,SAAUlM,GAAS,OAAO1C,MAAM+H,QAAQrF,GAASgM,GAAYhM,EAAOmG,GAAMA,EAAGnG,MAE/F,SAASmM,GAAWT,EAAKpJ,EAAOtC,GAExBsC,GAASoJ,EAAIrN,OACbqN,EAAIrL,KAAKL,GAGT0L,EAAIU,OAAO9J,EAAO,EAAGtC,GAG7B,SAASqM,GAAgBX,EAAKpJ,GAE1B,OAAIA,GAASoJ,EAAIrN,OAAS,EACfqN,EAAIY,MAGJZ,EAAIU,OAAO9J,EAAO,GAAG,GAGpC,SAASiK,GAASC,EAAMxM,GAEpB,IADA,IAAI4L,EAAO,GACF1N,EAAI,EAAGA,EAAIsO,EAAMtO,IACtB0N,EAAKvL,KAAKL,GAEd,OAAO4L;;;;;;;OAuDX,SAASa,GAAcC,EAAQC,GACb,MAAVD,GACAE,GAAWD,GAGnB,SAASC,GAAWD,GAGhB,MAAM,IAAIhJ,MAAM,oBAAsBgJ;;;;;;;;AAsI1C,SAASE,GAAc1G,GACnB,MAAO,GAAK,CAAET,SAAUS;;;;;;;;;;;;;;;AAnHjB4E,GAaR1O,EAAQ0O,0BAA4B1O,EAAQ0O,wBAA0B,KAN7CA,GAAgC,OAAI,GAAK,SAKjEA,GAAwBA,GAAiC,QAAI,GAAK,WAE3DC,GA+BR3O,EAAQyQ,wBAA0BzQ,EAAQyQ,sBAAwB,KA1B5C9B,GAAgC,UAAI,GAAK,YAK9DA,GAAqBA,GAA8B,QAAI,GAAK,UAK5DA,GAAqBA,GAAkC,YAAI,GAAK,cAKhEA,GAAqBA,GAA+B,SAAI,GAAK,WAM7DA,GAAqBA,GAA8B,QAAI,GAAK,UAI5DA,GAAqBA,GAAgC,UAAI,GAAK;;;;;;;;AAqBvDC,GA+BR5O,EAAQ4O,oBAAsB5O,EAAQ4O,kBAAoB,KAtBvCA,GAA4B,SAAI,GAAK,WASvDA,GAAkBA,GAA0B,OAAI,GAAK,SAIrDA,GAAkBA,GAAwB,KAAI,GAAK,OAQnDA,GAAkBA,GAA6B,UAAI,GAAK;;;;;;;;AAyH5D,IAAI8B,GAAY,GACZC,GAAc,GAkBdC,GAAmB,EAiBvB,SAASC,GAAkBC,GAIvB,IAAI3I,EAAO2I,EAAoB3I,KAC3B4I,EAAgB5I,EAAK5G,UACrByP,EAAiB,GACjBzI,EAAM,CACNJ,KAAMA,EACN8I,kBAAmB,KACnBC,MAAOJ,EAAoBI,MAC3BC,KAAML,EAAoBK,KAC1BpR,QAAS,KACTqR,SAAUN,EAAoBM,UAAY,KAC1CC,OAAQP,EAAoBO,QAAU,KACtCC,mBAAoBR,EAAoBQ,mBACxCC,aAAcT,EAAoBS,cAAgB,KAClDC,eAAgBV,EAAoBU,gBAAkB,KACtDR,eAAgBA,EAChBS,OAAQ,KACRC,QAAS,KACTC,SAAUb,EAAoBa,UAAY,KAC1CC,UAAW,KACXC,OAAQd,EAAce,UAAY,KAClCC,QAAShB,EAAciB,WAAa,KACpCC,iBAAkBlB,EAAcmB,oBAAsB,KACtDC,oBAAqBpB,EAAcqB,uBAAyB,KAC5DC,cAAetB,EAAcuB,iBAAmB,KAChDC,iBAAkBxB,EAAcyB,oBAAsB,KACtDC,UAAW1B,EAAc2B,aAAe,KACxCC,OAAQ7B,EAAoB8B,kBAAoB5S,EAAQ0O,wBAAwBmE,OAChFC,cAAe,KACfC,SAAU,KACVC,UAAWlC,EAAoBkC,WAAarC,GAC5CsC,UAAWnC,EAAoBmC,WAAa,KAC5CC,SAAUpC,EAAoBoC,UAAY,KAC1CC,KAAMrC,EAAoBqC,MAAQ,GAGlCC,cAAetC,EAAoBsC,eAAiBpT,EAAQ4O,kBAAkByE,SAC9EC,GAAI,IACJC,OAAQzC,EAAoByC,QAAU5C,GACtC6C,EAAG,KACHC,SAAU,KACVC,QAAS5C,EAAoB4C,SAAW,KACxCC,MAAO,MAkBX,OAhBApL,EAAIiL,EAAIhD,IAAc,WAClB,IAAIoD,EAAiB9C,EAAoB+C,WACrCC,EAAUhD,EAAoBoC,SAC9Ba,EAAYjD,EAAoBkD,MACpCzL,EAAI+K,IAAM1C,KACVrI,EAAIkJ,OAASwC,GAAanD,EAAoBW,OAAQT,GAClDzI,EAAImJ,QAAUuC,GAAanD,EAAoBY,SAC/CoC,GAAWA,EAAQjE,SAAQ,SAAU/F,GAAM,OAAOA,EAAGvB,MACzDA,EAAIuK,cAAgBc,EAChB,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3E3K,IAAIiL,KACT,KACJ3L,EAAIwK,SAAWgB,EACX,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAW9K,IAAIkL,KACrF,QAED5L,EAKX,SAAS6L,GAAoBjM,EAAM0L,EAAYG,GAC3C,IAAIzL,EAAMJ,EAAK2C,KACfvC,EAAIuK,cAAgB,WAAc,OAAOe,EAAW5K,IAAIiL,KACxD3L,EAAIwK,SAAW,WAAc,OAAOiB,EAAM/K,IAAIkL,KAElD,SAASD,GAAoB/L,GAKzB,OAJUkM,GAAgBlM,IAASmM,GAAgBnM,GAMvD,SAASgM,GAAehM,GAKpB,OAJUoM,GAAWpM,GAMzB,IAAIqM,GAAyB,GAI7B,SAASC,GAAiBlM,GACtB,IAAIa,EAAM,CACNjB,KAAMI,EAAIJ,KACVuM,UAAWnM,EAAImM,WAAa/D,GAC5BgE,aAAcpM,EAAIoM,cAAgBhE,GAClC1I,QAASM,EAAIN,SAAW0I,GACxB3Q,QAASuI,EAAIvI,SAAW2Q,GACxBiE,wBAAyB,KACzBlB,QAASnL,EAAImL,SAAW,KACxBJ,GAAI/K,EAAI+K,IAAM,MAKlB,OAHc,MAAV/K,EAAI+K,IACJ9C,IAAc,WAAcgE,GAAuBjM,EAAI+K,IAAM/K,EAAIJ,QAE9DiB,EAYX,SAASyL,GAAmB1M,EAAM2M,GAC9B,OAAOtE,IAAc,WACjB,IAAIuE,EAAcC,GAAe7M,GAAM,GACvC4M,EAAYJ,aAAeG,EAAMH,cAAgBhE,GACjDoE,EAAY9M,QAAU6M,EAAM7M,SAAW0I,GACvCoE,EAAY/U,QAAU8U,EAAM9U,SAAW2Q,MA0D/C,SAASsD,GAAa9F,EAAK8G,GACvB,GAAW,MAAP9G,EACA,OAAOuC,GACX,IAAIwE,EAAY,GAChB,IAAK,IAAIC,KAAehH,EACpB,GAAIA,EAAIhN,eAAegU,GAAc,CACjC,IAAIC,EAAajH,EAAIgH,GACjBE,EAAeD,EACfnU,MAAM+H,QAAQoM,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUG,GAAcC,GAIrC,OAAOH,EAkBX,IAAII,GAAoBzE,GAiBxB,SAAS0E,GAAaC,GAClB,MAAO,CACHrN,KAAMqN,EAAQrN,KACd3D,KAAMgR,EAAQhR,KACdzE,QAAS,KACT0V,MAAuB,IAAjBD,EAAQC,KACdhD,UAAW+C,EAAQrN,KAAK5G,UAAUmR,aAAe,MAQzD,SAAS2B,GAAgBlM,GACrB,OAAOA,EAAK0C,KAAgB,KAEhC,SAASyJ,GAAgBnM,GACrB,OAAOA,EAAK4C,KAAe,KAE/B,SAASwJ,GAAWpM,GAChB,OAAOA,EAAK8C,KAAgB,KAEhC,SAASyK,GAAcvN,EAAMwN,GAKzB,OAJoBxN,EAAKhH,eAAeoK,IAIjBpD,EAAKoD,IAAkB,KAElD,SAASyJ,GAAe7M,EAAMwN,GAC1B,IAAIZ,EAAc5M,EAAKgD,KAAe,KACtC,IAAK4J,IAAiC,IAAlBY,EAChB,MAAM,IAAIrO,MAAM,QAAUyB,EAAUZ,GAAQ,mCAEhD,OAAO4M;;;;;;;;AAgBX,IAAIa,GAAO,EACPC,GAAQ,EACRC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAS,EACTC,GAAU,EACVC,GAAU,EACVC,GAAa,EACbC,GAAmB,GACnBC,GAAW,GACXC,GAAY,GACZC,GAAa,GACbC,GAAa,GACbC,GAAmB,GACnBC,GAAyB,GACzBC,GAAsB,GAEtBC,GAAgB,GAiBhBC,GAAO,EAMPC,GAAe,EAGfC,GAAc,EAGdC,GAAS,EACTC,GAAY,EAOZC,GAA0B;;;;;;;;AAgB9B,SAASC,GAAQ1T,GACb,OAAO1C,MAAM+H,QAAQrF,IAAiC,iBAAhBA,EAAMoT,IAMhD,SAASO,GAAa3T,GAClB,OAAO1C,MAAM+H,QAAQrF,KAA0B,IAAhBA,EAAMoT,IAEzC,SAASQ,GAAmBC,GACxB,OAAmD,IAA7B,EAAdA,EAAMxK,OAElB,SAASyK,GAAgBD,GACrB,OAAmD,IAA7B,EAAdA,EAAMxK,OAElB,SAAS0K,GAAgBF,GACrB,OAAmD,IAA7B,EAAdA,EAAMxK,OAElB,SAAS2K,GAAepP,GACpB,OAAwB,OAAjBA,EAAI6I,SAEf,SAASwG,GAAWvV,GAChB,OAA8C,IAAtB,IAAhBA,EAAOyT;;;;;;;;;;;;;;;AA8DnB,IAAI+B,GAAQ,EACRC,GAAkB,EAClBC,GAA6B,EAC7BC,IAAsB,EA+FtBC,GACA,SAASA,GAITlY,EAIAmY,EAAgBC,GACZzX,KAAKX,QAAUA,EAKfW,KAAK0X,WAAY,EACjB1X,KAAK2X,oBAAsBH,EAC3BxX,KAAK4X,WAAaH,GAsDtBI,GAAmB,CACnBC,OAAQC,GAAa,MACrBC,iBAAiB,EACjBC,cAAe,KACfC,oBAAoB,GAcxB,SAASC,GAAuBtQ,GAC5BgQ,GAAiBC,OAAOM,oBAAsBvQ,EAElD,SAASwQ,KACL,OAAOR,GAAiBG,gBAqB5B,SAASM,KACLT,GAAiBG,iBAAkB,EAqBvC,SAASO,KACLV,GAAiBG,iBAAkB,EAQvC,SAASQ,KAEL,IAAIV,EAASD,GAAiBC,OAC9B,OAAkB,OAAXA,EAAkB,KAAOA,EAAOW,MAK3C,SAASC,GAAqBC,GAC1B,OAAQd,GAAiBC,OAAOc,cAAgBD,KAAUA,EAe9D,SAASE,GAAqBC,QACL,IAAjBA,IAA2BA,EAAe,MAC1CJ,GAAqB,IACrBK,KAEJC,GAAkC,OAAjBF,GAAyB,EAAIA,GAC9CjB,GAAiBC,OAAOmB,kBAAoB,EAEhD,SAASF,KACLlB,GAAiBI,gBACjBJ,GAAiBC,OAAOc,gBAAiB,EAe7C,SAASM,GAAiB9P,IAnC1B,SAAS+P,EAAqBR,GAC1Bd,GAAiBC,OAAOc,eAAiBD,EAmCzCQ,CAAqB,GACiB,MAAlCtB,GAAiBI,gBACjBJ,GAAiBI,cAAgB7O,GAoBzC,SAASgQ,KACL,OAAOvB,GAAiBC,OAAOmB,kBAsBnC,SAASI,KAMLxB,GAAiBC,OAAOmB,mBAAqB,EAajD,SAASK,GAAcC,GACnB1B,GAAiBC,OAAO0B,aAAeD,EAE3C,SAASE,KACL,OAAO5B,GAAiBC,OAAO4B,sBAEnC,SAASC,GAAyB7C,EAAO8C,GACrC/B,GAAiBC,OAAO4B,sBAAwB5C,EAChDe,GAAiBC,OAAO+B,SAAWD,EAEvC,SAASE,KACL,OAAOjC,GAAiBC,OAAO+B,SAEnC,SAASE,KACLlC,GAAiBC,OAAO+B,UAAW,EAQvC,SAASG,KACL,OAAOnC,GAAiBK,mBAE5B,SAAS+B,GAAsBC,GAC3BrC,GAAiBK,mBAAqBgC,EAG1C,SAASC,KACL,IAAIrC,EAASD,GAAiBC,OAC1BvS,EAAQuS,EAAOsC,iBAKnB,OAJe,IAAX7U,IAEAA,EAAQuS,EAAOsC,iBADHtC,EAAOW,MACqBtD,IAAOkF,mBAE5C9U,EAEX,SAAS+U,KACL,OAAOzC,GAAiBC,OAAOyC,aAEnC,SAASC,GAAgBvX,GACrB,OAAO4U,GAAiBC,OAAOyC,aAAetX,EAElD,SAASwX,KACL,OAAO5C,GAAiBC,OAAOyC,eAEnC,SAASG,GAAsBC,GAC3B,IAAI7C,EAASD,GAAiBC,OAC1BvS,EAAQuS,EAAOyC,aAEnB,OADAzC,EAAOyC,aAAezC,EAAOyC,aAAeI,EACrCpV,EAUX,SAASqV,GAAe3X,GACpB4U,GAAiBC,OAAOsC,iBAAmBnX,EAE/C,SAAS4X,KACL,OAAOhD,GAAiBC,OAAOgD,kBAEnC,SAASC,GAAqB9X,GAC1B4U,GAAiBC,OAAOgD,kBAAoB7X,EAOhD,SAAS+X,GAAQC,EAASnE,GAEtB,IAAIoE,EAAYC,KAChBtD,GAAiBC,OAASoD,EAC1BA,EAAUxB,sBAAwB5C,EAClCoE,EAAUzC,MAAQwC,EAetB,IAMIG,GAAUC,GAad,SAASC,GAAUL,EAASnE,GAExB,IAAIoE,EAAYC,KAChBtD,GAAiBC,OAASoD,EAC1BA,EAAUxB,sBAAwB5C,EAClCoE,EAAUrB,UAAW,EACrBqB,EAAUzC,MAAQwC,EAClBC,EAAUtC,cAAgB,EAC1BsC,EAAU1B,aAAeyB,EACzBC,EAAUK,kBAAoB,EAC9BL,EAAUM,iBAAmB,KAC7BN,EAAUO,iBAAmB,KAC7BP,EAAU9C,oBAAsB,KAChC8C,EAAUjC,kBAAoB,EAC9BiC,EAAUd,kBAAoB,EAC9Bc,EAAUX,aAA2B,OAAZU,GAAoB,EAAIA,EAAQ9F,IAAOkF,kBAChEa,EAAUJ,kBAAoB,EAKlC,SAASK,KACL,IAAIO,EAAgB7D,GAAiBC,OACjC6D,EAAgC,OAAlBD,EAAyB,KAAOA,EAAcE,MAEhE,OADgC,OAAhBD,EAAuB5D,GAAa2D,GAAiBC,EAGzE,SAAS5D,GAAa8D,GAClB,IAAI/D,EAAS,CACT4B,sBAAuB,KACvBG,UAAU,EACVpB,MAAO,KACPG,cAAe,EACfY,aAAc,KACd+B,kBAAmB,EACnBC,iBAAkB,KAClBC,iBAAkB,KAClBrD,oBAAqB,KACrBa,kBAAmB,EACnBmB,kBAAmB,EACnBG,cAAe,EACfO,kBAAmB,EACnBe,OAAQA,EACRD,MAAO,MAGX,OADW,OAAXC,IAAoBA,EAAOD,MAAQ9D,GAC5BA,EAEX,SAASgE,KACDpD,GAAqB,IACrBK,KAEJsC,KAEJ,SAASA,KACLxD,GAAiBC,OAASD,GAAiBC,OAAO+D,OAEtD,SAASE,GAAgBC,GAGrB,YAFc,IAAVA,IAAoBA,EAAQ,GAChCnE,GAAiBC,OAAO0B,aAG5B,SAASyC,EAAYC,EAAcC,GAC/B,KAAOD,EAAe,GAElBC,EAAcA,EAAYlG,IAC1BiG,IAEJ,OAAOC,EATgCF,CAAYD,EAAOnE,GAAiBC,OAAO0B,cAC3E3B,GAAiBC,OAAO0B,aAAa9D,IAgBhD,SAAS0G,KACL,OAAOvE,GAAiBC,OAAOc,eAAiB,EAWpD,SAASI,GAAiBzT,GACtBsS,GAAiBC,OAAOc,cAAgBrT,GAAS,EAOrD,SAAS8W,KACLxE,GAAiBC,OAAO0D,iBAAmB,6BAO/C,SAASc,KACLzE,GAAiBC,OAAO0D,iBAAmB,iCAQ/C,SAASe,MAOT,SAASC,IACL3E,GAAiBC,OAAO0D,iBAAmB,KAP3CgB,GAYJ,SAASC,GAAyBC,GAC9B7E,GAAiBC,OAAO2D,iBAAmBiB,EAK/C,SAASC,KAGL,IAAI7E,EAASD,GAAiBC,OAC9B,OAAkB,OAAXA,EAAkB,KAAOA,EAAO2D;;;;;;;OA0B3C,IAwCImB,GAxCAC,QAAW3V,EAiBf,SAAS4V,KACL,YAAiB5V,IAAb2V,GACOA,GAEkB,oBAAbE,SACLA,cADN;;;;;;;OAyBT,SAASC,GAAqBC,GAC1B,QAAUA,EAAe,QAN7B,SAAWL,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,GAAsB,KAKjD,IACIM,GAAsB,CACtBC,eAFO,SAAUC,EAAaC,GAAgB,OAAOP,OAmCzD,SAASQ,GAAgBL,EAAUM,EAAQC,GAGvC,IAFA,IAAIC,EAAST,GAAqBC,GAC9B9b,EAAI,EACDA,EAAIqc,EAAMlc,QAAQ,CACrB,IAAI2B,EAAQua,EAAMrc,GAClB,GAAqB,iBAAV8B,EAAoB,CAG3B,GAAc,IAAVA,EACA,MAIJ9B,IACA,IAAIuc,EAAeF,EAAMrc,KACrBwc,EAAWH,EAAMrc,KACjByc,EAAUJ,EAAMrc,KAEpBsc,EACIR,EAASY,aAAaN,EAAQI,EAAUC,EAASF,GACjDH,EAAOO,eAAeJ,EAAcC,EAAUC,QAK9CA,EAAUJ,IAAQrc,GAGlB4c,GAJAJ,EAAW1a,GAKPwa,GACAR,EAASe,YAAYT,EAAQI,EAAUC,GAI3CH,EACIR,EAASY,aAAaN,EAAQI,EAAUC,GACxCL,EAAOM,aAAaF,EAAUC,GAEtCzc,IAOR,OAAOA,EASX,SAAS8c,GAA0BC,GAC/B,OAAkB,IAAXA,GAA0C,IAAXA,GACvB,IAAXA,EAER,SAASH,GAAgBja,GAIrB,OAA8B,KAAvBA,EAAKqa,WAAW;;;;;;;OAW3B,SAASC,GAAkBC,GACvB,OAAOA,IAAmB/G,GAE9B,SAASgH,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EAAW3I,IACxB0I,IAEJ,OAAOC;;;;;;;OAeX,SAASC,GAAgB5b,GACrB,MAAqB,iBAAVA,EACAA,EACE,MAATA,EACO,GACJ,GAAKA,EAOhB,SAAS6b,GAAkB7b,GACvB,MAAqB,mBAAVA,EACAA,EAAMa,MAAQb,EAAM0F,WACV,iBAAV1F,GAA+B,MAATA,GAAuC,mBAAfA,EAAMwE,KACpDxE,EAAMwE,KAAK3D,MAAQb,EAAMwE,KAAKkB,WAElCkW,GAAgB5b,GAE3B,IAKI8b,IAJyC,oBAA1BC,uBAAyCA,uBACpDC,YACFva,KAAKoF,GAOX,SAASoV,GAAgBC,GACrB,MAAO,CAAErb,KAAM,SAAUnC,OAAQwd,EAAQC,cAAcC,aAM3D,SAASC,GAAkBH,GACvB,MAAO,CAAErb,KAAM,WAAYnC,OAAQwd,EAAQC,eAM/C,SAASG,GAAcJ,GACnB,MAAO,CAAErb,KAAM,OAAQnC,OAAQwd,EAAQC,cAAcI,MAoBzD,SAASC,GAAcxc,GACnB,OAAIA,aAAiByc,SACVzc,IAGAA;;;;;;;OAYf,IAAI0c,GAAY,GAEZC,GAA4B,QAC5BC,GAA2B,EAS3BC,GAAwB,KACxBC,GAAwB,EACxBC,GAAwB,EAMxBC,GAA2B,EAgB/B,SAASC,GAAqBjd,GAC1B,MAAO,CAACA,GAEZ,SAASkd,GAAUrJ,EAAO6B,GACtB,OAAgC,IAAxB7B,EAAMxK,MAAQqM,GAa1B,SAASyH,GAAmBtJ,EAAOuJ,EAAcC,GAC7C,IAAIC,GAAQ,EAMZ,GADoBJ,GAAUrJ,EAAO,MAOhC,IAAKwJ,EAAiB,CACvB,IAEIE,EAAwBH,EAAe,KACvC,MAEJE,GAJoBJ,GAAUrJ,EADHuJ,EAAe,KAAuC,UAInDvJ,EAAMxK,MAAQkU,KAA2BA,QAPvED,GAAuC,EAU3C,OAAOA,EAEX,SAASE,GAAY3J,EAAO6B,GACxB7B,EAAMxK,OAASqM,EAEnB,SAAS+H,GAAQ9S,EAASrI,GACtB,OAAOqI,EAAQrI,EAAQ,GAM3B,SAASob,GAAuB/S,EAASrI,GACrC,OACI,IADoC,EAL5C,SAASqb,EAAchT,EAASrI,GAC5B,OACI,EADGqI,EAAQrI,EAAQ,GAIfqb,CAAchT,EAASrI,IAGnC,SAASsb,GAAajT,EAASrI,EAAOub,GAGlC,OAAOlT,EAFQrI,GAASub,EAAgB,EACpC,IAQR,SAASC,GAAenT,GACpB,OAAOoT,GAAgBpT,GAAW,EAEtC,SAASoT,GAAgBpT,GACrB,OAAOA,EAAQ,GAEnB,SAASqT,GAAgBrT,EAASrI,EAAO2b,GACrC,OAAOtT,EAAQrI,EAAQ,EAA8B2b,GAEzD,SAASC,GAAgBvT,EAASrI,GAC9B,OAAOqI,EAAQrI,EAAQ,EAA8Byb,GAAgBpT,IAMzE,SAASwT,GAAS3O,EAAM8H,EAActX,GAClCwP,EAAK8H,GAAgBtX,EAEzB,SAASoe,GAAS5O,EAAM8H,GACpB,OAAwB,IAAjBA,EAAqB9H,EAAK8H,GAAgB,KAErD,SAAS+G,GAA2B1T,EAASkJ,EAAOuJ,GAChD,IAAIkB,EAAgB,EAKpB,OAHIpB,GAAUrJ,EADHuJ,EAAe,IAAgC,SAEtDkB,GAAiB,EAA8BR,GAAenT,IAE3D2T,EAEX,SAASC,GAAgBC,EAAGthB,GACxB,GAAIA,IAAMwf,GACN,OAAO,EACX,IAAI+B,EAAgBnhB,MAAM+H,QAAQmZ,GAAKA,EAAE,GAA4BA,EACjEE,EAAgBphB,MAAM+H,QAAQnI,GAAKA,EAAE,GAA4BA,EACrE,OAAQC,OAAOwhB,GAAGF,EAAeC,GAKrC,SAASE,GAAsB5e,GAM3B,OAAgB,MAATA,GAA2B,KAAVA,EAE5B,SAAS6e,GAAaL,EAAGthB,EAAG4hB,GAExB,YADkB,IAAdA,IAAwBA,EAAY,KACjCN,GAAMthB,EAAEmB,QAAUmgB,EAAEngB,OAAUygB,EAAY,IAAM5hB,EAE3D,SAAS6hB,GAAU/e,GACf,OAAOA,EAAM8K,QAAQ,eAAe,SAAUkU,GAAK,OAAOA,EAAEvU,OAAO,GAAK,IAAMuU,EAAEvU,OAAO,MAAOwU,cAUlG,SAASC,GAAmBlf,GACxB,OAAOmf,GAAiBnf,GACpBA,EAAM,GACNA,EAER,SAASmf,GAAiBnf,GAGtB,OAAO1C,MAAM+H,QAAQrF,IAAUA,EAAM3B,QAAU,GACvB,iBAAb2B,EAAM,GAQrB,SAASof,GAAuBzU,GAC5B,IAAIrF,EAAM4Z,GAAmBvU,GAC7B,OAAOrF,GAAOA,EAAI,IAA6B,GAEnD,SAAS+Z,GAAcxL,GACnB,OAAkD,IAA5B,GAAdA,EAAMxK,OAElB,SAASiW,GAAczL,GACnB,OAAkD,IAA5B,GAAdA,EAAMxK,OAElB,SAASkW,GAAWja,EAAKhD,GACrB,OAAOgD,EAAIhD,EAAQ,GAEvB,IAAIkd,GAAuE,CAAEA,iBAAiB,GAI9F,SAASC,GAAYna,EAAKhD,EAAOtC,GAC7BsF,EAAIhD,EAAQ,GAAuBtC,EAEvC,SAAS0f,GAAYpa,EAAKhD,GACtB,OAAOgD,EAAIhD,EAAQ,GAQvB,SAASqd,GAAoB/P,EAAQgQ,GACjC,GAAqB,iBAAVhQ,EACP,OAAOA,EACX,IAAIiQ,EAAM,GACV,GAAIjQ,EAEA,IADA,IAAI9O,EAAQ3D,OAAO2iB,KAAKlQ,GACf1R,EAAI,EAAGA,EAAI4C,EAAMzC,OAAQH,IAAK,CACnC,IAAI6hB,EAAOjf,EAAM5C,GACb8hB,EAAYJ,EAAiBb,GAAUgB,GAAQA,EAC/C/f,EAAQ4P,EAAOmQ,GACL,OAAV/f,IACA6f,EAAMhB,GAAagB,EAAKG,EAAY,IAAMhgB,EAAO,MAI7D,OAAO6f,EAEX,SAASI,GAAoBC,GACzB,OAAOA,IAAwBtD,GAQnC,SAASuD,GAAmB7a,EAAK8X,GAE7B,IADA,IAAIyC,EAAM,GACD3hB,EAAI,EAA6BA,EAAIoH,EAAIjH,OAAQH,GAAK,EAAmB,CAC9E,IAAI6hB,EAAOR,GAAWja,EAAKpH,GACvB8B,EAAQ0f,GAAYpa,EAAKpH,GACzBkiB,EAAYvB,GAAakB,EAAM3C,EAAe,GAAKpd,EAAO,KAC9D6f,EAAMhB,GAAagB,EAAKO,EAAWhD,EAAe,IAAM,MAE5D,OAAOyC,EAuBX,SAASQ,GAAoBC,EAAeP,EAAM/f,EAAOugB,GACrD,IAAK,IAAIvW,EAAI,EAA6BA,EAAIsW,EAAcjiB,OAAQ2L,GAAK,EAAmB,CACxF,IAAIwW,EAAcjB,GAAWe,EAAetW,GAC5C,GAAI+V,GAAQS,EAAa,CACrB,IAAIC,GAAU,EAYd,OAXID,IAAgBT,GAEZQ,GAAmB3B,GADJ0B,EAActW,MAE7ByW,GAAU,EACVhB,GAAYa,EAAetW,EAAGhK,KAIlCygB,GAAU,EACVH,EAAclU,OAAOpC,EAAG,EAAG+V,EAAM/f,IAE9BygB,GAIf,OADAH,EAAcjgB,KAAK0f,EAAM/f,IAClB,EAgBX,SAAS0gB,GAAwBC,EAAcC,EAAWC,GACtD,IAAIP,EAAgBhjB,MAAM+H,QAAQsb,GAAgBA,EAAe1D,GAAqB,MACtFqD,EAAc,GAA4BM,EAM1C,IAAK,IAAI5W,EAAI,EAA6BA,EAAIsW,EAAcjiB,OAAQ2L,GAAK,EACrEyV,GAAYa,EAAetW,EAAG,MAElC,IACI1E,EADAxE,EAAQ,KAERggB,GAAgB,EASpB,GARyB,iBAAdF,EAEPE,EAA0B,QAD1BhgB,EAiBR,SAASigB,EAAkBxW,GAKvB,IAJA,IAAIyW,EAAQ,KACR3iB,EAASkM,EAAKlM,OACd4iB,EAAQ,EACRC,GAAY,EACPhjB,EAAI,EAAGA,EAAIG,EAAQH,IACbqM,EAAK2Q,WAAWhd,IACf,IACJgjB,IACc,OAAVF,IACAA,EAAQ,IACZA,EAAM3gB,KAAKkK,EAAK1E,UAAUob,EAAO/iB,IACjCgjB,GAAY,GAEhBD,EAAQ/iB,EAAI,GAGZgjB,GAAY,EASpB,OANIA,IACc,OAAVF,IACAA,EAAQ,IACZA,EAAM3gB,KAAKkK,EAAK1E,UAAUob,EAAO5iB,IACjC6iB,GAAY,GAETF,EA3CKD,CAAkBH,KAI1B9f,EAAQ8f,EAAYzjB,OAAO2iB,KAAKc,GAAa,KAC7Ctb,EAAMsb,GAEN9f,EACA,IAAK,IAAI5C,EAAI,EAAGA,EAAI4C,EAAMzC,OAAQH,IAAK,CACnC,IAAI6hB,EAAOjf,EAAM5C,GAGjBmiB,GAAoBC,EAFNO,EAAiB9B,GAAUgB,GAAQA,IACrCe,GAAuBxb,EAAIya,IACY,GAG3D,OAAOO,EAgCX,SAASa,GAA0BrT,GAC/B,OAAOA,EAAOtQ,eAAe,SAAW,QAAU;;;;;;;OAatD,IAAI4jB,GAAwB;;;;;;;OA6B5B,SAASC,GAAYrhB,GACjB,KAAO1C,MAAM+H,QAAQrF,IACjBA,EAAQA,EAAMiS,IAElB,OAAOjS,EAkCX,SAASshB,GAAiBhf,EAAOkT,GAC7B,OAAO6L,GAAY7L,EAAMlT,EAAQ6Q,KAUrC,SAASoO,GAAiB1N,EAAO2B,GAK7B,OAFW6L,GAAY7L,EAAM3B,EAAMvR,QAYvC,SAASkf,GAAuB3N,EAAO2B,GACnC,IAAIlT,EAAQuR,EAAMvR,MAClB,OAAe,IAAXA,EAEW+e,GAAY7L,EAAMlT,IAI1B,KAEX,SAASmf,GAASnf,EAAOof,GAGrB,OAAOA,EAAKxP,IAAO1C,KAAKlN,EAAQ6Q,IAGpC,SAASwO,GAAKD,EAAMpf,GAEhB,OAAOof,EAAKpf,EAAQ6Q,IAExB,SAASyO,GAAyBC,EAAWC,GAGzC,IAAIC,EAAYD,EAASD,GAEzB,OADYnO,GAAQqO,GAAaA,EAAYA,EAAU9P,IAO3D,SAAS+P,GAAgBtjB,GAErB,OAAOA,EAAO0iB,KAA0B,KAE5C,SAASa,GAAiBvjB,GACtB,IAAIsB,EAAQgiB,GAAgBtjB,GAC5B,OAAIsB,EACO1C,MAAM+H,QAAQrF,GAASA,EAAQA,EAAMwV,MAEzC,KAGX,SAAS0M,GAAeR,GACpB,OAAgD,IAA1B,EAAdA,EAAKvP,KAgBjB,SAASgQ,GAAYzU,EAAQpL,GACzB,OAAkB,OAAXoL,GAA4B,MAATpL,EAAgB,KAAOoL,EAAOpL,GAM5D,SAAS8f,GAAuB5M,GAC5BA,EAAMtC,IAAuB;;;;;;;OAejC,SAASmP,GAAe7M,GAEpB,IAAIoD,EAASpD,EAAMpD,IACnB,OAAOuB,GAAaiF,GAAUA,EAAOxG,IAAUwG,EA4BnD,SAAS0J,GAAkB9M,GAGvB,IAFA,IACI+M,EADAC,EAAYhN,EAAMjD,IAED,OAAdiQ,GAAyC,IAAnBA,EAAUhe,MACU,QAA5C+d,EAAe/M,EAAMxC,MAEtBwP,GADAhN,EAAQ+M,GACUhQ,IAGtB,OAAOiD,EASX,SAASiN,GAAeC,GAIpB,OA1CJ,SAASC,EAAYC,GAGjB,IADA,IAAIpN,EAAQ9B,GAAQkP,GAAoBA,EAAmBX,GAAiBW,GACrEpN,KAA0B,IAAfA,EAAMrD,MACpBqD,EAAQ6M,GAAe7M,GAG3B,OAAOA,EAgCQmN,CAAYD,GAGXjQ;;;;;;;OA8CpB,IAAIoQ,IAAuB,EAC3B,SAASC,GAAwB9D,GAC7B,IAAI+D,EAAWF,GAEf,OADAA,GAAuB7D,EAChB+D,EAOX,IACIC,GAAaC,IAEbC,GAAkB,EA8CtB,SAASC,GAA+BtP,EAAOiO,GAC3C,IAAIsB,EAAwBC,GAAiBxP,EAAOiO,GACpD,IAA+B,IAA3BsB,EACA,OAAOA,EAEX,IAAIpT,EAAQ8R,EAAS5P,IACjBlC,EAAMsT,kBACNzP,EAAM0P,cAAgBzB,EAASzjB,OAC/BmlB,GAAYxT,EAAMR,KAAMqE,GACxB2P,GAAY1B,EAAU,MACtB0B,GAAYxT,EAAMyT,UAAW,OAEjC,IAAIC,EAAYC,GAA0B9P,EAAOiO,GAC7CyB,EAAgB1P,EAAM0P,cAG1B,GAAIpI,GAAkBuI,GAMlB,IALA,IAAIE,EAAcvI,GAAuBqI,GACrCG,EAActI,GAAsBmI,EAAW5B,GAC/CgC,EAAaD,EAAY3R,IAAO1C,KAG3BtR,EAAI,EAAGA,EAAI,EAAGA,IACnB4jB,EAASyB,EAAgBrlB,GAAK2lB,EAAYD,EAAc1lB,GAAK4lB,EAAWF,EAAc1lB,GAI9F,OADA4jB,EAASyB,EAAgBpP,IAAmBuP,EACrCH,EAEX,SAASC,GAAY9X,EAAKqY,GACtBrY,EAAIrL,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG0jB,GAErC,SAASV,GAAiBxP,EAAOiO,GAC7B,OAA6B,IAAzBjO,EAAM0P,eAGL1P,EAAM+E,QAAU/E,EAAM+E,OAAO2K,gBAAkB1P,EAAM0P,eAGH,MAAnDzB,EAASjO,EAAM0P,cAAgBpP,KACvB,EAGDN,EAAM0P,cASrB,SAASI,GAA0B9P,EAAO6N,GACtC,GAAI7N,EAAM+E,SAA0C,IAAhC/E,EAAM+E,OAAO2K,cAC7B,OAAO1P,EAAM+E,OAAO2K,cAOxB,IAFA,IAAIS,EAAYtC,EAAKnP,IACjBmJ,EAAa,EACVsI,IAA0C,IAA7BA,EAAUT,eAE1BS,GADAtC,EAAOA,EAAK1O,KACO0O,EAAKnP,IAAU,KAClCmJ,IAEJ,OAAOsI,EACHA,EAAUT,cAAiB7H,GAAc,IACxC,EAST,SAASuI,GAAmBV,EAAevT,EAAOhN,IAlHlD,SAASkhB,EAASX,EAAevT,EAAOxL,GAEpC,IAAImL,EAAqB,iBAATnL,EAAoBA,EAAKsD,IAAiBtD,EAAK0W,WAAW,IAAM,EAGtE,MAANvL,IACAA,EAAKnL,EAAKsD,IAAiBob,MAI/B,IAAIiB,EAAWxU,EAAKqT,GAIhBoB,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EACLI,EAAQvU,EAAMR,KAHE,IAAX2U,EAKLE,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EAG5EC,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,IAAkBa,EAwF5EF,CAASX,EAAevT,EAAOhN,GAiCnC,SAASwhB,GAAoB3Q,EAAO4Q,GAGhC,GAAyB,UAArBA,EACA,OAAOrF,GAAuBvL,EAAM6Q,SAExC,GAAyB,UAArBD,EACA,OAAOrF,GAAuBvL,EAAMjE,QAExC,IAAI2K,EAAQ1G,EAAM0G,MAClB,GAAIA,EAGA,IAFA,IAAIoK,EAAcpK,EAAMlc,OACpBH,EAAI,EACDA,EAAIymB,GAAa,CACpB,IAAI3kB,EAAQua,EAAMrc,GAElB,GAAI8c,GAA0Bhb,GAC1B,MAEJ,GAAc,IAAVA,EAKA9B,GAAQ,OAEP,GAAqB,iBAAV8B,EAGZ,IADA9B,IACOA,EAAIymB,GAAmC,iBAAbpK,EAAMrc,IACnCA,QAGH,CAAA,GAAI8B,IAAUykB,EACf,OAAOlK,EAAMrc,EAAI,GAGjBA,GAAQ,GAIpB,OAAO,KAmBX,SAAS0mB,GAAsB/Q,EAAO2B,EAAOxS,EAAOqG,EAAOM,GAEvD,QADc,IAAVN,IAAoBA,EAAQhN,EAAQyG,YAAYwG,SAChDuK,EAAO,CACP,IAAIgR,EA6NZ,SAASC,EAAsB9hB,GAE3B,GAAqB,iBAAVA,EACP,OAAOA,EAAMkY,WAAW,IAAM,EAElC,IAAI6J,EAAU/hB,EAAM8E,IAEpB,MAA2B,iBAAZid,GAAwBA,EAAU,EAAKA,EAAU/B,GAAa+B,EApOzDD,CAAsB9hB,GAGtC,GAAyB,mBAAd6hB,EAA0B,CACjC9M,GAAQvC,EAAO3B,GACf,IACI,IAAI7T,EAAQ6kB,IACZ,GAAa,MAAT7kB,GAAmBqJ,EAAQhN,EAAQyG,YAAYI,SAI/C,OAAOlD,EAHP,MAAM,IAAI2D,MAAM,mBAAqBkY,GAAkB7Y,GAAS,KAMxE,QACImV,WAGH,GAAwB,iBAAb0M,EAAuB,CACnC,IAAmB,IAAfA,EAEA,OAAO,IAAIG,GAAanR,EAAO2B,GAMnC,IAAIyP,EAAgB,KAChB1B,EAAgBF,GAAiBxP,EAAO2B,GACxC4F,EAAiB/G,GACjB6Q,EAAmB7b,EAAQhN,EAAQyG,YAAYO,KAAOif,GAAkB9M,GAAOjD,IAAU,KAkB7F,MAduB,IAAnBgR,GAAwBla,EAAQhN,EAAQyG,YAAYM,YACpDgY,GAAoC,IAAnBmI,EAAuBI,GAA0B9P,EAAO2B,GACrEA,EAAM+N,EAAgBpP,IACrBgR,GAAmB9b,GAAO,IAI3B4b,EAAgBzP,EAAMtD,IACtBqR,EAAgBlI,GAAuBD,GACvC5F,EAAQ+F,GAAsBH,EAAgB5F,IAL9C+N,GAAiB,IAUC,IAAnBA,GAAsB,CACzBnI,EAAiB5F,EAAM+N,EAAgBpP,IAEvC,IAAInE,EAAQwF,EAAMtD,IAClB,GAAIkT,GAAcP,EAAWtB,EAAevT,EAAMR,MAAO,CAIrD,IAAI6V,EAAWC,GAAuB/B,EAAe/N,EAAOxS,EAAOiiB,EAAe5b,EAAO6b,GACzF,GAAIG,IAAaE,GACb,OAAOF,EAGXF,GAAmB9b,EAAOmM,EAAMtD,IAAO1C,KAAK+T,EAAgBrP,MAAWgR,IACvEE,GAAcP,EAAWtB,EAAe/N,IAGxCyP,EAAgBjV,EAChBuT,EAAgBlI,GAAuBD,GACvC5F,EAAQ+F,GAAsBH,EAAgB5F,IAM9C+N,GAAiB,IASjC,GAJIla,EAAQhN,EAAQyG,YAAYI,eAA8Be,IAAlB0F,IAExCA,EAAgB,MAEoD,IAAnEN,GAAShN,EAAQyG,YAAYK,KAAO9G,EAAQyG,YAAYO,OAAc,CACvE,IAAImiB,EAAiBhQ,EAAM9C,IAIvB+S,EAA+Bxc,QAAwBhF,GAC3D,IACI,OAAIuhB,EACOA,EAAehc,IAAIxG,EAAO2G,EAAeN,EAAQhN,EAAQyG,YAAYI,UAGrEqG,GAAmBvG,EAAO2G,EAAeN,EAAQhN,EAAQyG,YAAYI,UAGpF,QACI+F,GAAwBwc,IAGhC,GAAIpc,EAAQhN,EAAQyG,YAAYI,SAC5B,OAAOyG,EAGP,MAAM,IAAIhG,MAAM,4BAA8BkY,GAAkB7Y,GAAS,KAGjF,IAAIuiB,GAAY,GAChB,SAASD,GAAuB/B,EAAe/N,EAAOxS,EAAOiiB,EAAe5b,EAAO6b,GAC/E,IAAIQ,EAAelQ,EAAMtD,IACrB2B,EAAQ6R,EAAalW,KAAK+T,EAAgBrP,IAsB1CyR,EAAgBC,GAA0B/R,EAAO6R,EAAc1iB,EAnBrB,MAAjBiiB,EAQxBnR,GAAgBD,IAAUgP,GAO1BoC,GAAiBS,GAAgC,IAAf7R,EAAMrP,KAGpB6E,EAAQhN,EAAQyG,YAAYO,MAAS6hB,IAAqBrR,GAEnF,OAAsB,OAAlB8R,EACOE,GAAkBH,EAAalW,KAAMgG,EAAOmQ,EAAe9R,GAG3D0R,GAaf,SAASK,GAA0B/R,EAAO7D,EAAOhN,EAAO8iB,EAAwBC,GAU5E,IATA,IAAIC,EAAsBnS,EAAMoS,gBAC5BC,EAAelW,EAAMR,KACrB2W,EAAyC,MAAtBH,EACnBI,EAAkBvS,EAAMwS,eAExBC,EAAwBN,GAAuB,GAG/CO,EAAWR,EAAoBI,EAAmBG,EAJnCzS,EAAM2S,aAKhBtoB,EAHW4nB,EAAyBK,EAAmBA,EAAmBG,EAGvDpoB,EAAIqoB,EAAUroB,IAAK,CAC3C,IAAIuoB,EAAqBP,EAAahoB,GACtC,GAAIA,EAAIkoB,GAAmBpjB,IAAUyjB,GACjCvoB,GAAKkoB,GAAmBK,EAAmBjiB,OAASxB,EACpD,OAAO9E,EAGf,GAAI6nB,EAAmB,CACnB,IAAIW,EAASR,EAAaE,GAC1B,GAAIM,GAAU1S,GAAe0S,IAAWA,EAAOliB,OAASxB,EACpD,OAAOojB,EAGf,OAAO,KASX,SAASP,GAAkBtB,EAAO/O,EAAOlT,EAAOuR,GAC5C,IAAI7T,EAAQwV,EAAMlT,GAClB,GA50DJ,SAASqkB,EAAUnc,GACf,OAAOA,aAAe8J,GA20DlBqS,CAAU3mB,GAAQ,CAClB,IAAI5D,EAAU4D,EACd,GAAI5D,EAAQqY,UACR,MAAM,IAAI9Q,MAAM,oBAAsBkY,GAAkB0I,EAAMjiB,KAElE,IAAIskB,EAA+B9D,GAAwB1mB,EAAQsY,qBACnEtY,EAAQqY,WAAY,EACpB,IAAIgR,OAA+B,EAC/BrpB,EAAQuY,aACR8Q,EAA+Bxc,GAAwB7M,EAAQuY,aAEnEoD,GAAQvC,EAAO3B,GACf,IACI7T,EAAQwV,EAAMlT,GAASlG,EAAQA,aAAQ6H,EAAWsgB,EAAO/O,EAAO3B,GAEpE,QACQzX,EAAQuY,YACR1L,GAAwBwc,GAC5B3C,GAAwB8D,GACxBxqB,EAAQqY,WAAY,EACpB0D,MAGR,OAAOnY,EAuBX,SAASolB,GAAcP,EAAWtB,EAAesD,GAI7C,IAEIxC,EAAiB,GAAZQ,EACLP,EAAiB,GAAZO,EAeT,UAjBqB,IAAZA,EAQGR,EAAMC,EAAKuC,EAAatD,EAAgB,GAAKsD,EAAatD,EAAgB,GAC7Ee,EAAKuC,EAAatD,EAAgB,GAAKsD,EAAatD,EAAgB,GAGjEc,EAAMC,EAAKuC,EAAatD,EAAgB,GAAKsD,EAAatD,EAAgB,GAC7Ee,EAAKuC,EAAatD,EAAgB,GAAKsD,EAAatD,IAdlD,GAAKsB,GAqBpB,SAASM,GAAmB9b,EAAOyd,GAC/B,QAASzd,EAAQhN,EAAQyG,YAAYK,MAAWkG,EAAQhN,EAAQyG,YAAYO,MAAQyjB,GAExF,IAAI9B,GAA8B,WAC9B,SAASA,EAAa+B,EAAQC,GAC1BjqB,KAAKgqB,OAASA,EACdhqB,KAAKiqB,OAASA,EAKlB,OAHAhC,EAAapnB,UAAU4L,IAAM,SAAUxG,EAAO2G,GAC1C,OAAOib,GAAsB7nB,KAAKgqB,OAAQhqB,KAAKiqB,OAAQhkB,OAAOiB,EAAW0F,IAEtEqb,EARsB,GAajC,SAAS7Z,GAAe3G,GACpB,IAAI6G,EAAU7G,EACd,GAAI0B,EAAa1B,GACb,OAAO,WACH,IAAIpI,EAAU+O,GAAelF,EAAkBoF,IAC/C,OAAOjP,EAAUA,IAAY,MAGrC,IAAIA,EAAU2V,GAAc1G,GAC5B,GAAgB,OAAZjP,EAAkB,CAClB,IAAI6qB,EAAcpiB,EAAewG,GACjCjP,EAAU6qB,GAAeA,EAAY7qB,QAEzC,OAAOA,GAAW,KAKtB,SAAS8qB,GAAsB1iB,GAC3B,IAAI2iB,EAAQhqB,OAAOiqB,eAAe5iB,EAAK5G,WAAWD,YAC9CvB,EAAU+qB,EAAMvf,KAAmBuD,GAAegc,GACtD,OAAgB,OAAZ/qB,EACOA,EAOA,SAAU4B,GAAK,OAAO,IAAIA;;;;;;;OAWzC,IACIqpB,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBAkBnB,SAASC,GAAgBlnB,GACrB,OAAOA,EAAM+mB,IAEjB,SAASI,GAAiBnnB,GACtB,OAAOA,EAAMgnB,IAKjB,SAASI,GAAmBC,GAExB,IADA,IAAI5lB,EAAS,GACJR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/BomB,EAAQrnB,MAAM/B,MAAMopB,EAASpnB,EAASwB;;;;;;;OAmC1C,IAAI6lB,GAA8B,WAC9B,SAASA,IAIL7qB,KAAK8qB,SAAWF,QAgCpB,OA9BAC,EAAahqB,UAAUkqB,YAAc,SAAUxnB,GAC3C,IAAIynB,EAAgBhrB,KAAKirB,mBAAmB1nB,GACxCqK,EAAU5N,KAAKkrB,aAAa3nB,GAG5B4nB,EAvDZ,SAASC,EAAe7nB,GACpB,OAAOA,EAAMinB,KAAiBG,GAsDRS,CAAe7nB,GACjC4nB,EAAYnrB,KAAK8qB,SAAU,QAASvnB,GAChCynB,GACAG,EAAYnrB,KAAK8qB,SAAU,iBAAkBE,GAE7Cpd,GACAud,EAAYnrB,KAAK8qB,SAAU,gBAAiBld,IAIpDid,EAAahqB,UAAUqqB,aAAe,SAAU3nB,GAC5C,OAAIA,EACOknB,GAAgBlnB,GAASknB,GAAgBlnB,GAC5CvD,KAAKkrB,aAAaR,GAAiBnnB,IAEpC,MAGXsnB,EAAahqB,UAAUoqB,mBAAqB,SAAU1nB,GAElD,IADA,IAAIH,EAAIsnB,GAAiBnnB,GAClBH,GAAKsnB,GAAiBtnB,IACzBA,EAAIsnB,GAAiBtnB,GAEzB,OAAOA,GAEJynB,EArCsB,GA0E7BQ,GAA+B,WAC/B,SAASA,EAAcC,GACnBtrB,KAAKsrB,sCAAwCA,EAMjD,OAJAD,EAAcxqB,UAAU8H,SAAW,WAC/B,MAAO,0CAA4C3I,KAAKsrB,sCACpD,sCAEDD,EARuB,GAU9BE,GAA8B,SAAUC,GAExC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAG/D,OALAU,EAAU6qB,EAAcC,GAIxBD,EAAa1qB,UAAU4qB,YAAc,WAAc,MAAO,QACnDF,EANsB,CAO/BF,IACEK,GAA+B,SAAUF,GAEzC,SAASE,IACL,OAAkB,OAAXF,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAG/D,OALAU,EAAUgrB,EAAeF,GAIzBE,EAAc7qB,UAAU4qB,YAAc,WAAc,MAAO,SACpDC,EANuB,CAOhCL,IACEM,GAAgC,SAAUH,GAE1C,SAASG,IACL,OAAkB,OAAXH,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAG/D,OALAU,EAAUirB,EAAgBH,GAI1BG,EAAe9qB,UAAU4qB,YAAc,WAAc,MAAO,UACrDE,EANwB,CAOjCN,IACEO,GAA6B,SAAUJ,GAEvC,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAG/D,OALAU,EAAUkrB,EAAaJ,GAIvBI,EAAY/qB,UAAU4qB,YAAc,WAAc,MAAO,OAClDG,EANqB,CAO9BP,IACEQ,GAAqC,SAAUL,GAE/C,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAG/D,OALAU,EAAUmrB,EAAqBL,GAI/BK,EAAoBhrB,UAAU4qB,YAAc,WAAc,MAAO,eAC1DI,EAN6B,CAOtCR;;;;;;;OACF,SAASS,GAAgB7oB,GACrB,OAAOA,aAAiBooB,GAAgBpoB,EAAMqoB,sCAC1CroB,EAER,SAAS8oB,GAAgC9oB,EAAOwE,GAC5C,IAAIukB,EAAaC,GAA0BhpB,GAC3C,GAAkB,MAAd+oB,GAAsBA,IAAevkB,EAAM,CAE3C,GAAmB,gBAAfukB,GAA2D,QAATvkB,EAClD,OAAO,EACX,MAAM,IAAIb,MAAM,mBAAqBa,EAAO,WAAaukB,EAAa,sCAE1E,OAAOA,IAAevkB,EAE1B,SAASwkB,GAA0BhpB,GAC/B,OAAOA,aAAiBooB,IAAiBpoB,EAAMwoB,eAAiB;;;;;;;;AA4EpE,IAAIS,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAkCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHAtsB,KAAKssB,WAAaA,EAClBtsB,KAAKusB,cAAgBvsB,KAAKssB,WAAWE,eAAeC,mBAAmB,sBACvEzsB,KAAK0sB,iBAAmB1sB,KAAKusB,cAAc/M,KACd,MAAzBxf,KAAK0sB,iBAA0B,CAG/B,IAAIC,EAAY3sB,KAAKusB,cAAcK,cAAc,QACjD5sB,KAAKusB,cAAcM,YAAYF,GAC/B3sB,KAAK0sB,iBAAmB1sB,KAAKusB,cAAcK,cAAc,QACzDD,EAAUE,YAAY7sB,KAAK0sB,kBAE/B1sB,KAAK0sB,iBAAiBI,UAAY,wDAC9B9sB,KAAK0sB,iBAAiBK,eAAkB/sB,KAAK0sB,iBAAiBK,cAAc,QAMhF/sB,KAAK0sB,iBAAiBI,UAClB,mEAOI9sB,KAAKgtB,oBANThtB,KAAK0sB,iBAAiBK,eAAiB/sB,KAAK0sB,iBAAiBK,cAAc,YAkHvF,SAASE,IACL,IACI,QAASvjB,OAAOwjB,UAEpB,MAAO5oB,GACH,OAAO;;;;;;;OAlHC2oB,GAC2BjtB,KAAKmtB,8BAKbntB,KAAKotB,mCAhB5BptB,KAAKgtB,oBAAsBhtB,KAAKqtB,wBA8GxC,OAvFAhB,EAAgBxrB,UAAUwsB,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAOhpB,GACH,OAAO,KAEX,IAAIkpB,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAK1mB,GACT,IAAIsY,EAAOgO,EAAIK,SAASrO,KAExB,OADAA,EAAKsO,YAAYtO,EAAKuO,YACfvO,GAOX6M,EAAgBxrB,UAAUssB,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAI9N,GAAO,IAAI9V,OACVwjB,WACAc,gBAAgBV,EAAM,aACtB9N,KAEL,OADAA,EAAKsO,YAAYtO,EAAKuO,YACfvO,EAEX,MAAOlb,GACH,OAAO,OASf+nB,EAAgBxrB,UAAUusB,kCAAoC,SAAUE,GAEpE,IAAIW,EAAajuB,KAAKusB,cAAcK,cAAc,YAClD,MAAI,YAAaqB,GACbA,EAAWnB,UAAYQ,EAChBW,IAEXjuB,KAAK0sB,iBAAiBI,UAAYQ,EAG9BttB,KAAKssB,WAAW4B,cAChBluB,KAAKmuB,mBAAmBnuB,KAAK0sB,kBAE1B1sB,KAAK0sB,mBAUhBL,EAAgBxrB,UAAUstB,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAGE,WAERntB,EAAIktB,EAAQ/sB,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACIwc,EADS0Q,EAAQtf,KAAK5N,GACJ2C,KACL,cAAb6Z,GAAyD,IAA7BA,EAAS9U,QAAQ,SAC7CulB,EAAGG,gBAAgB5Q,GAI3B,IADA,IAAI6Q,EAAYJ,EAAGL,WACZS,GACCA,EAAUC,WAAaC,KAAKC,cAC5B3uB,KAAKmuB,mBAAmBK,GAC5BA,EAAYA,EAAUI,aAGvBvC,EA/HyB,GAkLhCwC,GAAmB,8DAInBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAMpjB,OAAOojB,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACP5C,MACAxB,QAAQsE,KAAK,wCAA0CF,EAAM,sCAE1D,UAAYA,GAEvB,SAASG,GAAeC,GAEpB,OADAA,EAASxjB,OAAOwjB,IACFC,MAAM,KAAK9mB,KAAI,SAAU6mB,GAAU,OAAOL,GAAaK,EAAOE,WAAY9mB,KAAK;;;;;;;OAUjG,SAAS+mB,GAAOC,GACZ,IAAIC,EAAKnrB,EACLoE,EAAM,GACV,IACI,IAAK,IAAIgnB,EAAK/sB,EAAS6sB,EAAKH,MAAM,MAAOM,EAAKD,EAAG1sB,QAAS2sB,EAAGzsB,KAAMysB,EAAKD,EAAG1sB,OAEvE0F,EADQinB,EAAG1sB,QACF,EAGjB,MAAO2sB,GAASH,EAAM,CAAElsB,MAAOqsB,GAC/B,QACI,IACQD,IAAOA,EAAGzsB,OAASoB,EAAKorB,EAAGG,SAASvrB,EAAG/C,KAAKmuB,GAEpD,QAAU,GAAID,EAAK,MAAMA,EAAIlsB,OAEjC,OAAOmF,EAEX,SAASonB,KAGL,IAFA,IAAIC,EAAKzrB,EACL0rB,EAAO,GACFxrB,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCwrB,EAAKxrB,GAAMnD,UAAUmD,GAEzB,IAAIkE,EAAM,GACV,IACI,IAAK,IAAIunB,EAASttB,EAASqtB,GAAOE,EAAWD,EAAOjtB,QAASktB,EAAShtB,KAAMgtB,EAAWD,EAAOjtB,OAAQ,CAClG,IAAI9B,EAAIgvB,EAASjtB,MACjB,IAAK,IAAIgf,KAAK/gB,EACNA,EAAET,eAAewhB,KACjBvZ,EAAIuZ,IAAK,IAIzB,MAAOkO,GAASJ,EAAM,CAAExsB,MAAO4sB,GAC/B,QACI,IACQD,IAAaA,EAAShtB,OAASoB,EAAK2rB,EAAOJ,SAASvrB,EAAG/C,KAAK0uB,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIxsB,OAEjC,OAAOmF,EAOX,IAwKI0nB,GA0DOC,GAlOPC,GAAgBf,GAAO,0BAGvBgB,GAAkChB,GAAO,kDACzCiB,GAAmCjB,GAAO,SAC1CkB,GAA4BX,GAAMU,GAAkCD,IAEpEG,GAAiBZ,GAAMS,GAAiChB,GAAO,oMAI/DoB,GAAkBb,GAAMU,GAAkCjB,GAAO,+LAGjEqB,GAAiBd,GAAMQ,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYtB,GAAO,gEAEnBuB,GAAevB,GAAO,UACtBwB,GAAaxB,GAAO,idAMpByB,GAAazB,GAAO,4qBAapB0B,GAAcnB,GAAMe,GAAWC,GAAcC,GAAYC,IAMzDE,GAA8C3B,GAAO,yBAKrD4B,GAA0C,WAC1C,SAASA,IAGLnxB,KAAKoxB,oBAAqB,EAC1BpxB,KAAKqxB,IAAM,GA2Ff,OAzFAF,EAAyBtwB,UAAUywB,iBAAmB,SAAUlD,GAM5D,IAFA,IAAImD,EAAUnD,EAAGL,WACbyD,GAAkB,EACfD,GAWH,GAVIA,EAAQ9C,WAAaC,KAAKC,aAC1B6C,EAAkBxxB,KAAKyxB,aAAaF,GAE/BA,EAAQ9C,WAAaC,KAAKgD,UAC/B1xB,KAAK2xB,MAAMJ,EAAQK,WAInB5xB,KAAKoxB,oBAAqB,EAE1BI,GAAmBD,EAAQxD,WAC3BwD,EAAUA,EAAQxD,gBAGtB,KAAOwD,GAAS,CAERA,EAAQ9C,WAAaC,KAAKC,cAC1B3uB,KAAK6xB,WAAWN,GAEpB,IAAIvuB,EAAOhD,KAAK8xB,sBAAsBP,EAASA,EAAQ3C,aACvD,GAAI5rB,EAAM,CACNuuB,EAAUvuB,EACV,MAEJuuB,EAAUvxB,KAAK8xB,sBAAsBP,EAASA,EAAQQ,YAG9D,OAAO/xB,KAAKqxB,IAAI7oB,KAAK,KAUzB2oB,EAAyBtwB,UAAU4wB,aAAe,SAAUtS,GACxD,IAAI6S,EAAU7S,EAAQ8S,SAAS/P,cAC/B,IAAK0O,GAAenwB,eAAeuxB,GAE/B,OADAhyB,KAAKoxB,oBAAqB,GAClBF,GAA4CzwB,eAAeuxB,GAEvEhyB,KAAKqxB,IAAI/tB,KAAK,KACdtD,KAAKqxB,IAAI/tB,KAAK0uB,GAEd,IADA,IAAI3D,EAAUlP,EAAQmP,WACbntB,EAAI,EAAGA,EAAIktB,EAAQ/sB,OAAQH,IAAK,CACrC,IAAI+wB,EAAS7D,EAAQtf,KAAK5N,GACtBwc,EAAWuU,EAAOpuB,KAClBquB,EAAQxU,EAASuE,cACrB,GAAK+O,GAAYxwB,eAAe0xB,GAAhC,CAIA,IAAIlvB,EAAQivB,EAAOjvB,MAEf4tB,GAAUsB,KACVlvB,EAAQ8rB,GAAa9rB,IACrB6tB,GAAaqB,KACblvB,EAAQksB,GAAelsB,IAC3BjD,KAAKqxB,IAAI/tB,KAAK,IAAKqa,EAAU,KAAMyU,GAAenvB,GAAQ,UATtDjD,KAAKoxB,oBAAqB,EAYlC,OADApxB,KAAKqxB,IAAI/tB,KAAK,MACP,GAEX6tB,EAAyBtwB,UAAUgxB,WAAa,SAAUN,GACtD,IAAIS,EAAUT,EAAQU,SAAS/P,cAC3B0O,GAAenwB,eAAeuxB,KAAa1B,GAAc7vB,eAAeuxB,KACxEhyB,KAAKqxB,IAAI/tB,KAAK,MACdtD,KAAKqxB,IAAI/tB,KAAK0uB,GACdhyB,KAAKqxB,IAAI/tB,KAAK,OAGtB6tB,EAAyBtwB,UAAU8wB,MAAQ,SAAUA,GAAS3xB,KAAKqxB,IAAI/tB,KAAK8uB,GAAeT,KAC3FR,EAAyBtwB,UAAUixB,sBAAwB,SAAUO,EAAMC,GACvE,GAAIA,IACCD,EAAKE,wBAAwBD,GAC1B5D,KAAK8D,kCAAoC9D,KAAK8D,+BAClD,MAAM,IAAI5rB,MAAM,6DAA+DyrB,EAAKI,WAExF,OAAOH,GAEJnB,EAhGkC,GAmGzCuB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASP,GAAenvB,GACpB,OAAOA,EAAM8K,QAAQ,KAAM,SACtBA,QAAQ2kB,IAAuB,SAAUzD,GAG1C,MAAO,MAAyB,MAFvBA,EAAM9Q,WAAW,GAEJ,QADZ8Q,EAAM9Q,WAAW,GACqB,OAAU,OAAW,OAEpEpQ,QAAQ4kB,IAAyB,SAAU1D,GAAS,MAAO,KAAOA,EAAM9Q,WAAW,GAAK,OACxFpQ,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAAS6kB,GAActG,EAAYuG,GAC/B,IAAInG,EAAmB,KACvB,IACI0D,GAAkBA,IAAmB,IAAI/D,GAAgBC,GAEzD,IAAIwG,EAAaD,EAAkBjnB,OAAOinB,GAAmB,GAC7DnG,EAAmB0D,GAAgBpD,oBAAoB8F,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAInsB,MAAM,yDAEpBmsB,IACAD,EAAaE,EACbA,EAAatG,EAAiBI,UAC9BJ,EAAmB0D,GAAgBpD,oBAAoB8F,SAClDA,IAAeE,GACxB,IAAItW,EAAY,IAAIyU,GAChB8B,EAAWvW,EAAU4U,iBAAiB4B,GAAmBxG,IAAqBA,GAIlF,OAHIN,MAAe1P,EAAU0U,oBACzBxG,QAAQsE,KAAK,mFAEV+D,EAEX,QAEI,GAAIvG,EAEA,IADA,IAAIyG,EAAWD,GAAmBxG,IAAqBA,EAChDyG,EAASpF,YACZoF,EAASrF,YAAYqF,EAASpF,aAK9C,SAASmF,GAAmB9E,GACxB,MAAO,YAAaA,GAIxB,SAASgF,EAAkBhF,GACvB,OAAOA,EAAGK,WAAaC,KAAKC,cAAgC,aAAhBP,EAAG6D;;;;;;;OALamB,CAAkBhF,GAC1EA,EAAGiF,QACH,MAaGhD,GAOR/wB,EAAQ+wB,kBAAoB/wB,EAAQ+wB,gBAAkB,KANrCA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK;;;;;;;;AAwB3D,IAMIiD,GAAmB,IAAIC,OAAO,gMAEZ,KAmBlBC,GAAS,mBA2Bb,SAASC,GAAexwB,GAEpB,KADAA,EAAQ2I,OAAO3I,GAAOqsB,QAElB,MAAO,GAGX,IAAIoE,EAAWzwB,EAAMgsB,MAAMuE,IAC3B,OAAKE,GAAY3E,GAAa2E,EAAS,MAAQA,EAAS,IACpDzwB,EAAMgsB,MAAMqE,KA1BpB,SAASK,EAAkB1wB,GAGvB,IAFA,IAAI2wB,GAAgB,EAChBC,GAAgB,EACX1yB,EAAI,EAAGA,EAAI8B,EAAM3B,OAAQH,IAAK,CACnC,IAAIW,EAAImB,EAAMyK,OAAOvM,GACX,MAANW,GAAc+xB,EACdD,GAAiBA,EAEN,MAAN9xB,GAAa8xB,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkB1wB,GAC5CA,GAEPmpB,MACAxB,QAAQsE,KAAK,0CAA4CjsB,EAAQ,uCAE9D;;;;;;;OAyBX,SAAS6wB,GAAehB,GACpB,IAAIpW,EAAYqX,KAChB,OAAIrX,EACOA,EAAUsX,SAAS10B,EAAQ+wB,gBAAgB4D,KAAMnB,IAAe,GAEvE/G,GAAgC+G,EAAY,QACrChH,GAAgBgH,GAEpBF,GAAc9V,KAAe+B,GAAgBiU,IAiBxD,SAASoB,GAAgBC,GACrB,IAAIzX,EAAYqX,KAChB,OAAIrX,EACOA,EAAUsX,SAAS10B,EAAQ+wB,gBAAgB+D,MAAOD,IAAgB,GAEzEpI,GAAgCoI,EAAa,SACtCrI,GAAgBqI,GAEpBV,GAAe5U,GAAgBsV,IAkB1C,SAASE,GAAcC,GACnB,IAAI5X,EAAYqX,KAChB,OAAIrX,EACOA,EAAUsX,SAAS10B,EAAQ+wB,gBAAgBkE,IAAKD,IAAc,GAErEvI,GAAgCuI,EAAW,OACpCxI,GAAgBwI,GAEpBvF,GAAalQ,GAAgByV,IAaxC,SAASE,GAAsBC,GAC3B,IAAI/X,EAAYqX,KAChB,GAAIrX,EACA,OAAOA,EAAUsX,SAAS10B,EAAQ+wB,gBAAgBqE,aAAcD,IAAsB,GAE1F,GAAI1I,GAAgC0I,EAAmB,eACnD,OAAO3I,GAAgB2I,GAE3B,MAAM,IAAI7tB,MAAM,iFAcpB,SAAS+tB,GAAiBC,GACtB,IAAIlY,EAAYqX,KAChB,GAAIrX,EACA,OAAOA,EAAUsX,SAAS10B,EAAQ+wB,gBAAgBwE,OAAQD,IAAiB,GAE/E,GAAI7I,GAAgC6I,EAAc,UAC9C,OAAO9I,GAAgB8I,GAE3B,MAAM,IAAIhuB,MAAM,yCASpB,SAASkuB,GAAgBC,EAAK/R,GAC1B,MAAc,QAATA,IAA2B,UAAR+R,GAA2B,UAARA,GAA2B,WAARA,GAClD,UAARA,GAA2B,WAARA,IACT,SAAT/R,IAA4B,SAAR+R,GAA0B,SAARA,GAChCP,GAEJH,GAiBX,SAASW,GAA2BV,EAAWS,EAAK/R,GAChD,OAAO8R,GAAgBC,EAAK/R,EAArB8R,CAA2BR,GAQtC,IAAIW,GAA0B,SAAUjS,EAAM/f,EAAOiX,GAEjD,IAAIgb,GAAkB,EAMtB,OALW,GAFXhb,EAAOA,GAAQ,KAGXgb,EAA2B,qBAATlS,GAAwC,eAATA,GACpC,iBAATA,GAAoC,WAATA,GAA8B,eAATA,GACvC,qBAATA,GAAwC,cAATA,GAE5B,EAAP9I,EACOgb,EAAkBhB,GAAgBjxB,GAASA,EAG3CiyB,GAmBf,SAASnB,KACL,IAAItb,EAAQD,KACZ,OAAOC,GAASA,EAAM3C;;;;;;;OAoD1B,IAAIqf,GAAoB,WAUxB,SAASC,GAA2BnyB,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAM0F,WAAWqG,MAAM,EAAG,IAAM/L,EAE3D,MAAOG,GACH,MAAO;;;;;;;OA8Bf,SAASiyB,GAAY1zB,GACjB,IAAI2zB,EAAUrQ,GAAgBtjB,GAC9B,GAAI2zB,GAGA,GAAI/0B,MAAM+H,QAAQgtB,GAAU,CACxB,IAAI7c,EAAQ6c,EACRxQ,OAAY,EACZyQ,OAAYruB,EACZiM,OAAajM,EACjB,GA0HZ,SAASsuB,EAAoBlN,GACzB,OAAOA,GAAYA,EAAS1nB,aAAe0nB,EAAS1nB,YAAYwJ,KA3HpDorB,CAAoB7zB,GAAS,CAE7B,IAAkB,IADlBmjB,EAAY2Q,GAAiBhd,EAAO9W,IAEhC,MAAM,IAAIiF,MAAM,2DAEpB2uB,EAAY5zB,OAEX,GAsHjB,SAAS+zB,EAAoBpN,GACzB,OAAOA,GAAYA,EAAS1nB,aAAe0nB,EAAS1nB,YAAY0J,KAvH/CorB,CAAoB/zB,GAAS,CAElC,IAAkB,IADlBmjB,EAsLhB,SAAS6Q,EAAiBld,EAAOmd,GAO7B,IADA,IAAI9e,EAAQ2B,EAAMtD,IAAO4Y,WAClBjX,GAAO,CAGV,IAFA,IACI+e,EAAoB/e,EAAM2S,aACrBtoB,EAFiB2V,EAAMwS,eAEEnoB,EAAI00B,EAAmB10B,IACrD,GAAIsX,EAAMtX,KAAOy0B,EACb,OAAO9e,EAAMvR,MAGrBuR,EAAQgf,GAAoBhf,GAEhC,OAAQ,EAvMgB6e,CAAiBld,EAAO9W,IAEhC,MAAM,IAAIiF,MAAM,2DAEpBuM,EAAa4iB,GAAyBjR,EAAWrM,GAAO,QAIxD,IAAkB,IADlBqM,EAAYkR,GAAqBvd,EAAO9W,IAEpC,OAAO,KAOf,IACIs0B,EAAchR,GADd1H,EAAS+G,GAAY7L,EAAMqM,KAE3BlX,EAAWqoB,IAAgB11B,MAAM+H,QAAQ2tB,GACzCA,EACAC,GAAezd,EAAOqM,EAAWvH,GAOrC,GALIgY,QAAmCruB,IAAtB0G,EAAQ2nB,YACrB3nB,EAAQ2nB,UAAYA,EACpBY,GAAgBvoB,EAAQ2nB,UAAW3nB,IAGnCuF,QAAqCjM,IAAvB0G,EAAQuF,WAA0B,CAChDvF,EAAQuF,WAAaA,EACrB,IAAK,IAAIhS,EAAI,EAAGA,EAAIgS,EAAW7R,OAAQH,IACnCg1B,GAAgBhjB,EAAWhS,GAAIyM,GAGvCuoB,GAAgBvoB,EAAQ2P,OAAQ3P,GAChC0nB,EAAU1nB,QASd,IALA,IAAIwoB,EAAWz0B,EAIXwxB,EAAWiD,EACRjD,EAAWA,EAASpB,YAAY,CACnC,IAAIsE,EAAgBpR,GAAgBkO,GACpC,GAAIkD,EAAe,CAUf,GATI5d,OAAQ,IAERA,EADAlY,MAAM+H,QAAQ+tB,GACNA,EAGAA,EAAc5d,OAKtB,OAAO,KAEX,IAAIlT,EAAQywB,GAAqBvd,EAAO2d,GACxC,GAAI7wB,GAAS,EAAG,CACZ,IAAIgY,EAEJ4Y,GAFI5Y,EAAS+G,GAAY7L,EAAMlT,IAC3BqI,EAAUsoB,GAAezd,EAAOlT,EAAOgY,IAE3C+X,EAAU1nB,EACV,QAKhB,OAAO0nB,GAAW,KAKtB,SAASY,GAAezd,EAAOqM,EAAWvH,GACtC,MAAO,CACH9E,MAAOA,EACPqM,UAAWA,EACXvH,OAAQA,EACRgY,eAAWruB,EACXiM,gBAAYjM,EACZovB,eAAWpvB,GASnB,SAASqvB,GAA2BC,GAChC,IACI7R,EADAlM,EAAQwM,GAAgBuR,GAE5B,GAAIj2B,MAAM+H,QAAQmQ,GAAQ,CACtB,IAAIqM,EAAY2Q,GAAiBhd,EAAO+d,IAEpC5oB,EAAUsoB,GAAezd,EAAOqM,GADpCH,EAAOE,GAAyBC,EAAWrM,IACSvD,MAC5CqgB,UAAYiB,EACpBL,GAAgBK,EAAmB5oB,GACnCuoB,GAAgBvoB,EAAQ2P,OAAQ3P,OAE/B,CACD,IAAIA,EACJ+W,EAAOE,IADHjX,EAAU6K,GAC0BqM,UAAWlX,EAAQ6K,OAE/D,OAAOkM,EAMX,SAASwR,GAAgBx0B,EAAQ8Q,GAC7B9Q,EAAO0iB,IAAyB5R,EAWpC,SAASujB,GAAqBvd,EAAO9W,GAEjC,IADA,IAAImV,EAAQ2B,EAAMtD,IAAO4Y,WAClBjX,GAAO,CAEV,GADa2N,GAAuB3N,EAAO2B,KAC5B9W,EACX,OAAOmV,EAAMvR,MAEjBuR,EAAQgf,GAAoBhf,GAEhC,OAAQ,EAKZ,SAASgf,GAAoBhf,GACzB,GAAIA,EAAM8E,MACN,OAAO9E,EAAM8E,MAEZ,GAAI9E,EAAM9T,KACX,OAAO8T,EAAM9T,KAMb,KAAO8T,EAAM+E,SAAW/E,EAAM+E,OAAO7Y,MACjC8T,EAAQA,EAAM+E,OAElB,OAAO/E,EAAM+E,QAAU/E,EAAM+E,OAAO7Y,KAM5C,SAASyyB,GAAiBhd,EAAO+d,GAC7B,IAAIC,EAAmBhe,EAAMtD,IAAOuhB,WACpC,GAAID,EACA,IAAK,IAAIt1B,EAAI,EAAGA,EAAIs1B,EAAiBn1B,OAAQH,IAAK,CAC9C,IAAIw1B,EAAwBF,EAAiBt1B,GAE7C,GADoB0jB,GAAyB8R,EAAuBle,GAClD/C,MAAa8gB,EAC3B,OAAOG,OAOf,GAFwB9R,GAAyBzO,GAAeqC,GAC1B/C,MAChB8gB,EAGlB,OAAOpgB,GAGf,OAAQ,EAgCZ,SAAS2f,GAAyBjR,EAAWrM,EAAOme,GAChD,IAAI9f,EAAQ2B,EAAMtD,IAAO1C,KAAKqS,GAC1B+R,EAAsB/f,EAAMwS,eAChC,OAA2B,GAAvBuN,EACO5mB,KAEN2mB,GAAmC,EAAd9f,EAAMxK,OAC5BuqB,IACGpe,EAAMzJ,MAAM6nB,EAHK/f,EAAM2S,eAiClC,SAASqN,GAA4BhgB,GACjC,MAAM,IAAIlQ,MAAM,+CAAiDkQ,EAAMkb,SAa3E,SAAS+E,KACL,MAAM,IAAInwB,MAAM;;;;;;;;AAoCpB,SAASowB,GAAsBC,EAAgBC,EAAcjkB,EAAO6R,EAAWqS,EAA4BC,GAEvG,IAAIlmB,EAAYgmB,EAAahmB,UAAWC,EAAS+lB,EAAa/lB,OAAQE,EAAU6lB,EAAa7lB,QACzF8lB,GAA8B,KAC5BlkB,EAAMokB,eAAiBF,IAA+BlkB,EAAMokB,cAAc/1B,UAC3E4P,GAAaC,GAAUE,KACvB4B,EAAMokB,gBAAkBpkB,EAAMokB,cAAgB,KAAK/zB,KAAKwhB,GAEzDsS,GAAmC,KACjCnkB,EAAMqkB,oBACJF,IAAoCnkB,EAAMqkB,mBAAmBh2B,UAChE4P,GAAaG,KACb4B,EAAMqkB,qBAAuBrkB,EAAMqkB,mBAAqB,KAAKh0B,KAAKwhB,GAEnE5T,KACC+B,EAAMokB,gBAAkBpkB,EAAMokB,cAAgB,KAAK/zB,KAAK2zB,EAAgB/lB,IACxE+B,EAAMqkB,qBAAuBrkB,EAAMqkB,mBAAqB,KAAKh0B,KAAK2zB,EAAgB/lB,IAEnFC,IACC8B,EAAMokB,gBAAkBpkB,EAAMokB,cAAgB,KAAK/zB,MAAM2zB,EAAgB9lB,GAE1EE,KACC4B,EAAMokB,gBAAkBpkB,EAAMokB,cAAgB,KAAK/zB,KAAK2zB,EAAgB5lB,IACxE4B,EAAMqkB,qBAAuBrkB,EAAMqkB,mBAAqB,KAAKh0B,KAAK2zB,EAAgB5lB,IAqB3F,SAASkmB,GAAuBtkB,EAAO6D,GAKnC,IAAK,IAAI3V,EAAI2V,EAAMwS,eAAgBkO,EAAM1gB,EAAM2S,aAActoB,EAAIq2B,EAAKr2B,IAAK,CACvE,IAAI+1B,EAAejkB,EAAMR,KAAKtR,GAC1B+1B,EAAa3lB,mBACZ0B,EAAMwkB,eAAiBxkB,EAAMwkB,aAAe,KAAKn0B,MAAMnC,EAAG+1B,EAAa3lB,kBAExE2lB,EAAazlB,uBACZwB,EAAMwkB,eAAiBxkB,EAAMwkB,aAAe,KAAKn0B,KAAKnC,EAAG+1B,EAAazlB,sBACtEwB,EAAMykB,oBAAsBzkB,EAAMykB,kBAAoB,KAAKp0B,KAAKnC,EAAG+1B,EAAazlB,sBAEjFylB,EAAavlB,gBACZsB,EAAM0kB,YAAc1kB,EAAM0kB,UAAY,KAAKr0B,MAAMnC,EAAG+1B,EAAavlB,eAElEulB,EAAarlB,oBACZoB,EAAM0kB,YAAc1kB,EAAM0kB,UAAY,KAAKr0B,KAAKnC,EAAG+1B,EAAarlB,mBAChEoB,EAAM2kB,iBAAmB3kB,EAAM2kB,eAAiB,KAAKt0B,KAAKnC,EAAG+1B,EAAarlB,mBAEjD,MAA1BqlB,EAAanlB,YACZkB,EAAM4kB,eAAiB5kB,EAAM4kB,aAAe,KAAKv0B,KAAKnC,EAAG+1B,EAAanlB,YAoCnF,SAAS+lB,GAAkBrf,EAAOsf,EAAOjT,GACrCkT,GAAUvf,EAAOsf,EAAO,EAA4BjT,GAexD,SAASmT,GAAyBxf,EAAOsf,EAAOG,EAAWpT,IAEnC,EAAfrM,EAAMrD,OAAyC8iB,GAChDF,GAAUvf,EAAOsf,EAAOG,EAAWpT,GAG3C,SAASqT,GAAwB1f,EAAOyf,GAGpC,IAAI5rB,EAAQmM,EAAMrD,KACL,EAAR9I,KAAwC4rB,IACzC5rB,GAAS,KAETmM,EAAMrD,IADN9I,GAAS,GAkBjB,SAAS0rB,GAAU7b,EAAaxN,EAAKupB,EAAWE,GAO5C,IALA,IAGIC,EAAqC,MAApBD,EAA2BA,GAAoB,EAChEE,EAAqB,EAChBn3B,OAL6B+F,IAArBkxB,EACuB,MAAnCjc,EAAYhG,IACb,EAGqBhV,EAAIwN,EAAIrN,OAAQH,IAErC,GAAoB,iBADTwN,EAAIxN,EAAI,IAGf,GADAm3B,EAAqB3pB,EAAIxN,GACD,MAApBi3B,GAA4BE,GAAsBF,EAClD,WAIazpB,EAAIxN,GAAK,IAEtBgb,EAAYhG,KAAwB,QACpCmiB,EAAqBD,IAAqC,GAAnBA,KACvCE,GAASpc,EAAa+b,EAAWvpB,EAAKxN,GACtCgb,EAAYhG,KAC4B,WAAnCgG,EAAYhG,KAAuEhV,EAChF,GAEZA,IAYZ,SAASo3B,GAASpc,EAAa+b,EAAWvpB,EAAKxN,GAC3C,IAAIq3B,EAAa7pB,EAAIxN,GAAK,EACtBs3B,EAAO9pB,EAAIxN,EAAI,GAEfu3B,EAAYvc,EADKqc,GAAc7pB,EAAIxN,GAAKwN,EAAIxN,IAE5Cq3B,EAC4Brc,EAAY/G,KAAU,GAI7C+G,EAAYhG,KAAwB,KACf,EAArBgG,EAAY/G,OAAyC8iB,IACtD/b,EAAY/G,KAAU,KACtBqjB,EAAKl3B,KAAKm3B,IAIdD,EAAKl3B,KAAKm3B,GAMlB,IAqBIC,GAAuB;;;;;;;OAC3B,SAASC,GAAmBC,EAAkBC,GAC1C,IAAIC,EAAiBF,EAAiBv3B,OAIlC03B,EAAaH,EAAiB3W,cAAcrZ,QAAQiwB,GACpDG,EAAcD,EAAaF,EAAgBx3B,OAC/C,SAAoB,IAAhB03B,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,IAiB9D,SAASC,GAAmBpiB,EAAOqiB,EAAiBC,GAIhD,OAAOD,KAH+B,IAAfriB,EAAMrP,MAA+B2xB,EAExDtiB,EAAMkb,QADN2G,IAaR,SAASU,GAAuBviB,EAAOwiB,EAAUF,GAS7C,IAPA,IAAIlf,EAAO,EACPqf,EAAYziB,EAAM0G,OAAS,GAE3Bgc,EA2KR,SAASC,EAAuBF,GAC5B,IAAK,IAAIp4B,EAAI,EAAGA,EAAIo4B,EAAUj4B,OAAQH,IAElC,GAAI8c,GADWsb,EAAUp4B,IAErB,OAAOA,EAGf,OAAOo4B,EAAUj4B,OAlLOm4B,CAAuBF,GAG3CG,GAAqB,EAChBv4B,EAAI,EAAGA,EAAIm4B,EAASh4B,OAAQH,IAAK,CACtC,IAAIowB,EAAU+H,EAASn4B,GACvB,GAAuB,iBAAZowB,GAaX,IAAImI,EAEJ,GAAW,EAAPxf,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZqX,IAAmB2H,GAAmBpiB,EAAOya,EAAS6H,IAC1C,KAAZ7H,GAAsC,IAApB+H,EAASh4B,OAAc,CACzC,GAAIq4B,GAAWzf,GACX,OAAO,EACXwf,GAAqB,OAGxB,CACD,IAAIE,EAA2B,EAAP1f,EAAuBqX,EAAU+H,IAAWn4B,GAGpE,GAAY,EAAP+Y,GAAyBpD,EAAM6Q,QAAS,CACzC,IAAKiR,GAAmBvW,GAAuBvL,EAAM6Q,SAAUiS,GAAoB,CAC/E,GAAID,GAAWzf,GACX,OAAO,EACXwf,GAAqB,EAEzB,SAEJ,IAEIG,EAAkBC,GADC,EAAP5f,EAAwB,QAAUqX,EACEgI,EAFf,GAAdziB,EAAMrP,MAA6BqP,EAAMkb,UAAY2G,GAEKS,GACjF,IAAyB,IAArBS,EAAwB,CACxB,GAAIF,GAAWzf,GACX,OAAO,EACXwf,GAAqB,EACrB,SAEJ,GAA0B,KAAtBE,EAA0B,CAC1B,IAAIG,EAEAA,EADAF,EAAkBL,EACF,GAOAD,EAAUM,EAAkB,GAAG3X,cAEnD,IAAI8X,EAAiC,EAAP9f,EAAuB6f,EAAgB,KACrE,GAAIC,IACCpB,GAAmBoB,EAAyBJ,IACtC,EAAP1f,GAA4B0f,IAAsBG,EAAe,CACjE,GAAIJ,GAAWzf,GACX,OAAO,EACXwf,GAAqB,SA/DjC,CAEI,IAAKA,IAAuBC,GAAWzf,KAAUyf,GAAWpI,GACxD,OAAO,EAIX,GAAImI,GAAsBC,GAAWpI,GACjC,SACJmI,GAAqB,EACrBxf,EAAOqX,EAAkB,EAAPrX,GA0D1B,OAAOyf,GAAWzf,IAASwf,EAE/B,SAASC,GAAWzf,GAChB,OAAgC,IAAjB,EAAPA,GA+BZ,SAAS4f,GAAoBh2B,EAAM0Z,EAAOyc,EAAkBb,GACxD,GAAc,OAAV5b,EACA,OAAQ,EACZ,IAAIrc,EAAI,EACR,GAAIi4B,IAAqBa,EAAkB,CAEvC,IADA,IAAIC,GAAe,EACZ/4B,EAAIqc,EAAMlc,QAAQ,CACrB,IAAI64B,EAAgB3c,EAAMrc,GAC1B,GAAIg5B,IAAkBr2B,EAClB,OAAO3C,EAEN,GAAsB,IAAlBg5B,GAAwD,IAAlBA,EAC3CD,GAAe,MAEd,CAAA,GAAsB,IAAlBC,GAAuD,IAAlBA,EAAkC,CAI5E,IAHA,IAAIl3B,EAAQua,IAAQrc,GAGI,iBAAV8B,GACVA,EAAQua,IAAQrc,GAEpB,SAEC,GAAsB,IAAlBg5B,EAEL,MAEC,GAAsB,IAAlBA,EAAwC,CAE7Ch5B,GAAK,EACL,UAGJA,GAAK+4B,EAAe,EAAI,EAG5B,OAAQ,EAGR,OAiCR,SAASE,EAAuB5c,EAAO1Z,GACnC,IAAI3C,EAAIqc,EAAM3U,QAAQ,GACtB,GAAI1H,GAAK,EAEL,IADAA,IACOA,EAAIqc,EAAMlc,QAAQ,CACrB,GAAIkc,EAAMrc,KAAO2C,EACb,OAAO3C,EACXA,IAGR,OAAQ,EA3CGi5B,CAAuB5c,EAAO1Z,GAG7C,SAASu2B,GAA2BvjB,EAAOwiB,EAAUF,QACxB,IAArBA,IAA+BA,GAAmB,GACtD,IAAK,IAAIj4B,EAAI,EAAGA,EAAIm4B,EAASh4B,OAAQH,IACjC,GAAIk4B,GAAuBviB,EAAOwiB,EAASn4B,GAAIi4B,GAC3C,OAAO,EAGf,OAAO,EAwCX,SAASkB,GAAyBhB,EAAUzqB,GACxC0rB,EAAkB,IAAK,IAAIp5B,EAAI,EAAGA,EAAI0N,EAAKvN,OAAQH,IAAK,CACpD,IAAIq5B,EAAwB3rB,EAAK1N,GACjC,GAAIm4B,EAASh4B,SAAWk5B,EAAsBl5B,OAA9C,CAGA,IAAK,IAAI2L,EAAI,EAAGA,EAAIqsB,EAASh4B,OAAQ2L,IACjC,GAAIqsB,EAASrsB,KAAOutB,EAAsBvtB,GACtC,SAASstB,EAGjB,OAAO,GAEX,OAAO,EAIX,IAAIE,GAAS,CACTtb,QAAS,KACT8X,gBAAiB,EACjByD,aAAc,EACdC,gBAAiB,EACjBC,cAAe,EACfC,eAAgB,EAChBC,aAAc,EACdC,mBAAoB,KACpBC,mBAAoB,MAEpBC,GAAuB,EAEvBC,GAAoB,EAgBxB,SAASC,GAAgBhc,EAAS8X,GAgB9B,OAfIwD,GAAOtb,UAAYA,GACnBsb,GAAOtb,QAAUA,EACjBsb,GAAOxD,eAAiBA,EACxBwD,GAAOC,YAAczD,IAAmBpX,GAA2B,EAAI,EACvE4a,GAAOE,eAAiBM,GACxBR,GAAOG,aAAeM,GACtBT,GAAOI,cAAgBI,GACvBR,GAAOK,YAAcI,GACrBT,GAAOM,mBAAqB,KAC5BN,GAAOO,mBAAqB,MAEvBP,GAAOxD,iBAAmBA,IAC/BwD,GAAOxD,eAAiBA,EACxBwD,GAAOC,eAEJD;;;;;;;;AAgBX,IAAIW,GAA+B,GAwB/BC,GAAgC,EAWpC,SAASC,GAAsB1tB,EAASkJ,EAAOrE,EAAM0M,EAAS8X,EAAgBjU,EAAMzI,EAActX,EAAOs4B,EAAajb,GAClH,IAAIkb,GAAcxY,EACdyY,EAAQN,GAAgBhc,EAAS8X,GACjCyE,EAAaF,EAAaH,GAAgCI,EAAMb,eAIpE,SAAIta,GAAmBrd,IAAU0c,KACfgc,GAAkB/tB,EAASkJ,EAAOrE,EAAMipB,EAAYD,EAAMf,YAAa1X,EAAMzI,EAActX,EAAOs4B,GAAa,EAAOjb,GAAiB,KACtIib,IAMXE,EAAMd,gBAAkB,GAAKe,EACtB,IAenB,SAASE,GAAsBhuB,EAASkJ,EAAOrE,EAAM0M,EAAS8X,EAAgBjU,EAAMzI,EAActX,EAAOyZ,EAAW6e,EAAajb,GAC7H,IAAIkb,GAAcxY,EACdyY,EAAQN,GAAgBhc,EAAS8X,GACjCyE,EAAaF,EAAaH,GAAgCI,EAAMX,cAIpE,GAAIxa,GAAmBrd,IAAU0c,GAAW,CACxC,IAAIkc,IAAuBL,KAEtB9e,GAAYA,EAAUsG,EAAM,KAAM,GAEvC,GADc2Y,GAAkB/tB,EAASkJ,EAAOrE,EAAMipB,EAAYD,EAAMf,YAAa1X,EAAMzI,EAActX,EAAOs4B,EAAaM,EAAsBvb,GAAiB,IACrJib,EAOX,OADAE,EAAMZ,eAAiB,GAAKa,GACrB,EAGf,OAAO,EAaX,SAASC,GAAkB/tB,EAASkJ,EAAOrE,EAAMqpB,EAAcpB,EAAa1X,EAAMzI,EAActX,EAAOs4B,EAAaM,EAAsBvb,EAAiBD,GACvJ,IAAI0b,EAAmB7Y,GAAoBwX,GACvCsB,EAAmB3b,EAAe,KAAkC,OACpEC,GAOA2b,GAAgBruB,EAASkJ,EAAOglB,EAAcpB,EAAa1X,EAAMzI,EAAcshB,EAAsBxb,GAEzG,IAAI6b,EAAUX,GAAe/Z,GAAgB/O,EAAK8H,GAAetX,GAQjE,OAPIi5B,IACA9a,GAAS3O,EAAM8H,EAActX,GACJkd,GAAUrJ,EAAOklB,KAAsBD,KAAqB/Y,IAAQ/f,IAkBrG,SAASk5B,EAA0BvuB,EAASkJ,EAAOrE,EAAMuQ,EAAM3C,GAC3D,IA2BQ+b,EA3BJC,EAActb,GAAenT,GAEjC,GAAa,OAAToV,GAAiB7C,GAAUrJ,EADRuJ,EAAe,KAAkC,QACf,CAIrD,IAHA,IAAIic,EAAc,EAA8BD,EAC5Cl7B,EAAI,EACJo7B,GAAQ,EACLp7B,EAAIyM,EAAQtM,QAAQ,CACvB,GAAIof,GAAQ9S,EAASzM,KAAO6hB,EAAM,CAC9BuZ,GAAQ,EACR,MAEJp7B,GAAKm7B,EAET,GAAIC,EAIA,IAHA,IAEIC,GAFAJ,EAAgBj7B,EAAI,GAEQk7B,EAAc,EACrCI,EAFSL,EAAgB,EAENK,EAAMD,EAAWC,IAAO,CAChD,IAAIliB,EAAe3M,EAAQ6uB,GACN,IAAjBliB,GACA6G,GAAS3O,EAAM8H,EAAc,OAM7C,GAAI4F,GAAUrJ,EADQuJ,EAAe,IAAgC,OAKjE,IADImc,GAFAJ,EAAgB,GAEYC,EAAc,EACrCl7B,EAFSi7B,EAAgB,EAERj7B,EAAIq7B,EAAWr7B,IAAK,CAC1C,IAAIu7B,EAAarb,GAAS5O,EAAM7E,EAAQzM,IACpCu7B,IACcA,EA7qGtB,GAA4Bja,KA2nGxB0Z,CAA0BvuB,EAASkJ,EAAOrE,EAAMuQ,EAAM3C,IAGvD6b,EAkFX,SAASD,GAAgBruB,EAASkJ,EAAO6lB,EAASjC,EAAa1X,EAAMY,EAAciY,EAAsBxb,GACrG,IAAIkc,GAAQ,EACZvZ,EAAOA,GAAQpD,GAKf,IAJA,IAAIgd,EAAe5b,GAAgBpT,GAI5BgvB,GAAgBlC,GACnBmC,GAAmBjvB,GACnBgvB,IAOJ,IALA,IAAIE,EAAgBzc,EAAe,KAAuC,OACtE0c,EAA8C,iBAAjBnZ,EAC7BoZ,EAAgB,EAA8Bjc,GAAenT,GAC7DzM,EAAI,EAEDA,EAAIyM,EAAQtM,QAAQ,CACvB,IAAId,EAAIkgB,GAAQ9S,EAASzM,GACzB,GAAI6hB,GAAQxiB,EAAG,CACPwiB,EAAOxiB,EACPy8B,GAAwBrvB,EAASzM,EAAG6hB,EAAM6Y,GAErCkB,GACLtc,GAAY3J,EAAOgmB,GAEvBI,GAAsBtvB,EAASzM,EAAGyiB,EAAc+Y,EAASjC,GACzD6B,GAAQ,EACR,MAEJp7B,GAAK67B,EAEJT,IACDU,GAAwBrvB,EAASA,EAAQtM,OAAQ0hB,EAAM6Y,GACvDqB,GAAsBtvB,EAASzM,EAAGyiB,EAAc+Y,EAASjC,IAOjE,SAASuC,GAAwBrvB,EAASrI,EAAOyd,EAAM6Y,GAGnDjuB,EAAQyB,OAAO9J,EAAO,EAFTs2B,EAAuB,EAChC,EAEJ5b,GACAA,GACA+C,GACAzd,GAAS,EAMT,IADA,IAAI43B,EAAwBnc,GAAgBpT,GACnCzM,EAAI,EAAGA,EAAIg8B,EAAuBh8B,IACvCyM,EAAQyB,OAAO9J,EAAO,EAAGwa,IACzBxa,IAGJqI,EAAQyB,OAAO9J,EAAO,EAAGua,IAgB7B,SAASod,GAAsBtvB,EAASrI,EAAOqe,EAAcwZ,EAAU1C,GACnE,GAA4B,iBAAjB9W,EAA2B,CAClC,IAAImY,EAAmB7Y,GAAoBwX,GAE3C9sB,EADgBrI,EAAQ,EAA8Bm1B,GACjC9W,EAl4G7B,SAASyZ,EAAazvB,EAASrI,EAAO+3B,EAAWxc,GAG7ClT,EAFerI,GAASub,EAAgB,EACpC,IACgBwc,EAi4GhBD,CAAazvB,EAASrI,EADDsb,GAAajT,EAASrI,EAAOw2B,GAAqB,GAAKqB,EAC/BrB,QAEvB,OAAjBnY,GAA6D,OAApCzC,GAAgBvT,EAASrI,IAr3G/D,SAASg4B,EAAgB3vB,EAASrI,EAAOtC,GAC9B2K,EAAQrI,EAAQ,EAA8Byb,GAAgBpT,IACjE3K,EAo3GAs6B,CAAgB3vB,EAASrI,EAAOqe,GAexC,SAASiZ,GAAmBjvB,GAIxB,IAFA,IAAI4vB,EAAe,EAA8Bzc,GAAenT,GAAW,EACvErI,EAAQ,EACLA,EAAQqI,EAAQtM,QACnBiE,GAASi4B,EACT5vB,EAAQyB,OAAO9J,IAAS,EAAGwa,IAG3Bxa,IAEJqI,EAAQ,KAiGZ,SAAS6vB,GAA0B7vB,EAASkJ,EAAOuJ,IAmBnD,SAASqd,EAA8B9vB,EAASkJ,EAAO6mB,EAAgBtd,GAKnE,IAFA,IACIud,GAAoB,EACfz8B,EAAI,EAA6BA,EAAIw8B,EAAer8B,OAAQH,GAAK,EAAmB,CACzF,IAAI8B,EAAQ0f,GAAYgb,EAAgBx8B,GACpC8B,IAEAg5B,GAAgBruB,EAASkJ,GANN,EAMmC,EAD3C0L,GAAWmb,EAAgBx8B,GACyB8B,GAAO,EAAOod,GAC7Eud,GAAoB,GAGxBA,GACAnd,GAAY3J,EAAO,KA9BvB4mB,CAA8B9vB,EAASkJ,EAAOqL,GAAmBvU,GAAUyS,GA4D/E,SAASwd,GAAuBjwB,EAASkJ,EAAOmG,EAAUkC,EAAS2e,EAAaC,EAAcC,EAAgBthB,EAAWqf,EAAkB1b,GACvI,IAAI4d,EAiRR,SAASC,EAAsBj7B,GAE3B,OAAc,IAAVA,GACQ,GAEE,IAAVA,EACO,EAEJA,EAzROi7B,CAAsBH,GAChCI,EAAoB,KACpBC,GAAiB,EAEjBje,GAAUrJ,EADQuJ,EAAe,IAAgC,SAEjE8d,EAuRR,SAASE,IACL,OAAOC,GAxRiBD,GAEpBD,EAA+C,IAA7BH,EADEpd,GAAajT,EAAS,EAA6BmuB,KAG3E,IAAIM,EAActb,GAAenT,GAC7B2wB,EAAuB,EACvBC,EAAWJ,EAAiB,EAAyB,EACrDrC,IACAyC,GAAY,EACZD,EAAuBlC,EAAc,GAGzC,IADA,IAAIl7B,EAAImgB,GAA2B1T,EAASkJ,EAAOuJ,GAC5Clf,EAAIyM,EAAQtM,QAAQ,CAEvB,GAAI28B,EADYpd,GAAajT,EAASzM,EAAG46B,GAChB,CAKrB,IAJA,IAAI0C,GAAe,EACfzb,EAAOtC,GAAQ9S,EAASzM,GACxBu9B,EAAevd,GAAgBvT,EAASzM,GAEnC8L,EAAI,EAAGA,EAAIsxB,EAAsBtxB,IAAK,CAC3C,IAAIsN,EAAe0G,GAAgBrT,EAASzM,EAAG8L,GAC/C,IAAKwxB,GAAiC,IAAjBlkB,EAAoB,CACrC,IAAItX,EAAQoe,GAASyc,EAAavjB,GAC9BsH,GAAsB5e,KACD84B,GAA0B,IAAN9uB,GAKrC+wB,EAAe/gB,EAAUkC,EAAS6D,EAHjBtG,GAAaiE,GAAuB/S,EAASzM,GAC1Dub,EAAUsG,EAAM/f,EAAO,GACvB6oB,GAAgB7oB,GACgCsX,GAExDkkB,GAAe,GAIvB,GAAIN,EAAmB,CAEnB,IAAIjkB,EAAOskB,GAAYC,EAAe,EAClC,GAQA1C,GAA0B,IAAN9uB,IACpBiN,GAAQ,IAEZ,IAAIykB,EAAwBR,EAAkBvwB,EAASqP,EAAUkC,EAAS2e,EAAa7wB,EAAG+wB,EAAgBthB,EAAWxC,EAAM8I,EAAM0b,GACjID,EAAeA,GAAgBE,GAOlCF,GACDT,EAAe/gB,EAAUkC,EAAS6D,EAAM0b,GAGhDv9B,GAAK,EAA8Bk7B,EAKnC8B,IACIpC,IACAyC,GAAY,IAEhBL,EAAkBvwB,EAASqP,EAAUkC,EAAS2e,EAAa,EAAGE,EAAgBthB,EAAW8hB,IA8FjG,SAASI,GAA0B3hB,EAAUkC,EAASlc,EAAOod,EAAcwe,GACvE,IAAIC,EAeJ,OAdIze,GACAye,EAAgC,iBAAV77B,EAAqBA,EA6OnD,SAAS87B,EAAkBtxB,GACvB,IAAIqV,EAAM,GACV,GAAIrV,EACA,IAAK,IAAI7L,KAAO6L,EACAA,EAAI7L,KAEZkhB,IAAQA,EAAIxhB,OAAS,IAAM,IAAMM,GAI7C,OAAOkhB,EAvPgDic,CAAkB97B,GAChD,OAAjB47B,IACAC,EAAehd,GAAa+c,EAAcC,EAAc,MAE5DE,GAAa/hB,EAAUkC,EAAS2f,KAGhCA,EAAelc,GAAoB3f,GAAO,GACrB,OAAjB47B,IACAC,EAAeD,EAAe,IAAMC,GAExCG,GAAahiB,EAAUkC,EAAS2f,IAE7BA,EA6DX,SAASI,GAAkBjiB,EAAUkC,EAAS6D,EAAM/f,EAAOk8B,EAAS5kB,EAAcmC,GAC9E,IAAIoiB,EAAehT,GAAgB7oB,GACnC,QAAI4e,GAAsBid,KAGtBK,EAAQliB,EAAUkC,EAAS6D,EAF3B8b,EACIpiB,EAAYA,EAAUsG,EAAM/f,EAAO,GAA+B67B,EACvBvkB,IACxC,GAIf,SAAS6kB,GAAqBniB,EAAUkC,EAASggB,EAAS52B,EAAKya,EAAMzI,EAAcmC,GAC/E,IAAK,IAAIvb,EAAI,EAA6BA,EAAIoH,EAAIjH,OAAQH,GAAK,EAAmB,CAC9E,IAAIX,EAAIgiB,GAAWja,EAAKpH,GACxB,GAAIX,IAAMwiB,EAAM,CACZ,IAAI8b,EAAenc,GAAYpa,EAAKpH,GAKpC,OADAg+B,EAAQliB,EAAUkC,EAAS6D,EAH3B8b,EAAepiB,EACXA,EAAUsG,EAAM8b,EAAc,GAC9BA,EAC2CvkB,IACxC,EAEX,GAAI/Z,EAAIwiB,EACJ,MAGR,OAAO,EAYX,IAAIsb,GAA2B,KAU3Be,GAAW,SAAUpiB,EAAUM,EAAQyF,EAAM/f,GAiBjC,IAYIq8B,EA5BC,OAAbriB,IAEI4E,GAAsB5e,IAItBA,EAAQA,EAAM0F,WAEVqU,GAAqBC,GACrBA,EAASoiB,SAAS9hB,EAAQyF,EAAM/f,EAAO2Z,GAAoB2iB,UAQxC,OADfD,EAAc/hB,EAAOiiB,QAErBF,EAAYthB,YAAYgF,EAAM/f,IAMlC+Z,GAAqBC,GACrBA,EAASwiB,YAAYliB,EAAQyF,EAAMpG,GAAoB2iB,UAIpC,OADfD,EAAc/hB,EAAOiiB,QAErBF,EAAYI,eAAe1c,KAS3C2c,GAAW,SAAU1iB,EAAUM,EAAQqiB,EAAW38B,GAYtC,IAYI48B,EAvBC,OAAb5iB,GAAmC,KAAd2iB,IACjB38B,EAEI+Z,GAAqBC,GACrBA,EAAS6iB,SAASviB,EAAQqiB,GAQT,OADbC,EAAYtiB,EAAOsiB,YAEnBA,EAAUE,IAAIH,GAMlB5iB,GAAqBC,GACrBA,EAAS+iB,YAAYziB,EAAQqiB,GAIZ,OADbC,EAAYtiB,EAAOsiB,YAEnBA,EAAUI,OAAOL,KAMjCZ,GAAe,SAAU/hB,EAAUM,EAAQqiB,GAC1B,OAAb3iB,IACID,GAAqBC,GACrBA,EAASY,aAAaN,EAAQ,QAASqiB,GAGvCriB,EAAOqiB,UAAYA,IAI3BX,GAAe,SAAUhiB,EAAUM,EAAQta,GAC1B,OAAbga,IACID,GAAqBC,GACrBA,EAASY,aAAaN,EAAQ,QAASta,GAGvCsa,EAAOM,aAAa,QAAS5a,KAazC,SAASi9B,GAAiBjjB,EAAUkC,EAASghB,EAAe9f,GACxD,IAAIkD,EAAgBpB,GAAmBge,GACvC,GAAI5c,EACA,IAAK,IAAIpiB,EAAI,EAA6BA,EAAIoiB,EAAcjiB,OAAQH,GAAK,EAAmB,CACxF,IAAI6hB,EAAOR,GAAWe,EAAepiB,GACjC8B,EAAQ0f,GAAYY,EAAepiB,GACnCkf,EACAsf,GAAS1iB,EAAUkC,EAAS6D,EAAM/f,EAAO,MAGzCo8B,GAASpiB,EAAUkC,EAAS6D,EAAM/f,EAAO;;;;;;;;AAyFzD,SAASm9B,GAAUC,GAEfC,GAAoB9nB,KAAY4D,KAAqBikB,EAAOrmB,MAOhE,SAASumB,GAASh7B,GACd+6B,GAAoB9nB,KAAYjT,EAAOyU,MAE3C,SAASsmB,GAAoB7nB,EAAOlT,EAAO2S,GAQvC,GALIQ,GAAqB,IACrBK,MAICb,EAED,GAD8E,IAAhC,EAAfO,EAAMrD,KACR,CACzB,IAAIkiB,EAAqB7e,EAAMtD,IAAOmiB,mBACX,OAAvBA,GACAQ,GAAkBrf,EAAO6e,EAAoB/xB,OAGhD,CACD,IAAI8xB,EAAgB5e,EAAMtD,IAAOkiB,cACX,OAAlBA,GACAY,GAAyBxf,EAAO4e,EAAe,EAA4B9xB,GAQvFyT,GAAiBzT;;;;;;;OAerB,IAAIi7B,GAAiB,CACjBtiB,OAAQ,WAORuiB,GAAiB,CACjBviB,OAAQ;;;;;;;;AAoBZ,SAASwiB,GAAYC,GACjB,IAAIC,EAAI92B,EACR,IAAK82B,EAAEC,MACH,MAAM,IAAIj6B,MAAM,0CAEpB,OAAO,IAAIg6B,EAAEC,MAAM,GAAIF;;;;;;;;;;;;;;;AAgC3B,SAASG,MAtUT,SAASC,EAAqB33B,GAC1Bk1B,GAA2Bl1B,EAsU3B23B,CAAqBC,IAkFzB,IAAIA,GAAiB,SAAUpzB,EAASqP,EAAUkC,EAAS1M,EAAMioB,EAAasD,EAAgBthB,EAAWxC,EAAM+mB,EAAYvC,GACvH,IAAIwC,GAA4B,EAIhC,GADgBngB,GAAenT,GAChB,CACX,IAAIuzB,GAAsB,EACtBC,GAAgBH,EAKhBG,GAAoD,IAA5B,EAAPlnB,KACjBinB,GAAsB,EACtBD,GAA4B,GAE5BC,IACAD,EAiBZ,SAASG,EAAoBzzB,EAASqP,EAAUkC,EAAS1M,EAAMurB,EAAgBthB,EAAWxC,EAAM+mB,EAAYK,EAAiB5C,GACzH,IACI6C,EADYxgB,GAAenT,GAAW,EACd,EACxB4zB,EAAmBF,EAAkBC,GAAmD,IAA9B,EAAPrnB,GACnDunB,EAAwD,IAA9B,GAAPvnB,GACnBunB,IAGAvnB,IAAQ,IAEZ,IAAIgnB,GAA4B,EAChC,GAAII,GAAmBC,EAAW,CAC9B,IAAIG,EAmJZ,SAASC,EAAqBC,GAI1B,OAHIA,GAAYC,GAAYvgC,QACxBugC,GAAYv+B,KAAK,GAEdu+B,GAAYD,GAvJFD,CAAqBL,GAC9B/mB,EAAe0G,GAAgBrT,EAAS,EAA6B0zB,GACrE/d,EAAgBlC,GAAS5O,EAAM8H,GACnC,GAAIgJ,EAAe,CACf,KAAOme,EAASne,EAAcjiB,QAAQ,CAClC,IAAI0hB,EAAOR,GAAWe,EAAeme,GACjCI,EAAiBb,GAAcje,EAAOie,EACtCc,GAAuBD,GAAkB9e,IAASie,EAClDh+B,EAAQ0f,GAAYY,EAAeme,GACnCM,EAAiBngB,GAAsB5e,GAOvCg/B,EAAYH,EAAiB5nB,EAAOgoB,GAAoBhoB,EAAM8nB,EAAgBD,GAE9EtD,IAAe+C,GACfH,EAAoBzzB,EAASqP,EAAUkC,EAAS1M,EAAMurB,EAAgBthB,EAAWulB,EAFrEH,EAAiBb,EAAaje,EAE6Dse,EAAkB,EAAG5C,GAEhI,GAAIoD,EAAgB,CACXZ,IACDA,EAA4BzC,GAEhC,MAEJ,IAAKA,GAAgB0D,GAA0BjoB,EAAM6nB,KACjDtD,GAAe,GACVgD,GAAiB,CAClB,IACIW,EAAsBL,EAAsBxnB,EAAe,KAU/DyjB,EAAe/gB,EAAUkC,EAAS6D,EAXjB+e,IAAwBC,EAIxBtD,EAGAhiB,EACTA,EAAUsG,EAAM/f,EAAO,GACtBA,EAAQ6oB,GAAgB7oB,GAAS,KAEUm/B,GAG5DlB,EAA4BzC,GAAgBsD,EAC5CL,GAAU,GA+G1B,SAASW,EAAqBT,EAAUU,GACpCT,GAAYD,GAAYU;;;;;;;MA9GhBD,CAAqBf,EAAiBI,IAOlCF,GAC0B,IAAzBje,EAAcjiB,QAA2C2/B,IAC1DC,EAA4BG,EAAoBzzB,EAASqP,EAAUkC,EAAS1M,EAAMurB,EAAgBthB,EAAWxC,EAAM+mB,EAAYK,EAAkB,EAAG5C,SAGnJ8C,IACLN,EAA4BG,EAAoBzzB,EAASqP,EAAUkC,EAAS1M,EAAMurB,EAAgBthB,EAAWxC,EAAM+mB,EAAYK,EAAkB,EAAG5C,IAG5J,OAAOwC,EA5F6BG,CAAoBzzB,EAASqP,EAAUkC,EAAS1M,EAAMurB,EAAgBthB,EAAWxC,EAAM+mB,GAAc,KAAMvG,EAAagE,GAAgB,OAEpK0C,GAsKZ,SAASmB,IACL,IAAK,IAAIphC,EAAI,EAAGA,EAAI0gC,GAAYvgC,OAAQH,IACpC0gC,GAAY1gC,GAAK,EAvKbohC,GAGR,OAAOrB,GA0GX,SAASgB,GAAoBM,EAAaR,EAAgBD,GACtD,IAAIE,EAAYO,EAqBhB,OAbuBR,IAAmBD,EADN,EAAdS,EADa,EAAdA,IAMjBP,GAAa,EACbA,IAAa,IAKbA,GAAa,EACbA,IAAa,GAEVA,EAaX,SAASE,GAA0BjoB,EAAM6nB,GACrC,IAAIU,EAAmD,IAA5B,EAAPvoB,GASpB,OARKuoB,EAKY,EAAPvoB,GAAkC6nB,IACxCU,GAAe,GALJ,EAAPvoB,IACAuoB,EAAeV,GAMhBU,EAMX,IAAIZ,GAAc,GA+Cda,GAAsC,WACtC,SAASA,EAAqB90B,EAASoc,EAAQ2Y,GAC3C3iC,KAAK4N,QAAUA,EACf5N,KAAKgqB,OAASA,EACdhqB,KAAK2iC,cAAgBA,EAkIzB,OAhIAviC,OAAO+B,eAAeugC,EAAqB7hC,UAAW,SAAU,CAC5D4L,IAAK,WAAc,OAAOm2B,GAAY5iC,KAAKgqB,OAAQhqB,KAAK2iC,gBACxDE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeugC,EAAqB7hC,UAAW,UAAW,CAM7D4L,IAAK,WAMD,IALA,IAAImB,EAAU5N,KAAK4N,QACfm1B,EAAehiB,GAAenT,GAC9Bo1B,EAAU,GAEV7hC,EADQmgB,GAA2B1T,EAAS5N,KAAKgqB,OAAQhqB,KAAK2iC,eAE3DxhC,EAAIyM,EAAQtM,QAAQ,CAQvB,IAPA,IAAI0hB,EAAOtC,GAAQ9S,EAASzM,GACxB8hC,EAAkBpiB,GAAajT,EAASzM,GAAG,GAC3C+hC,EAAsBriB,GAAajT,EAASzM,GAAG,GAC/Cu9B,EAAevd,GAAgBvT,EAASzM,GACxC06B,EAAuBlb,GAAuB/S,EAASzM,GACvDgiC,EAAwBhiC,EAAI,EAC5BiiC,EAAU,GACLn2B,EAAI,EAAGA,EAAI81B,EAAc91B,IAAK,CACnC,IAAIsN,EAAe3M,EAAQu1B,EAAwBl2B,GAC9B,IAAjBsN,GACA6oB,EAAQ9/B,KAAKiX,GAGrByoB,EAAQhgB,GAAQ,CACZA,KAAMA,EACNigB,gBAAiBA,EACjBC,oBAAqBA,EACrBrH,qBAAsBA,EACtBQ,YAAa+G,EAAQ9hC,OAAQo9B,aAAcA,EAAc0E,QAASA,GAEtEjiC,GAAK,EAA8B4hC,EAEvC,OAAOC,GAEXH,YAAY,EACZC,cAAc,IAMlBJ,EAAqB7hC,UAAUwiC,aAAe,WAO1C,IANA,IAAIC,EAAS,KACT11B,EAAU5N,KAAK4N,QACf21B,EAASvjC,KAAK2iC,cAAgB,QAAU,QACxCa,EAAmB,GACnBT,EAAehiB,GAAenT,GAC9B0uB,EAAc,EAA8ByG,EACvC5hC,EAAI,EAAGA,EAAI4hC,EAAc5hC,IAAK,CAMnC,IALA,IAAIsiC,EAAkBtiC,IAAM4hC,EAAe,EACvChH,EAAmB56B,IAAM0e,GACzBpY,EAAOi8B,GAAkBviC,EAAG4hC,GAC5BC,EAAU,GACV/1B,EAAI,EACDA,EAAIW,EAAQtM,QAAQ,CACvB,IAAI2B,EAAQge,GAAgBrT,EAASX,EAAG9L,GACxC,GAAIsiC,GAAmBxgC,EAAQ,EAAG,CAC9B,IAAIg7B,EAAUpd,GAAajT,EAASX,EAAG8uB,GACnCxhB,EAAekpB,GAAmB,EAAIxgC,EACtC+f,EAAOtC,GAAQ9S,EAASX,GAG5B+1B,EAAQ1/B,KAAK,CAAEqgC,QADIJ,GADFvgB,IAASpD,GACgB,GAAK,IAAMoD,GACpB/f,MAAOA,EAAOsX,aAAcA,EAAc0jB,QAASA,IAExFhxB,GAAKqvB,EAETkH,EAAiBlgC,KAAK,CAAEmE,KAAMA,EAAMu7B,QAASA,EAAQY,MAAK,SAAUniB,EAAGthB,GAAK,OAAOshB,EAAElH,aAAepa,EAAEoa,kBAE1GipB,EAAiBr0B,SAAQ,SAAU00B,GAC/BP,GAAU,IAAMO,EAAMp8B,KAAKq8B,cAAgB,MAC3CR,GAAUS,GAAO,IAAKF,EAAMp8B,KAAKnG,OAAS,GAAK,KAE/CuiC,EAAMb,QAAQ7zB,SAAQ,SAAU00B,GAC5B,IACI5gC,EAAQ4gC,EAAM5gC,MADqB,iBAAhB4gC,EAAM5gC,OAED,OAAVA,IACdqgC,GAAUU,MAAYH,EAAMF,QAAU,QAAU1gC,EAAQ,IACxDqgC,GAAU,SAGlBA,GAAU,QAGd1Y,QAAQqZ,IAAIX,IAKhBZ,EAAqB7hC,UAAUqjC,WAAa,WAIxC,IAAKtZ,QAAQuZ,MACT,MAAM,IAAIv9B,MAAM,iDAQpB,IANA,IAAIgH,EAAU5N,KAAK4N,QACfu2B,EAAQ,GACRpB,EAAehiB,GAAenT,GAC9B0uB,EAAc,EAA8ByG,EAC5CqB,EAAaC,KAAKC,MAAM12B,EAAQtM,OAASg7B,GACzCn7B,EAAI,EACDA,EAAIyM,EAAQtM,QAAQ,CAQvB,IAPA,IAAI0hB,EAAOtC,GAAQ9S,EAASzM,GACxBq6B,EAAaxY,IAASpD,GACtBikB,EAAQ,CACR7gB,KAAMA,EACNuhB,WAAYC,GAAkB3jB,GAAajT,EAASzM,GAAG,GAAQq6B,EAAY4I,GAC3EK,YAAaD,GAAkB3jB,GAAajT,EAASzM,GAAG,GAAOq6B,EAAY4I,IAEtEn3B,EAAI,EAAGA,EAAI81B,EAAc91B,IAAK,CACnC,IAAIrL,EAAM8hC,GAAkBz2B,EAAG81B,GAC3B9/B,EAAQge,GAAgBrT,EAASzM,EAAG8L,GACxC42B,EAAMjiC,GAAOqB,EAEjB9B,GAAKm7B,EACL6H,EAAM7gC,KAAKugC,GAGfjZ,QAAQuZ,MAAMA,IAEXzB,EAtI8B,GAwIzC,SAAS8B,GAAkBvhC,EAAOu4B,EAAY4I,GAC1C,OAAI5I,GAAcv4B,EAAQ,EACf,KAIf,SAASyhC,EAAQzhC,EAAO0hC,EAAKC,GACzB,OAAOb,GAAOa,EAAKD,EAAM1hC,EAAM3B,QAAU2B,EALvByhC,CAAQzhC,EAAM0F,SAAS,GAAIy7B,EAAY,KAElD,KAKX,SAASV,GAAkBn+B,EAAOw9B,GAC9B,OAAIx9B,IAAUsa,GACH,WAEFta,IAAUw9B,EAAe,EACvB,WAGA,QAAUx9B,EAGzB,SAASw+B,GAAOjiC,EAAG+iC,GAEf,IADA,IAAI3jC,EAAI,GACCC,EAAI,EAAGA,EAAI0jC,EAAO1jC,IACvBD,GAAKY,EAET,OAAOZ,EAQX,IAAI4jC,GAAkC,WAClC,SAASA,EAAiBl3B,EAASoc,EAAQ+a,EAAOpC,GAC9C3iC,KAAKgqB,OAASA,EACdhqB,KAAK+kC,MAAQA,EACb/kC,KAAK2iC,cAAgBA,EACrB3iC,KAAKglC,WAAa,KAClBhlC,KAAKilC,cAAgB7iB,GAAiBxU,GAClC,IAAI80B,GAAqB90B,EAASoc,EAAQ2Y,GAC1C/0B,EA6HR,OA3HAxN,OAAO+B,eAAe2iC,EAAiBjkC,UAAW,UAAW,CACzD4L,IAAK,WAAc,OAAOzM,KAAKilC,eAC/BpC,YAAY,EACZC,cAAc,IAKlBgC,EAAiBjkC,UAAUqkC,kBAAoB,SAAUxoB,GAAa1c,KAAKglC,WAAatoB,GACxFtc,OAAO+B,eAAe2iC,EAAiBjkC,UAAW,UAAW,CAOzD4L,IAAK,WACD,IAAIu2B,EAAU,GACVmC,EAASnlC,KAAKmlC,OACd9kB,EAAergB,KAAK2iC,cACpBlwB,EAAOzS,KAAK+kC,MAmBhB,OAbII,EAAO/kB,oBAAsB+kB,EAAOC,iBACpC3yB,EAAOA,EAAKhP,OAAO,IACnBzD,KAAKqlC,sCAAsC5yB,IAE/CzS,KAAKslC,WAAW7yB,GAAM,SAAUuQ,EAAM/f,EAAOsX,GACzCyoB,EAAQhgB,GAAQ,CAAEA,KAAMA,EAAM/f,MAAOA,EAAOsX,aAAcA,MAQvDmmB,GAAY,CACfj0B,IAAK,SAAU9K,EAAQqhB,GACnB,IAAI/f,EAAQ+/B,EAAQhgB,GAQpB,OAPK/f,IACDA,EAAQ,CACJ+f,KAAMA,EACN/f,OAAOod,GAAuB,KAC9B9F,aAAc,OAGftX,GAEXsiC,IAAK,SAAU5jC,EAAQqhB,EAAM/f,GAAS,OAAO,GAC7CuiC,QAAS,WAAc,OAAOplC,OAAO2iB,KAAKigB,IAC1ChhC,yBAA0B,SAAUyjC,GAGhC,MAAO,CACH5C,YAAY,EACZC,cAAc,OAK9BD,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe2iC,EAAiBjkC,UAAW,SAAU,CACxD4L,IAAK,WAAc,OAAOm2B,GAAY5iC,KAAKgqB,OAAQhqB,KAAK2iC,gBACxDE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe2iC,EAAiBjkC,UAAW,SAAU,CAIxD4L,IAAK,WACD,IAAIu2B,EAAU,GACVmC,EAASnlC,KAAKmlC,OACd1yB,EAAOzS,KAAK+kC,MAWhB,OALII,EAAO/kB,oBAAsB+kB,EAAOC,iBACpC3yB,EAAOA,EAAKhP,OAAO,IACnBzD,KAAKqlC,sCAAsC5yB,IAE/CzS,KAAKslC,WAAW7yB,GAAM,SAAUuQ,EAAM/f,GAAS+/B,EAAQhgB,GAAQ/f,KACxD+/B,GAEXH,YAAY,EACZC,cAAc,IAElBgC,EAAiBjkC,UAAUwkC,sCAAwC,SAAU5yB,GAGzE,IAFA,IAAI7E,EAAU5N,KAAK4N,QAAQA,QACvB83B,EAAQpkB,GAA2B1T,EAAS5N,KAAKgqB,OAAQhqB,KAAK2iC,eACzDxhC,EAAI,EAA2DA,EAAIukC,EAAOvkC,IAAK,CACpF,IAAIoZ,EAAe3M,EAAQzM,GACvByiB,EAAgC,IAAjBrJ,EAAqB8G,GAAS5O,EAAM8H,GAAgB,KACnEqJ,IAAiBrjB,MAAM+H,QAAQsb,IAE/BxC,GAAS3O,EAAM8H,EADOoJ,GAAwB,KAAMC,GAAe5jB,KAAK2iC,kBAKpFmC,EAAiBjkC,UAAUykC,WAAa,SAAU7yB,EAAMrJ,GAIpD,IAAIu8B,EAAc,GAEJxlB,GAAUngB,KAAKgqB,OADPhqB,KAAK2iC,cAAgB,IAAgC,QAGvE7B,KAEJ,IAAI8E,EAAQ,SAAU3oB,EAAUkC,EAAS6D,EAAM/f,EAAOsX,GAAgB,OAAOnR,EAAG4Z,EAAM/f,EAAOsX,GAAgB,OACzGmC,EAAY1c,KAAK2iC,cAAgB,KAAQ3iC,KAAKglC,YAAcroB,KAEhEkhB,GAAuB79B,KAAK4N,QAAQA,QAAS5N,KAAKgqB,OAAQ,KAAM2b,EAAalzB,GAAM,EAAMmzB,EAAOlpB,GAAW,EAAO1c,KAAK2iC,eAEvH9E,GAAuB79B,KAAK4N,QAAQA,QAAS5N,KAAKgqB,OAAQ,KAAM2b,EAAalzB,GAAM,EAAMmzB,EAAOlpB,GAAW,EAAM1c,KAAK2iC,gBAEnHmC,EArI0B,GAuIrC,SAASlC,GAAY9rB,EAAOuJ,GAUxB,MAAO,CACH+kB,eAViBjlB,GAAUrJ,EAAOuJ,EAAe,IAAgC,OAWjFwlB,gBAVkB1lB,GAAUrJ,EAAOuJ,EAAe,KAAkC,OAWpFylB,cAVgB3lB,GAAUrJ,EAAOuJ,EAAe,KAAuC,QAWvF0lB,oBAVsB5lB,GAAUrJ,EAAOuJ,EAAe,KAAsC,OAW5F2lB,gBAVkB7lB,GAAUrJ,EAAOuJ,EAAe,KAAkC,QAWpFD,mBAPuBA,GAAmBtJ,EAAOuJ,GAAc;;;;;;;OAmSvE,SAAS4lB,GAAqBnvB,EAAOua,GACjC,KAAOva,GACHua,EAAI/tB,KAAKwT,EAAMovB,WACfpvB,EAAQA,EAAM9T,KA8BtB,SAASmjC,GAAQ14B,GACb,GAAIA,EAAK,CACL,IAAI24B,EAAQ34B,EAAI24B,MAEhB,OADA12B,GAAc02B,EAAO,gDACdA,EAGP,OAAO34B,EAcf,SAAS44B,GAAOpjC,EAAOqjC,QACK,IAApBA,IAA8BA,GAAkB,GACpD,IAAIjU,EAAO/N,GAAYrhB,GACvB,GAAIovB,EAAM,CACN,IAAIkU,EAAalU,EAAK5D,WAAaC,KAAKgD,UACpCe,GAAa8T,EAAalU,EAAKmU,YAAcnU,EAAKI,YAAc,GACpE,OAAI6T,GAAmBC,EACZ9T,EAICA,EAAUpD,MADF,IAAMgD,EAAKvF,UAAY,KACJ,GAAM,IAI7C,OAAO,KAmJf,SAAS2Z,GAAa3vB,EAAO2B,GACzB,GAAI3B,EAAO,CAGP,IAFA,IAAI4vB,EAAa,GACbC,EAAc7vB,EACX6vB,GACHD,EAAWpjC,KAAKsjC,GAAeD,EAAaluB,EAAOkuB,EAAYphC,QAC/DohC,EAAcA,EAAY3jC,KAE9B,OAAO0jC,EAGP,OAAO,KAGf,SAASE,GAAe9vB,EAAO2B,EAAOqM,GAClC,IAAI+hB,EAAWpuB,EAAMqM,GACjBvH,EAAS+G,GAAYuiB,GACrBC,EAAsBX,GA+D9B,SAASY,EAAe9jC,GACpB,KAAO1C,MAAM+H,QAAQrF,IAAQ,CAGzB,GAAIA,EAAM3B,QAAU8U,GAAgB,EAChC,OAAOnT,EACXA,EAAQA,EAAMiS,IAElB,OAAO,KAvE2B6xB,CAAeF,IAC7Ch0B,EAASuP,GAAiBtL,EAAMjE,QAChC,IAAIiyB,GAAiBhuB,EAAMjE,OAAQiE,EAAO2B,GAAO,GACjD,KACAkP,EAAUvF,GAAiBtL,EAAM6Q,SACjC,IAAImd,GAAiBhuB,EAAM6Q,QAAS7Q,EAAO2B,GAAO,GAClD,KACJ,MAAO,CACH6U,KAAM+Y,GAAO9oB,GACbA,OAAQA,EAAQ1K,OAAQA,EAAQ8U,QAASA,EACzCqf,MAAOP,GAAa3vB,EAAM8E,MAAOnD,GACjC8c,UAAWuR,GAvXf1mC,OAAO+B,eA7DP,SAAS8kC,GAAMx/B,EACfmL,EACA8T,EACAhW,EACAw2B,EACA30B,EACA8f,EACA5f,EACA4H,EACA8sB,EACAC,EACA7gB,EACAjG,EACA+mB,EACAC,EACAjQ,EACAC,EACAG,EACAC,EACAC,EACAC,EACAC,EACA0P,EACAz2B,EACA4lB,EACA8Q,EACAC,EACA1Z,EACA/a,EACArC,GACI3Q,KAAKyH,KAAOA,EACZzH,KAAK4S,GAAKA,EACV5S,KAAK0mB,UAAYA,EACjB1mB,KAAK0Q,SAAWA,EAChB1Q,KAAKknC,QAAUA,EACflnC,KAAKuS,UAAYA,EACjBvS,KAAKqyB,KAAOA,EACZryB,KAAKyS,KAAOA,EACZzS,KAAKqa,kBAAoBA,EACzBra,KAAKmnC,kBAAoBA,EACzBnnC,KAAKonC,oBAAsBA,EAC3BpnC,KAAKumB,gBAAkBA,EACvBvmB,KAAKsgB,gBAAkBA,EACvBtgB,KAAKqnC,kBAAoBA,EACzBrnC,KAAKsnC,qBAAuBA,EAC5BtnC,KAAKq3B,cAAgBA,EACrBr3B,KAAKs3B,mBAAqBA,EAC1Bt3B,KAAKy3B,aAAeA,EACpBz3B,KAAK03B,kBAAoBA,EACzB13B,KAAK23B,UAAYA,EACjB33B,KAAK43B,eAAiBA,EACtB53B,KAAK63B,aAAeA,EACpB73B,KAAKunC,QAAUA,EACfvnC,KAAK8Q,eAAiBA,EACtB9Q,KAAK02B,WAAaA,EAClB12B,KAAKwnC,kBAAoBA,EACzBxnC,KAAKynC,aAAeA,EACpBznC,KAAK+tB,WAAaA,EAClB/tB,KAAKgT,QAAUA,EACfhT,KAAK2Q,OAASA,GAEU9P,UAAW,YAAa,CAChD4L,IAAK,WACD,IAAI4kB,EAAM,GAEV,OADA4U,GAAqBjmC,KAAK+tB,WAAYsD,GAC/BA,EAAI7oB,KAAK,KAEpBq6B,YAAY,EACZC,cAAc,IAIgB,WAClC,SAAS4E,EAAMC,EACflgC,EACAlC,EACAihB,EACA8C,EACAG,EACAme,EACAt7B,EACA4c,EACA8I,EACAxU,EACAqqB,EACAC,EACA/2B,EACAC,EACA+2B,EACA/kC,EACAglC,EACApsB,EACAC,EACAosB,EACAp1B,EACA8U,GACI3nB,KAAK2nC,OAASA,EACd3nC,KAAKyH,KAAOA,EACZzH,KAAKuF,MAAQA,EACbvF,KAAKwmB,cAAgBA,EACrBxmB,KAAKspB,eAAiBA,EACtBtpB,KAAKypB,aAAeA,EACpBzpB,KAAK4nC,iBAAmBA,EACxB5nC,KAAKsM,MAAQA,EACbtM,KAAKkpB,gBAAkBA,EACvBlpB,KAAKgyB,QAAUA,EACfhyB,KAAKwd,MAAQA,EACbxd,KAAK6nC,WAAaA,EAClB7nC,KAAK8nC,cAAgBA,EACrB9nC,KAAK+Q,OAASA,EACd/Q,KAAKgR,QAAUA,EACfhR,KAAK+nC,OAASA,EACd/nC,KAAKgD,KAAOA,EACZhD,KAAKgoC,eAAiBA,EACtBhoC,KAAK4b,MAAQA,EACb5b,KAAK6b,OAASA,EACd7b,KAAKioC,WAAaA,EAClBjoC,KAAK6S,OAASA,EACd7S,KAAK2nB,QAAUA,EAEnBvnB,OAAO+B,eAAeulC,EAAM7mC,UAAW,QAAS,CAC5C4L,IAAK,WACD,OAAQzM,KAAKyH,MACT,KAAK,EACD,MAAO,sBACX,KAAK,EACD,MAAO,oBACX,KAAK,EACD,MAAO,6BACX,KAAK,EACD,MAAO,yBACX,KAAK,EACD,MAAO,uBACX,KAAK,EACD,MAAO,iBACX,QACI,MAAO,kBAGnBo7B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeulC,EAAM7mC,UAAW,SAAU,CAC7C4L,IAAK,WACD,IAAIH,EAAQ,GAmBZ,OAlBiB,GAAbtM,KAAKsM,OACLA,EAAMhJ,KAAK,4BACE,EAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,8BACE,GAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,4BACE,IAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,gCACE,IAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,8BACE,EAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,8BACE,EAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,8BACE,GAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,yBACE,EAAbtD,KAAKsM,OACLA,EAAMhJ,KAAK,0BACRgJ,EAAM9D,KAAK,MAEtBq6B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeulC,EAAM7mC,UAAW,YAAa,CAChD4L,IAAK,WACD,IAAI4kB,EAAM,GAEV,GADAA,EAAI/tB,KAAK,IAAKtD,KAAKgyB,SAAWhyB,KAAKkoC,OAC/BloC,KAAKwd,MACL,IAAK,IAAIrc,EAAI,EAAGA,EAAInB,KAAKwd,MAAMlc,QAAS,CACpC,IAAIqc,EAAW3d,KAAKwd,MAAMrc,KAC1B,GAAuB,iBAAZwc,EACP,MAEJ,IAAI0F,EAAYrjB,KAAKwd,MAAMrc,KAC3BkwB,EAAI/tB,KAAK,IAAKqa,EAAU,KAAM0F,EAAW,KAMjD,OAHAgO,EAAI/tB,KAAK,KACT2iC,GAAqBjmC,KAAK4b,MAAOyV,GACjCA,EAAI/tB,KAAK,KAAMtD,KAAKgyB,SAAWhyB,KAAKkoC,MAAO,KACpC7W,EAAI7oB,KAAK,KAEpBq6B,YAAY,EACZC,cAAc,IApHe,GAgML,WAC5B,SAASqF,EAAWC,GAChBpoC,KAAKooC,WAAaA,EAEtBhoC,OAAO+B,eAAegmC,EAAWtnC,UAAW,QAAS,CAIjD4L,IAAK,WACD,IAAIH,EAAQtM,KAAKooC,WAAWhzB,IAC5B,MAAO,CACHizB,eAAgB/7B,EAChBg8B,eAAwB,EAARh8B,EAChBi8B,gBAAyB,EAARj8B,GACjBk8B,iBAA0B,EAARl8B,GAClBm8B,eAAwB,GAARn8B,GAChBo8B,SAAkB,GAARp8B,GACVq8B,YAAqB,IAARr8B,GACbs8B,aAAsB,IAARt8B,GACdu8B,UAAmB,IAARv8B,GACXw8B,qBAAsBx8B,GAAS,KAGvCu2B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,SAAU,CAClD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKooC,WAAW/yB,MAClDwtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,OAAQ,CAChD4L,IAAK,WAAc,OAAO45B,GAAOrmC,KAAKooC,WAAWlzB,KAAO,IACxD2tB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,OAAQ,CAChD4L,IAAK,WAAc,OAAQzM,KAAKgnC,OAAS,IAAIz+B,KAAI,SAAU8pB,GAAQ,OAAOgU,GAAOhU,EAAK9U,QAAQ,MAAU/U,KAAK,KAC7Gq6B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,UAAW,CACnD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAW1yB,KAC1CmtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,QAAS,CAMjD4L,IAAK,WACD,IAAIgM,EAAQzY,KAAKooC,WAEjB,OAAO3B,GADKhuB,EAAMtD,IAAO4Y,WACEtV,IAE/BoqB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,QAAS,CACjD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAWjzB,KAC1C0tB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,UAAW,CACnD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAW3yB,KAC1CotB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,WAAY,CACpD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAWzyB,KAC1CktB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,kBAAmB,CAC3D4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAWxyB,KAC1CitB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,WAAY,CACpD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAWvyB,KAC1CgtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,YAAa,CACrD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAWtyB,KAC1C+sB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,YAAa,CACrD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKooC,WAAWryB,MAClD8sB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,OAAQ,CAChD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKooC,WAAW9yB,MAClDutB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,YAAa,CACrD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKooC,WAAWpyB,MAClD6sB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,kBAAmB,CAC3D4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKooC,WAAWnyB,MAClD4sB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,UAAW,CACnD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAW7yB,KAC1CstB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,QAAS,CACjD4L,IAAK,WAAc,OAAOzM,KAAKooC,WAAW5yB,KAC1CqtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAegmC,EAAWtnC,UAAW,aAAc,CAItD4L,IAAK,WAGD,IAFA,IAAIs8B,EAAa,GACbntB,EAAQ5b,KAAKgpC,UACVptB,GACHmtB,EAAWzlC,KAAKsY,GAChBA,EAAQA,EAAM5Y,KAElB,OAAO+lC,GAEXlG,YAAY,EACZC,cAAc,IAtIS,GA+KM,WACjC,SAASmG,EAAgBC,GACrBlpC,KAAKkpC,gBAAkBA,EAE3B9oC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,cAAe,CAC5D4L,IAAK,WAAc,OAAOzM,KAAKkpC,gBAAgB5yB,KAC/CusB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,QAAS,CACtD4L,IAAK,WACD,OAAOzM,KAAKkpC,gBAAgBl6B,MAAM0H,IAC7BnO,IAAI49B,KAEbtD,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,SAAU,CACvD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKkpC,gBAAgB7zB,MACvDwtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,aAAc,CAC3D4L,IAAK,WAAc,OAAOzM,KAAKkpC,gBAAgB3yB,KAC/CssB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,OAAQ,CACrD4L,IAAK,WAAc,OAAOzM,KAAKkpC,gBAAgBh0B,KAC/C2tB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,SAAU,CACvD4L,IAAK,WAAc,OAAOzM,KAAKkpC,gBAAgB1yB,KAC/CqsB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8mC,EAAgBpoC,UAAW,OAAQ,CACrD4L,IAAK,WAAc,OAAO05B,GAAQnmC,KAAKkpC,gBAAgB5zB,MACvDutB,YAAY,EACZC,cAAc,IAxCc,GA2DpC,IAAIqG,GAA+B,WAC/B,SAASA,EAAcC,EAAcnf,EAAQnF,EAAWrd,GACpDzH,KAAKopC,aAAeA,EACpBppC,KAAKiqB,OAASA,EACdjqB,KAAK8kB,UAAYA,EACjB9kB,KAAKyH,KAAOA,EAOhB,OALArH,OAAO+B,eAAegnC,EAActoC,UAAW,QAAS,CACpD4L,IAAK,WAAc,OAAOiY,GAAS1kB,KAAK8kB,UAAW9kB,KAAKiqB,SACxD4Y,YAAY,EACZC,cAAc,IAEXqG,EAZuB,GAuC9B/oC,OAAO+B,eAJP,SAASknC,GAAuBC,EAAeC,GAC3CvpC,KAAKspC,cAAgBA,EACrBtpC,KAAKupC,QAAUA,GAE0B1oC,UAAW,aAAc,CAIlE4L,IAAK,WAGD,IAFA,IAAe88B,EAANvpC,KAAmBupC,QAASD,EAA5BtpC,KAA+CspC,cACpDE,EAAU,GACLroC,EAAI,EAAGA,EAAImoC,EAAchoC,OAAQH,IAAK,CAC3C,IAAIsoC,EAASH,EAAcnoC,GACvBuoC,OAAS,EASb,GARsB,iBAAXD,IACPC,EAAS,CACLN,aAAcK,EACdhiC,KAAM,mBACNqd,UAAWwkB,IAAgBnoC,GAC3BqM,KAAMi8B,IAGQ,iBAAXA,EACP,OAAiB,EAATA,GACJ,KAAK,EAEDC,EAAS,IAAIP,GAAcM,EAAQF,EADRE,IAAW,GAC4B,eAClE,MACJ,KAAK,EAEDC,EAAS,IAAIP,GAAcM,EAAQF,EADnBE,IAAW,EAC4B,UACvD,MACJ,KAAK,EACD,IAAI3wB,EAAe2wB,IAAW,EAC9BC,EAAS,IAAIP,GAAcM,EAAQF,EAASzwB,EAAc,cAC1D,MACJ,KAAK,GAED4wB,EAAS,IAAIP,GAAcM,EAAQF,EADnCzwB,EAAe2wB,IAAW,EACgC,SACzC,SAAIH,IAAgBnoC,GACrCuoC,EAAkB,UAAIJ,IAAgBnoC,GAIlD,IAAKuoC,EACD,OAAQD,GACJ,KAAKhJ,GACDiJ,EAAS,CACLN,aAAcK,EACdhiC,KAAM,iBACNkiC,aAAcL,IAAgBnoC,GAC9B2jB,UAAWwkB,IAAgBnoC,IAE/B,MACJ,KAAKq/B,GACDkJ,EAAS,CACLN,aAAcK,EACdhiC,KAAM,kBAKjBiiC,IACDA,EAAS,CACLN,aAAcK,EACdhiC,KAAM,kBACNmiC,KAAMH,IAGdD,EAAQlmC,KAAKomC,GAEjB,OAAOF,GAEX3G,YAAY,EACZC,cAAc,IAUlB1iC,OAAO+B,eALP,SAAS0nC,GAAuBP,EAAeQ,EAAMP,GACjDvpC,KAAKspC,cAAgBA,EACrBtpC,KAAK8pC,KAAOA,EACZ9pC,KAAKupC,QAAUA,GAE0B1oC,UAAW,aAAc,CAIlE4L,IAAK,WAGD,IAFA,IAAe88B,EAANvpC,KAAmBupC,QAASD,EAA5BtpC,KAA+CspC,cAAeQ,EAA9D9pC,KAAwE8pC,KAC7EN,EAAU,GACLroC,EAAI,EAAGA,EAAImoC,EAAchoC,OAAQH,IAAK,CAM3C,IAJA,IAAI4oC,EAAWT,EAAcnoC,GAEzB6oC,EAAYV,IAAgBnoC,GAC5B8B,EAAQ,GACHgK,EAAI9L,EAAI,EAAG8L,GAAM9L,EAAI6oC,EAAY/8B,IAAK,CAC3C,IAAIw8B,EAASH,EAAcr8B,GAC3B,GAAsB,iBAAXw8B,EACPxmC,GAASwmC,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAGTxmC,GAAS,MAAawmC,EAAS,GAAK,QAEnC,CACD,IAAI3kB,EAAY2kB,IAAW,EACvBQ,OAAY,EACZC,OAAO,EACX,OAAiB,EAATT,GACJ,KAAK,EACD,IAAI9rB,EAAW2rB,IAAgBr8B,GAC3Bk9B,EAAab,IAAgBr8B,GACjCu8B,EAAQlmC,KAAK,CACT8lC,aAAcK,EACdM,SAAUA,EACVtiC,KAAM,OACN4b,UAAWpgB,EAAO0a,SAAUA,EAAUwsB,WAAYA,IAEtD,MACJ,KAAK,EACDX,EAAQlmC,KAAK,CACT8lC,aAAcK,EACdM,SAAUA,EACVtiC,KAAM,OAAQqd,UAAWA,EACzBtX,KAAMvK,IAEV,MACJ,KAAK,EAEDinC,EAAOJ,EADPG,EAAYX,IAAgBr8B,IAE5B,IAAIy8B,EAAS,IAAIP,GAAcM,EAAQF,EAASzkB,EAAW,aAC3D4kB,EAAkB,UAAIO,EACtBP,EAAiB,SAAIK,EACrBL,EAAoB,YAAIzmC,EACxBymC,EAAa,KAAIQ,EACjBV,EAAQlmC,KAAKomC,GACb,MACJ,KAAK,EAEDQ,EAAOJ,EADPG,EAAYX,IAAgBr8B,KAE5By8B,EAAS,IAAIP,GAAcM,EAAQF,EAASzkB,EAAW,cACrC,UAAImlB,EACtBP,EAAiB,SAAIK,EACrBL,EAAa,KAAIQ,EACjBV,EAAQlmC,KAAKomC,KAMjCvoC,GAAK6oC,EAET,OAAOR,GAEX3G,YAAY,EACZC,cAAc,IAhKtB,IA0KIsH,GAL4BC,QAAQC,QAAQ,MA6DhD,SAASC,GAAsBt3B,EAAOwF,GAClC,IAAI3H,EAAiBmC,EAAMnC,eAC3B,GAAuB,OAAnBA,EACA,IAAK,IAAI3P,EAAI,EAAGA,EAAI2P,EAAexP,OAAQH,GAAK,EAAG,CAC/C,IACIqpC,EAAkB15B,EAAe3P,EAAI,GACzC,IAAyB,IAArBqpC,EAAwB,CACxB,IAAItT,EAAejkB,EAAMR,KAAK+3B,GAG9BzvB,GANgBjK,EAAe3P,IAO/B+1B,EAAapmB,eAAe,EAAgB2H,EAAM+xB,GAAkBA,KAuBpF,SAASC,GAAc3mC,EAAMmZ,EAAUytB,GACnC,OAAI1tB,GAAqBC,GACdA,EAAS2P,cAAc9oB,EAAM4mC,GAGf,OAAdA,EAAqBztB,EAAS2P,cAAc9oB,GAC/CmZ,EAAS0tB,gBAAgBD,EAAW5mC,GAGhD,SAAS8mC,GAAY9jB,EAAa7T,EAAOrF,EAAStB,EAAOu+B,EAAMC,EAAWC,EAAiB9tB,EAAUP,EAAW1Q,GAC5G,IAAIyM,EAA4DxF,EAAMyT,UAAU1X,QAchF,OAbAyJ,EAAMvD,IAAQ21B,EACdpyB,EAAMrD,IAAiB,IAAR9I,EACf+Y,GAAuB5M,GACvBA,EAAMpD,IAAUoD,EAAMxC,IAAoB6Q,EAC1CrO,EAAM/C,IAAW9H,EACjB6K,EAAM7C,IAAqBm1B,GAAmBjkB,GAAeA,EAAYlR,IAEzE6C,EAAM5C,IAAaoH,GAAY6J,GAAeA,EAAYjR,IAE1D4C,EAAM3C,IAAa4G,GAAaoK,GAAeA,EAAYhR,KAAc,KACzE2C,EAAM9C,IAAc3J,GAAY8a,GAAeA,EAAYnR,KAAe,KAC1E8C,EAAMjD,IAAUs1B,EAETryB,EAEX,SAASuyB,GAAiB/3B,EAAO63B,EAAWvlC,EAAOkC,EAAM3D,EAAM0Z,GAE3D,IAAIytB,EAAgB1lC,EAAQ6Q,GACxBU,EAAQ7D,EAAMR,KAAKw4B,IAK3B,SAASC,EAAmBj4B,EAAO63B,EAAWG,EAAexjC,EAAM3D,EAAM0Z,GACrE,IAAI9D,EAAwBD,KACxBI,EAAWC,KACX+B,EAAShC,EAAWH,EAAwBA,GAAyBA,EAAsBmC,OAK3F/E,EAAQ7D,EAAMR,KAAKw4B,GACnBE,GAAYl4B,EAHO4I,GAAUA,IAAWivB,EACPjvB,EAAS,KAEVpU,EAAMwjC,EAAennC,EAAM0Z,GAiB/D,OAbyB,OAArBvK,EAAM8a,aACN9a,EAAM8a,WAAajX,GAEnB4C,KACIG,GAA2C,MAA/BH,EAAsBkC,OAChB,OAAjB9E,EAAM+E,QAAkD,IAA/BnC,EAAsBjS,KAI1CoS,IACNH,EAAsB1W,KAAO8T,GAH7B4C,EAAsBkC,MAAQ9E,GAM/BA,EA9BHo0B,CAAmBj4B,EAAO63B,EAAWG,EAAexjC,EAAM3D,EAAM0Z,GAEpE,OADA7D,GAAyB7C,GAAO,GACzBA,EA8BX,SAASs0B,GAAuBn4B,EAAOo4B,EAAa9lC,EAAOkT,GAGvD,IAAI3B,EAAQ7D,EAAMof,KAOlB,OANa,MAATvb,IAGA7D,EAAMof,KAAOvb,EAAQq0B,GAAYl4B,EAAOo4B,EACxC,EAAc9lC,EAAO,KAAM,OAExBkT,EAAMjD,IAAUsB,EA2C3B,SAASw0B,GAAW7yB,EAAOxF,EAAOrF,GAE9B0N,GAAU7C,EAAOA,EAAMjD,KACvB,IACI,IAAIjD,EAAYU,EAAMV,UACJ,OAAdA,GACAg5B,GAAmB,EAAgBh5B,EAAW3E,GAIlD,IAAI49B,EAAav4B,EAAMvC,SACJ,OAAf86B,GACAC,GAAgBhzB,EAAO+yB,EAAY,EAAgB59B,GAOnDqF,EAAMsT,kBACNtT,EAAMsT,iBAAkB,GAKxBtT,EAAMq0B,sBACNiD,GAAsBt3B,EAAOwF,GAK7BxF,EAAMo0B,mBACNkE,GAAmB,EAAgBt4B,EAAMV,UAAW3E,GAGxD,IAAI8oB,EAAazjB,EAAMyjB,WACJ,OAAfA,GAlKZ,SAASgV,EAAsBC,EAAWjV,GACtC,IAAK,IAAIv1B,EAAI,EAAGA,EAAIu1B,EAAWp1B,OAAQH,IACnCyqC,GAAgBD,EAAWjV,EAAWv1B,IAiKlCuqC,CAAsBjzB,EAAOie,GAGrC,QACIje,EAAMrD,MAAU,EAChBiG,MAWR,SAASwwB,GAAYpzB,EAAOxF,EAAOu4B,EAAY59B,GAE3C0N,GAAU7C,EAAOA,EAAMjD,KACvB,IAAIlJ,EAAQmM,EAAMrD,IAClB,IACIiQ,GAAuB5M,GACvB+B,GAAgBvH,EAAMoH,mBACH,OAAfmxB,GACAC,GAAgBhzB,EAAO+yB,EAAY,EAAgB59B,GAEvD,IAAIsK,EAAqB8B,KACrB8xB,EAAmE,IAAhC,EAARx/B,GAG/B,IAAK4L,EACD,GAAI4zB,EAAyB,CACzB,IAAIxU,EAAqBrkB,EAAMqkB,mBACJ,OAAvBA,GACAQ,GAAkBrf,EAAO6e,EAAoB,UAGhD,CACD,IAAID,EAAgBpkB,EAAMokB,cACJ,OAAlBA,GACAY,GAAyBxf,EAAO4e,EAAe,EAA4B,MAE/Ec,GAAwB1f,EAAO,GAUvC,GAi6BR,SAASszB,EAA4BtzB,GAEjC,IADA,IAAIuzB,EAAkBvzB,EAAM1C,IACD,OAApBi2B,GAA0B,CAG7B,GAAIp1B,GAAao1B,KAAuD,IAAnCA,EAAgB11B,IAAsB,CACvE,IAAK,IAAInV,EAAIuV,GAAyBvV,EAAI6qC,EAAgB1qC,OAAQH,IAAK,CACnE,IAAI8qC,EAAgBD,EAAgB7qC,GAChC+qC,EAAgBD,EAAc92B,IAElC02B,GAAYI,EAAeC,EAAeA,EAAcx7B,SAAUu7B,EAAcv2B,KAEpF,IAAIy2B,EAAaH,EAAgBz1B,IACjC,GAAmB,OAAf41B,EAMA,CAAA,IAAIC,EAAyB7mB,GAAkB9M,GAC/C,IAAStX,EAAI,EAAGA,EAAIgrC,EAAW7qC,OAAQH,IAAK,CAGxC,IAFA,IAAIkrC,EAAaF,EAAWhrC,GACxB2lB,EAAculB,EAAWh3B,IACtBuB,GAAakQ,IAChBA,EAAcA,EAAYzR,IAE9B,IAAIi3B,EAAyB/mB,GAAkBuB,GAE/C,GADmF,KAA1B,GAAhCwlB,EAAuBl3B,MACvBk3B,IAA2BF,EAAwB,CAGxE,IAAIG,EAAaF,EAAWl3B,IAE5B02B,GAAYQ,EAAYE,EAAYA,EAAW77B,SAAU27B,EAAW32B,QAKpFs2B,EAAkBA,EAAgB12B,KA98BlCy2B,CAA4BtzB,GAEC,OAAzBxF,EAAMnC,gBACNy5B,GAAsBt3B,EAAOwF,IAI5BP,EACD,GAAI4zB,EAAyB,CACzB,IAAIpU,EAAoBzkB,EAAMykB,kBACJ,OAAtBA,GACAI,GAAkBrf,EAAOif,OAG5B,CACD,IAAID,EAAexkB,EAAMwkB,aACJ,OAAjBA,GACAQ,GAAyBxf,EAAOgf,EAAc,GAElDU,GAAwB1f,EAAO,IAhT/C,SAAS+zB,EAAgBv5B,EAAOwF,GAC5B,IAAIG,EAAgBwD,KACpB,IACI,GAAkC,OAA9BnJ,EAAMm0B,oBAA8B,CACpC,IAAIhtB,EAAmBI,GAAgBvH,EAAMk0B,mBAC7CvsB,GAAeR,GAGf,IAFA,IAAIqyB,GAAyB,EACzBC,GAAuB,EAClBvrC,EAAI,EAAGA,EAAI8R,EAAMm0B,oBAAoB9lC,OAAQH,IAAK,CACvD,IAAIwrC,EAAc15B,EAAMm0B,oBAAoBjmC,GAC5C,GAA2B,iBAAhBwrC,EAA0B,CACjC,GAAIA,GAAe,EAAG,CAIlB9zB,GADA6zB,GAAuBC,GAGvB,IAAIC,EAAgB35B,EAAMm0B,sBAAsBjmC,GAEhDsrC,EADAryB,GAAoB/C,GAA6Bu1B,OAOjDxyB,GAAoBuyB,EAExB/xB,GAAeR,QAIK,OAAhBuyB,IAQAtzB,KACAmB,GAAgBJ,GAEhBuyB,EAAY,EADEroB,GAAY7L,EAAMg0B,IACKC,IAEzCD,MAKhB,QACI5zB,GAAqBD,IAiQrB4zB,CAAgBv5B,EAAOwF,GAEvB,IAAIie,EAAazjB,EAAMyjB,WACJ,OAAfA,GA/OZ,SAASmW,EAAuBlB,EAAWjV,GACvC,IAAK,IAAIv1B,EAAI,EAAGA,EAAIu1B,EAAWp1B,OAAQH,IACnC2rC,GAAiBnB,EAAWjV,EAAWv1B,IA8OnC0rC,CAAuBp0B,EAAOie,GAKlC,IAAInkB,EAAYU,EAAMV,UAMtB,GALkB,OAAdA,GACAg5B,GAAmB,EAAgBh5B,EAAW3E,IAI7CsK,EACD,GAAI4zB,EAAyB,CACzB,IAAIlU,EAAiB3kB,EAAM2kB,eACJ,OAAnBA,GACAE,GAAkBrf,EAAOmf,OAG5B,CACD,IAAID,EAAY1kB,EAAM0kB,UACJ,OAAdA,GACAM,GAAyBxf,EAAOkf,EAAW,GAE/CQ,GAAwB1f,EAAO,IAI3C,SACkC,IAA1BxF,EAAMqN,kBACNrN,EAAMqN,iBAAkB,GAE5B7H,EAAMrD,MAAU,GAChB0G,MAGR,SAASixB,GAA0BhoB,EAAUymB,EAAY59B,GACrD,IAAIm9B,EAAkBhmB,EAASnP,IAC3Bo3B,GAAuBhzB,KACvBizB,EAAuB9nB,GAAeJ,GAC1C,IACQioB,IAAwBC,GAAwBlC,EAAgBmC,OAChEnC,EAAgBmC,QAEpB,IAAIj6B,EAAQ8R,EAAS5P,IACjB83B,GACA3B,GAAWvmB,EAAU9R,EAAOrF,GAEhCi+B,GAAY9mB,EAAU9R,EAAOu4B,EAAY59B,GAE7C,QACQo/B,IAAwBC,GAAwBlC,EAAgBvT,KAChEuT,EAAgBvT,OAI5B,SAASiU,GAAgBhzB,EAAO+yB,EAAY2B,EAAIv/B,GAC5C,IAAIw/B,EAAoBhxB,KACxB,IACIvD,GAAqB,MACZ,EAALs0B,GAAuB10B,EAAMnX,OAAS8U,IAGtCkqB,GAAoB7nB,EAAO,EAAGuB,MAElCwxB,EAAW2B,EAAIv/B,GAEnB,QACQ8K,GAAqB,IACrBK,KAEJC,GAAiBo0B,IAMzB,SAASC,GAAsBp6B,EAAO6D,EAAO2B,GACzC,GAAI5B,GAAmBC,GAGnB,IAFA,IACI0gB,EAAM1gB,EAAM2S,aACPwN,EAFGngB,EAAMwS,eAEe2N,EAAiBO,EAAKP,IAAkB,CACrE,IAAIpvB,EAAMoL,EAAMR,KAAKwkB,GACjBpvB,EAAIiJ,gBACJjJ,EAAIiJ,eAAe,EAAgB2H,EAAMwe,GAAiBA,IAQ1E,SAASqW,GAA0Br6B,EAAOwF,EAAO3B,GACxCuB,OA2fT,SAASk1B,EAAyBt6B,EAAOwF,EAAO3B,EAAOyG,GACnD,IAAI2G,EAAQpN,EAAMwS,eACdkO,EAAM1gB,EAAM2S,aACXxW,EAAMsT,iBACPH,GAA+BtP,EAAO2B,GAE1C0d,GAAgB5Y,EAAQ9E,GAExB,IADA,IAAIqvB,EAAgBhxB,EAAMgxB,cACjB3mC,EAAI+iB,EAAO/iB,EAAIq2B,EAAKr2B,IAAK,CAC9B,IAAI0G,EAAMoL,EAAMR,KAAKtR,GACjBqsC,EAAcv2B,GAAepP,GAC7B2lC,GAEAC,GAAkBh1B,EAAO3B,EAAOjP,GAEpC,IAAI6wB,EAAY5P,GAAkB7V,EAAMR,KAAMgG,EAAOtX,EAAG2V,GACxDqf,GAAgBuC,EAAWjgB,GACL,OAAlBqvB,GACA4F,GAAmBj1B,EAAOtX,EAAI+iB,EAAOwU,EAAW7wB,EAAKiP,EAAOgxB,GAE5D0F,IACoB3oB,GAAyB/N,EAAMvR,MAAOkT,GAC5C/C,IAAWgjB,IA/gBjC6U,CAAyBt6B,EAAOwF,EAAO3B,EAAO0N,GAAiB1N,EAAO2B,IACpB,MAA/B,IAAd3B,EAAMxK,QAkhBf,SAASqhC,EAA6B16B,EAAO26B,EAAU92B,GACnD,IAAIoN,EAAQpN,EAAMwS,eACdkO,EAAM1gB,EAAM2S,aACZokB,EAAU56B,EAAMm0B,oBAChB7gB,EAAkBtT,EAAMsT,gBACxBzN,EAAehC,EAAMvR,MAAQ6Q,GACjC,IACIyC,GAAqBC,GACrB,IAAK,IAAI3X,EAAI+iB,EAAO/iB,EAAIq2B,EAAKr2B,IAAK,CAC9B,IAAI0G,EAAMoL,EAAMR,KAAKtR,GACjBu3B,EAAYkV,EAASzsC,GACrB0G,EAAIgJ,cAGJwI,KACAy0B,GAAiCjmC,EAAKgmC,EAASnV,EAAW5hB,EAAOyP,IAE5DA,GACLsnB,EAAQvqC,KAAK,OAIzB,QACIuV,GAAqB,OAxiBrB80B,CAA6B16B,EAAOwF,EAAO3B,IAOnD,SAASi3B,GAAyBH,EAAU92B,EAAOk3B,QACrB,IAAtBA,IAAgCA,EAAoBxpB,IACxD,IAAIqjB,EAAa/wB,EAAM+wB,WACvB,GAAIA,EAEA,IADA,IAAIoG,EAAan3B,EAAMvR,MAAQ,EACtBpE,EAAI,EAAGA,EAAI0mC,EAAWvmC,OAAQH,GAAK,EAAG,CAC3C,IAAIoE,EAAQsiC,EAAW1mC,EAAI,GACvB8B,GAAmB,IAAXsC,EACRyoC,EAAkBl3B,EAAO82B,GACzBA,EAASroC,GACbqoC,EAASK,KAAgBhrC,GAWrC,SAASirC,GAA0BrmC,GAC/B,OAAOA,EAAIoL,QACNpL,EAAIoL,MAAQk7B,GAAY,GAAoB,EAAGtmC,EAAI6I,SAAU7I,EAAI2I,MAAO3I,EAAI4I,KAAM5I,EAAIuK,cAAevK,EAAIwK,SAAUxK,EAAI0K,UAAW1K,EAAImL,QAASnL,EAAI8I,SAc5J,SAASw9B,GAAY1mC,EAAM2mC,EAAW5C,EAAYh7B,EAAOC,EAAM0C,EAAYG,EAAOf,EAAWS,EAASrC,GAElG,IAAI0J,EAAoBjE,GAAgB5F,EAIpC69B,EAAoBh0B,EAAoB5J,EACxCiW,EAiER,SAAS4nB,EAAoBj0B,EAAmBg0B,GAE5C,IADA,IAAI3nB,EAA+C,GAC1CvlB,EAAI,EAAGA,EAAIktC,EAAmBltC,IACnCulB,EAAUpjB,KAAKnC,EAAIkZ,EAAoB,KAAOsF,IAElD,OAAO+G,EAtES4nB,CAAoBj0B,EAAmBg0B,GACvD,OAAO3nB,EAAUvR,IAgCb,CACIvC,GAAIw7B,EACJ1nB,UAAWA,EACXhW,SAAU86B,EACVtE,QAAS,KACT30B,UAAWA,EACX8f,KAAM,KACN5f,KAAMiU,EAAU1X,QAAQu/B,KAAK,KAAMl0B,GACnCA,kBAAmBA,EACnB8sB,kBAAmBkH,EACnBjH,oBAAqB,KACrB7gB,iBAAiB,EACjBjG,iBAAiB,EACjB+mB,mBAAmB,EACnBC,sBAAsB,EACtBjQ,cAAe,KACfC,mBAAoB,KACpBG,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACd0P,QAAS,KACTz2B,eAAgB,KAChB4lB,WAAY,KACZ8Q,kBAAyC,mBAAfr0B,EAA4BA,IAAeA,EACrEs0B,aAA+B,mBAAVn0B,EAAuBA,IAAUA,EACtDya,WAAY,KACZ/a,QAASA,EACTrC,OAAQA,GAkBpB,SAAS69B,GAAkBnvC,EAASovC,GAChC,IAAIC,EAAkBrvC,EAAQ8d,eAAe,KAAM,MAcnD,MAbyC,iBAAtBsxB,EACdzxB,GAAqB0xB,GAClBA,EAAgBC,kBAAkBF,GAClCC,EAAgB3hB,cAAc0hB,GAClCA,EAkDR,SAAStD,GAAYl4B,EAAO27B,EAASnnC,EAAMwjC,EAAejZ,EAASxU,GAG/D,MAuBI,CACI/V,KAAMA,EACNlC,MAAO0lC,EACPzkB,cA3BYooB,EAAUA,EAAQpoB,eAAiB,EA4B/C8C,gBAAiB,EACjBG,cAAe,EACfme,iBAAkB,KAClBt7B,MAAO,EACP4c,gBAAiB,EACjB8I,QAASA,EACTxU,MAAOA,EACPqqB,WAAY,KACZC,mBAAe5gC,EACf6J,YAAQ7J,EACR8J,aAAS9J,EACT6gC,OAAQ,KACR/kC,KAAM,KACNglC,eAAgB,KAChBpsB,MAAO,KACPC,OAAQ+yB,EACR3G,WAAY,KACZp1B,OAAQ,KACR8U,QAAS,MAGrB,SAASknB,GAAwBC,EAAetE,EAAiBuE,GAC7D,IAAK,IAAIr6B,KAAco6B,EACnB,GAAIA,EAAcruC,eAAeiU,GAAa,CAE1C,IAAIs6B,EAAeF,EAAcp6B,IADjCq6B,EAA0B,OAAdA,EAAqB,GAAKA,GAExBtuC,eAAeiU,GACzBq6B,EAAUr6B,GAAYpR,KAAKknC,EAAiB91B,EAAYs6B,GAGvDD,EAAUr6B,GAAc,CAAC81B,EAAiB91B,EAAYs6B,GAInE,OAAOD,EA2DX,SAASE,GAAwBx2B,EAAOlT,EAAON,EAAUhC,EAAOyZ,EAAWwyB,EAAYC,GAEnF,IAGIC,EAHAjwB,EAAUoF,GAAiBhf,EAAOkT,GAClC3B,EAAQ4N,GAASnf,EAAOkT,GACxB42B,EAAYv4B,EAAM/F,OAEtB,IAAKm+B,GAA2B,MAAbG,IAAsBD,EAAYC,EAAUpqC,IAC3DqqC,GAAqB72B,EAAO22B,EAAWnsC,GACnC8T,GAAgBD,IAsC5B,SAASy4B,EAAkB92B,EAAO21B,GAE9B,IAAIoB,EAAsB3qB,GAAyBupB,EAAW31B,GAC3B,GAA7B+2B,EAAoBp6B,MACtBo6B,EAAoBp6B,KAAU,IAzC1Bm6B,CAAkB92B,EAAOlT,EAAQ6Q,SAKpC,GAAmB,IAAfU,EAAMrP,KAA0B,CACrCxC,EA9BR,SAASwqC,EAAY3rC,GACjB,MAAa,UAATA,EACO,YACE,QAATA,EACO,UACE,eAATA,EACO,aACE,cAATA,EACO,YACE,aAATA,EACO,WACE,aAATA,EACO,WACJA,EAiBQ2rC,CAAYxqC,GAUvB,IAAIgY,EAAWkyB,EAAiBA,EAAer4B,EAAO2B,GAASA,EAAM5C,IAGrE5S,EAAqB,MAAbyZ,EAAoBA,EAAUzZ,EAAO6T,EAAMkb,SAAW,GAAI/sB,GAAYhC,EAC1E+Z,GAAqBC,GACrBA,EAASe,YAAYmB,EAASla,EAAUhC,GAElC8a,GAAgB9Y,KACtBka,EAAQnB,YAAcmB,EAAQnB,YAAY/Y,EAAUhC,GAChDkc,EAAQla,GAAYhC,IA8GpC,SAASysC,GAAkBz8B,EAAOwF,EAAO3B,EAAOwf,GAI5C,IAAKje,KACD,OAAO,EACX,IAAIlF,EA8HR,SAASw8B,EAAqB18B,EAAO26B,EAAU92B,GAG3C,IAAI84B,EAAW38B,EAAMu0B,kBACjBqI,EAAU,KACd,GAAID,EACA,IAAK,IAAIzuC,EAAI,EAAGA,EAAIyuC,EAAStuC,OAAQH,IAAK,CACtC,IAAI0G,EAAM+nC,EAASzuC,GACfk5B,GAA2BvjB,EAAOjP,EAAIyK,WAAkC,KACxEu9B,IAAYA,EAA2C,IACvD3oB,GAAmBd,GAA+BtP,EAAO82B,GAAW36B,EAAOpL,EAAIJ,MAC3EwP,GAAepP,IACG,EAAdiP,EAAMxK,OACNwqB,GAA4BhgB,GAChCg5B,GAAoB78B,EAAO6D,GAE3B+4B,EAAQ/pC,QAAQ+B,IAGhBgoC,EAAQvsC,KAAKuE,IAK7B,OAAOgoC,EAtJUF,CAAqB18B,EAAOwF,EAAO3B,GAChDi5B,EAA2B,OAAdzZ,EAAqB,KAAO,CAAE0Z,IAAK,GAChDC,GAAgB,EACpB,GAAmB,OAAf98B,EAAqB,CACrB88B,GAAgB,EAChBC,GAAcp5B,EAAO7D,EAAMR,KAAKnR,OAAQ6R,EAAW7R,QAOnD,IAAK,IAAIH,EAAI,EAAGA,EAAIgS,EAAW7R,OAAQH,KAC/B0G,EAAMsL,EAAWhS,IACboP,mBACJ1I,EAAI0I,kBAAkB1I,GAE9BsoC,GAAgCl9B,EAAO6D,EAAO3D,EAAW7R,QACzD,IAAI61B,EAA8BlkB,EAAMokB,eAAiBpkB,EAAMokB,cAAc/1B,QAAW,EACpF81B,EAAmCnkB,EAAMqkB,oBAAsBrkB,EAAMqkB,mBAAmBh2B,QAAW,EACnGwjB,EAAYhO,EAAMvR,MAAQ6Q,GAC9B,IAASjV,EAAI,EAAGA,EAAIgS,EAAW7R,OAAQH,IAAK,CACxC,IAAI0G,EACA2iC,EAAkBv3B,EAAMR,KAAKnR,OACjC8uC,GAAqBn9B,EAAOwF,EAFxB5Q,EAAMsL,EAAWhS,IAGrBkvC,GAAoBp9B,EAAMR,KAAKnR,OAAS,EAAGuG,EAAKkoC,GACrB,OAAvBloC,EAAIiJ,iBACJgG,EAAMxK,OAAS,GACM,OAArBzE,EAAIgJ,eACJiG,EAAMxK,OAAS,KAGnB0qB,GAAsBwT,EAAiB3iC,EAAKoL,EAAO6R,EAAWqS,EAA4BC,IA3OtG,SAASkZ,EAAgCr9B,EAAO6D,GAS5C,IAPA,IACI0gB,EAAM1gB,EAAM2S,aACZ8mB,EAAOt9B,EAAMR,KACb+9B,EAAa15B,EAAM0G,MACnBizB,EAAyD,GACzDC,EAAc,KACdC,EAAe,KACVxvC,EAPG2V,EAAMwS,eAOEnoB,EAAIq2B,EAAKr2B,IAAK,CAC9B,IAAI+1B,EAAeqZ,EAAKpvC,GACpByvC,EAAkB1Z,EAAanmB,OACnC0/B,EAAgBntC,KAAoB,OAAfktC,EAAsBK,GAAsBD,EAAiBJ,GAAc,MAChGE,EAAc7B,GAAwB+B,EAAiBzvC,EAAGuvC,GAC1DC,EAAe9B,GAAwB3X,EAAalmB,QAAS7P,EAAGwvC,GAEhD,OAAhBD,KACIA,EAAYjwC,eAAe,UAAYiwC,EAAYjwC,eAAe,gBAClEqW,EAAMxK,OAAS,IAEfokC,EAAYjwC,eAAe,WAC3BqW,EAAMxK,OAAS,KAGvBwK,EAAMgxB,cAAgB2I,EACtB35B,EAAM/F,OAAS2/B,EACf55B,EAAM9F,QAAU2/B,EAmNZL,CAAgCr9B,EAAO6D,GAI3C,OAFIi5B,GA+HR,SAASe,EAAwBh6B,EAAOwf,EAAWyZ,GAC/C,GAAIzZ,EAMA,IALA,IAAIuR,EAAa/wB,EAAM+wB,WACiB,GAI/B1mC,EAAI,EAAGA,EAAIm1B,EAAUh1B,OAAQH,GAAK,EAAG,CAC1C,IAAIoE,EAAQwqC,EAAWzZ,EAAUn1B,EAAI,IACrC,GAAa,MAAToE,EACA,MAAM,IAAIqB,MAAM,mBAAqB0vB,EAAUn1B,EAAI,GAAK,gBAC5D0mC,EAAWvkC,KAAKgzB,EAAUn1B,GAAIoE,IAzIlCurC,CAAwBh6B,EAAOwf,EAAWyZ,GACvCE,EAyDX,SAASnC,GAAiCjmC,EAAKgmC,EAASnV,EAAW5hB,EAAOyP,GACtE,IAAIwqB,EAAwBlD,EAAQvsC,OACpC6W,GAAuBtQ,GAEvBA,EAAIgJ,aAAa,EAAgB6nB,EADd5hB,EAAMvR,MAAQ6Q,IAEjC+B,GAAuB,MAKnB44B,IAA0BlD,EAAQvsC,QAAUilB,GAC5CsnB,EAAQvqC,KAAKuE,EAAIgJ,cASzB,SAASs/B,GAAgCl9B,EAAO6D,EAAOk6B,GAEnD,IAAIl4B,IAAiBhC,EAAMvR,MAAQ6Q,IAE/Bw2B,EAAgB35B,EAAMR,KAAKnR,QADkB,MAAxBwV,EAAMoS,kBAE9BjW,EAAMm0B,sBAAwBn0B,EAAMm0B,oBAAsB,KAAK9jC,KAAKwV,EAAc8zB,EAAeoE,GAqCtG,SAASlB,GAAoB78B,EAAOgU,GAEhCA,EAAU3a,OAAS,GAClB2G,EAAMyjB,aAAezjB,EAAMyjB,WAAiD,KAAKpzB,KAAK2jB,EAAU1hB,OAsBrG,SAAS8qC,GAAoB9qC,EAAOsC,EAAKkoC,GACrC,GAAIA,EAAY,CACZ,GAAIloC,EAAIoJ,SACJ,IAAK,IAAI9P,EAAI,EAAGA,EAAI0G,EAAIoJ,SAAS3P,OAAQH,IACrC4uC,EAAWloC,EAAIoJ,SAAS9P,IAAMoE,EAGlCsC,EAAI6I,WACJq/B,EAAW,IAAMxqC,IAQ7B,SAAS2qC,GAAcp5B,EAAOvR,EAAO0rC,GAEjCn6B,EAAMxK,OAAS,EAEfwK,EAAMwS,eAAiB/jB,EACvBuR,EAAM2S,aAAelkB,EAAQ0rC,EAC7Bn6B,EAAMoS,gBAAkB3jB,EAE5B,SAAS6qC,GAAqBn9B,EAAO26B,EAAU/lC,GAC3CoL,EAAMR,KAAKnP,KAAKuE,GAChB,IAAIqpC,EAAmBrpC,EAAIxI,UAAYwI,EAAIxI,QAAU2V,GAAcnN,EAAIJ,OACnE0pC,EAAsB,IAAI55B,GAAoB25B,EAAkBj6B,GAAepP,GAAM,MACzFoL,EAAMyT,UAAUpjB,KAAK6tC,GACrBvD,EAAStqC,KAAK6tC,GAElB,SAAS1D,GAAkBh1B,EAAOwO,EAAWpf,GACzC,IAAI0V,EAASiH,GAAiByC,EAAWxO,GACrCxF,EAAQi7B,GAA0BrmC,GAGlCkjC,EAAkBtyB,EAAM7C,IACxBw7B,EAAgBC,GAAc54B,EAAOmyB,GAAYnyB,EAAOxF,EAAO,KAAMpL,EAAIoK,OAAS,GAAiB,GAAsBsL,EAAQ0J,EAAW8jB,EAAiBA,EAAgB5tB,eAAeI,EAAQ1V,KAGxM4Q,EAAMwO,EAAU1hB,OAAS6rC,EAE7B,SAASE,GAAyB/rC,EAAOzB,EAAMb,EAAOwV,EAAOiE,EAAWguB,GAGpE,IAAIvrB,EAAUoF,GAAiBhf,EAAOkT,GAClCwE,EAAWxE,EAAM5C,IACrB,GAAa,MAAT5S,EAEA+Z,GAAqBC,GAAYA,EAASsR,gBAAgBpP,EAASrb,EAAM4mC,GACrEvrB,EAAQoP,gBAAgBzqB,OAE3B,CAED,IAAIgT,EAAQ4N,GAASnf,EAAOkT,GACxB84B,EAAwB,MAAb70B,EAAoBmC,GAAgB5b,GAASyZ,EAAUzZ,EAAO6T,EAAMkb,SAAW,GAAIluB,GAC9FkZ,GAAqBC,GACrBA,EAASY,aAAasB,EAASrb,EAAMytC,EAAU7G,GAG/CA,EAAYvrB,EAAQrB,eAAe4sB,EAAW5mC,EAAMytC,GAChDpyB,EAAQtB,aAAa/Z,EAAMytC,IAa3C,SAAS7D,GAAmBj1B,EAAOwe,EAAgB3O,EAAUzgB,EAAKiP,EAAO06B,GACrE,IAAI1J,EAAgB0J,EAAiBva,GACrC,GAAsB,OAAlB6Q,EAEA,IADA,IAAI/0B,EAAWlL,EAAIkL,SACV5R,EAAI,EAAGA,EAAI2mC,EAAcxmC,QAAS,CACvC,IAAIoT,EAAaozB,EAAc3mC,KAC3BswC,EAAc3J,EAAc3mC,KAC5B8B,EAAQ6kC,EAAc3mC,KACT,OAAb4R,EACAlL,EAAIkL,SAASuV,EAAUrlB,EAAOyR,EAAY+8B,GAG1CnpB,EAASmpB,GAAexuC,GAuBxC,SAAS4tC,GAAsB9/B,EAAQyM,GAGnC,IAFA,IAAIk0B,EAAgB,KAChBvwC,EAAI,EACDA,EAAIqc,EAAMlc,QAAQ,CACrB,IAAIqc,EAAWH,EAAMrc,GACrB,GAAiB,IAAbwc,EAKC,GAAiB,IAAbA,EAAJ,CAML,GAAwB,iBAAbA,EACP,MACA5M,EAAOtQ,eAAekd,KACA,OAAlB+zB,IACAA,EAAgB,IACpBA,EAAcpuC,KAAKqa,EAAU5M,EAAO4M,GAAWH,EAAMrc,EAAI,KAE7DA,GAAK,OAXDA,GAAK,OALLA,GAAK,EAkBb,OAAOuwC,EAkBX,SAASC,GAAiBC,EAAYz1B,EAAaoB,EAAQzG,GAcvD,OAViB,IAAmCvW,MAAOqxC,GAC3D,GACC,EACDz1B,EACA,KACA,KACArF,EACAyG,EACA,MAuDJ,SAASuvB,GAAiBnB,EAAWkG,GAEjC,IAAIT,EAAgBvsB,GAAyBgtB,EAAkBlG,GAE/D,GAr4MJ,SAASmG,EAA6BntB,GAClC,OAA8C,MAAxB,IAAdA,EAAKvP,KAo4MT08B,CAA6BV,IACN,GAAvBA,EAAch8B,IAAkD,CAChE,IAAInC,EAAQm+B,EAAcj8B,IAC1B02B,GAAYuF,EAAen+B,EAAOA,EAAMvC,SAAU0gC,EAAc17B,MAGxE,SAASk2B,GAAgBD,EAAWkG,GAEhC,IAAIT,EAAgBvsB,GAAyBgtB,EAAkBlG,IA8BnE,SAASoG,EAAsBX,GAE3B,IADA,IAAIY,EAAiBZ,EAAcj8B,IAC1BhU,EAAIiwC,EAAc9vC,OAAQH,EAAI6wC,EAAetrB,UAAUplB,OAAQH,IACpEiwC,EAAc9tC,KAAK0uC,EAAetrB,UAAUvlB,IAhChD4wC,CAAsBX,GACtB9F,GAAW8F,EAAeA,EAAcj8B,IAAQi8B,EAAc17B,KA6ClE,SAAS27B,GAAc54B,EAAOw5B,GAe1B,OAPIx5B,EAAM1C,IACN0C,EAAMzC,IAAYV,IAAQ28B,EAG1Bx5B,EAAM1C,IAAck8B,EAExBx5B,EAAMzC,IAAci8B,EACbA,EAgBX,SAASC,GAAcz5B,GACnB,KAAOA,GAAO,CACVA,EAAMrD,KAAU,GAChB,IAAI+d,EAAW7N,GAAe7M,GAE9B,GAAIvB,GAAWuB,KAAW0a,EACtB,OAAO1a,EAGXA,EAAQ0a,EAEZ,OAAO,KAoCX,SAASgf,GAAgBC,GACrB,IAAK,IAAIjxC,EAAI,EAAGA,EAAIixC,EAAY1b,WAAWp1B,OAAQH,IAAK,CACpD,IAAIkxC,EAAgBD,EAAY1b,WAAWv1B,GACvCsX,EAAQyM,GAAiBmtB,GAE7BtF,GAA0Bt0B,EADdA,EAAMtD,IACqBzE,SAAU2hC,IAGzD,SAASC,GAAsB3tB,EAAM/W,GACjC,IAAIm9B,EAAkBpmB,EAAK/O,IACvBm1B,EAAgBmC,OAChBnC,EAAgBmC,QACpB,IACI,IAAIj6B,EAAQ0R,EAAKxP,IACjB02B,GAAYlnB,EAAM1R,EAAOA,EAAMvC,SAAU9C,GAE7C,MAAOrK,GAEH,MADAwnB,GAAYpG,EAAMphB,GACZA,EAEV,QACQwnC,EAAgBvT,KAChBuT,EAAgBvT,OAQ5B,SAAS+a,GAAwB95B,GAC7B05B,GAAgB15B,EAAM/C,KA6B1B,SAAS61B,GAAmBj/B,EAAOkmC,EAAajd,GAE5Cxa,GAAqB,GACrBy3B,EAAYlmC,EAAOipB,GAgDvB,IAAIkd,GAAgBrI,GACpB,SAASsI,GAAW/tB,GAEhB,OAAOA,EAAKlP,MAAakP,EAAKlP,IAAwC,IAE1E,SAASk9B,GAAgBhuB,GACrB,OAAOA,EAAKxP,IAAOoyB,UAAY5iB,EAAKxP,IAAOoyB,QAAuC,IAMtF,SAASqL,GAAsB97B,EAAO2B,GAElC,OADqBA,EAAM3B,EAAMvR,OACXsQ,IAG1B,SAASkV,GAAYtS,EAAOlV,GACxB,IAAIyI,EAAWyM,EAAM9C,IACjBk9B,EAAe7mC,EAAWA,EAASS,IAAIoe,GAAc,MAAQ,KACjEgoB,GAAgBA,EAAa9nB,YAAYxnB,GAU7C,SAAS+rC,GAAqB72B,EAAO1H,EAAQ9N,GAEzC,IADA,IAAIgQ,EAAQwF,EAAMtD,IACThU,EAAI,EAAGA,EAAI4P,EAAOzP,QAAS,CAChC,IAAIiE,EAAQwL,EAAO5P,KACfuT,EAAa3D,EAAO5P,KACpBswC,EAAc1gC,EAAO5P,KACrBmnB,EAAW7P,EAAMlT,GAEjBsC,EAAMoL,EAAMR,KAAKlN,GACNsC,EAAIkL,SAEflL,EAAIkL,SAASuV,EAAUrlB,EAAOyR,EAAY+8B,GAG1CnpB,EAASmpB,GAAexuC,GAOpC,SAAS6vC,GAAoBr6B,EAAOlT,EAAOtC,GAGvC,IAAIkc,EAAUoF,GAAiBhf,EAAOkT,GAGlCwE,EAAWxE,EAAM5C,IACrBmH,GAAqBC,GAAYA,EAASmE,SAASjC,EAASlc,GAASkc,EAAQqnB,YAAcvjC,EAW/F,SAAS8vC,GAAqB91B,EAAUM,EAAQzG,EAAOk8B,GAC7B,OAAlBl8B,EAAM6Q,UACFqrB,EACA9S,GAAiBjjB,EAAUM,EAAQzG,EAAM6Q,SAAS,GAIlDiX,GAA0B3hB,EAAUM,EADtB8E,GAAuBvL,EAAM6Q,UACU,EAAM,OAG9C,OAAjB7Q,EAAMjE,SACFmgC,EACA9S,GAAiBjjB,EAAUM,EAAQzG,EAAMjE,QAAQ,GAIjD+rB,GAA0B3hB,EAAUM,EADvB8E,GAAuBvL,EAAMjE,SACU,EAAO;;;;;;;OAavE,SAASogC,GAAcn8B,EAAOo8B,GAE1B,IAAIC,EAAYD,EAAa79B,IAC7B,OAAqB,IAAjByB,EAAMvR,MAGCqR,GAAau8B,GAAaA,EAAY,KAKtCA,EAOf,SAASC,GAAyBC,EAAW1uB,GACzC,IAAIwuB,EAAYF,GAAcI,EAAW1uB,GACzC,OAAOwuB,EAAYG,GAAiB3uB,EAAK9O,IAAWs9B,EAAU38B,KAAW,KAM7E,SAAS+8B,GAA0BC,EAAQv2B,EAAUpB,EAAQ43B,EAAeC,GAKxE,GAAqB,MAAjBD,EAAuB,CACvB,IAAIE,OAAa,EACbnG,GAAc,EAId52B,GAAa68B,GACbE,EAAaF,EAER98B,GAAQ88B,KACbjG,GAAc,EAEdiG,EAAgBA,EAAcv+B,KAElC,IAAI0+B,EAAQtvB,GAAYmvB,GAET,IAAXD,GAAwC,OAAX33B,EACX,MAAd63B,EACAG,GAAkB52B,EAAUpB,EAAQ+3B,GAGpCE,GAAmB72B,EAAUpB,EAAQ+3B,EAAOF,GAAc,MAG9C,IAAXF,GAAwC,OAAX33B,EAClCi4B,GAAmB72B,EAAUpB,EAAQ+3B,EAAOF,GAAc,MAE1C,IAAXF,EACLO,GAAiB92B,EAAU22B,EAAOpG,GAElB,IAAXgG,GAELv2B,EAAS+2B,YAAYJ,GAEP,MAAdD,GAyqBZ,SAASM,EAAeh3B,EAAUu2B,EAAQG,EAAYO,EAAcR,GAEhE,IAAIS,EAASR,EAAWn9B,IAQpB29B,IAPS7vB,GAAYqvB,IAYrBJ,GAA0BC,EAAQv2B,EAAUi3B,EAAcC,EAAQT,GAEtE,IAAK,IAAIvyC,EAAIuV,GAAyBvV,EAAIwyC,EAAWryC,OAAQH,IAEzDizC,GAAUn3B,EAAUu2B,EADRG,EAAWxyC,GACY+yC,EAAcC;;;;;;;OA3rB7CF,CAAeh3B,EAAUu2B,EAAQG,EAAY93B,EAAQ63B,IAIjE,SAASW,GAAepxC,EAAOga,GAG3B,OAAOD,GAAqBC,GAAYA,EAASq3B,WAAWrxC,GACxDga,EAASo3B,eAAepxC,GAEhC,SAASsxC,GAA2B97B,EAAO+7B,EAAYd,GACnD,IAAIQ,EAAed,GAAyB36B,EAAMtD,IAAOkd,KAAM5Z,GAE3Dy7B,GAGAE,GAFe37B,EAAM5C,IACR2+B,EAAa,EAAiB,EACf/7B,EAAOy7B,EAAcR,GAoEzD,SAASe,GAAWh8B,EAAOk7B,EAAYpuC,GAGnC,IAAImvC,EAAmBh+B,GAA0BnR,EAC7CovC,EAAkBhB,EAAWryC,OAC7BiE,EAAQ,IAERouC,EAAWe,EAAmB,GAAGp/B,IAAQmD,GAEzClT,EAAQovC,EAAkBj+B,IAC1B+B,EAAMnD,IAAQq+B,EAAWe,GACzBtlC,GAAWukC,EAAYj9B,GAA0BnR,EAAOkT,KAGxDk7B,EAAWrwC,KAAKmV,GAChBA,EAAMnD,IAAQ,MAElBmD,EAAMpD,IAAUs+B,EAEhB,IAAIiB,EAAwBn8B,EAAMvC,IACJ,OAA1B0+B,GAAkCjB,IAAeiB,GAezD,SAASC,EAAeC,EAAsBr8B,GAG1C,IAAI0zB,EAAa2I,EAAqBv+B,IACnB,OAAf41B,EACA2I,EAAqBv+B,IAAe,CAACkC,GAGrC0zB,EAAW7oC,KAAKmV,GAtBhBo8B,CAAeD,EAAuBn8B,GAG1C,IAAIs8B,EAAWt8B,EAAMlD,IACJ,OAAbw/B,GACAA,EAASN,WAAWh8B,EAAMtD,KAG9BsD,EAAMrD,KAAU,IAiBpB,SAAS4/B,GAAgBF,EAAsBr8B,GAG3C,IAAI0zB,EAAa2I,EAAqBv+B,IAClC0+B,EAAoB9I,EAAWtjC,QAAQ4P,GAC3C0zB,EAAW98B,OAAO4lC,EAAmB,GAYzC,SAASC,GAAWvB,EAAYwB,GAC5B,KAAIxB,EAAWryC,QAAUoV,IAAzB,CAEA,IAAIg+B,EAAmBh+B,GAA0By+B,EAC7CC,EAAezB,EAAWe,GAC9B,GAAIU,EAAc,CACd,IAAIR,EAAwBQ,EAAal/B,IACX,OAA1B0+B,GAAkCA,IAA0BjB,GAC5DqB,GAAgBJ,EAAuBQ,GAEvCD,EAAc,IACdxB,EAAWe,EAAmB,GAAGp/B,IAAQ8/B,EAAa9/B,KAE1D,IAAI+/B,EAAe/lC,GAAgBqkC,EAAYj9B,GAA0By+B,GACzEZ,GAA2Ba,GAAc,EAAO,MAEhD,IAAIL,EAAWM,EAAa9/B,IACX,OAAbw/B,GACAA,EAASG,WAAWG,EAAalgC,KAErCigC,EAAa//B,IAAU,KACvB+/B,EAAa9/B,IAAQ,KAErB8/B,EAAahgC,MAAU,IAE3B,OAAOggC,GAQX,SAASE,GAAW3B,EAAYwB,GAC5B,IAAII,EAAeL,GAAWvB,EAAYwB,GAC1CI,GAAgBC,GAAaD,GAQjC,SAASC,GAAa/8B,GAClB,KAAqB,IAAfA,EAAMrD,KAA+B,CACvC,IAAI6H,EAAWxE,EAAM5C,IACjBmH,GAAqBC,IAAaA,EAAS+2B,aAC3CI,GAAUn3B,EAAU,EAAiBxE,EAAO,KAAM,MA1J9D,SAASg9B,EAAgBC,GAErB,IAAIzD,EAAoByD,EAAS3/B,IACjC,IAAKk8B,EACD,OAAO0D,GAAYD,GAEvB,KAAOzD,GAAmB,CACtB,IAAIjvC,EAAO,KACX,GAAI2T,GAAQs7B,GAERjvC,EAAOivC,EAAkBl8B,QAExB,CAGD,IAAI6/B,EAAY3D,EAAkBv7B,IAC9Bk/B,IACA5yC,EAAO4yC,GAEf,IAAK5yC,EAAM,CAGP,KAAOivC,IAAsBA,EAAkB38B,KAAS28B,IAAsByD,GAC1EC,GAAY1D,GACZA,EAAoB4D,GAAe5D,EAAmByD,GAE1DC,GAAY1D,GAAqByD,GACjC1yC,EAAOivC,GAAqBA,EAAkB38B,IAElD28B,EAAoBjvC,GA+HpByyC,CAAgBh9B,IAexB,SAASo9B,GAAe5D,EAAmByD,GACvC,IAAI5+B,EACJ,OAAIH,GAAQs7B,KAAuBn7B,EAAQm7B,EAAkBz8B,MAC1C,IAAfsB,EAAMrP,KAGCwrC,GAAcn8B,EAAOm7B,GAIrBA,EAAkB58B,MAAYqgC,EAAW,KAAOzD,EAAkB58B,IAUjF,SAASsgC,GAAYhxB,GACjB,GAAIhO,GAAQgO,MAAyB,IAAdA,EAAKvP,KAA+B,CAGvDuP,EAAKvP,MAAU,IAMfuP,EAAKvP,KAAU,IAgEvB,SAAS0gC,EAAkBnxB,GACvB,IACIkT,EADA5kB,EAAQ0R,EAAKxP,IAEjB,GAAa,MAATlC,GAAwD,OAAtC4kB,EAAe5kB,EAAM4kB,cACvC,IAAK,IAAI12B,EAAI,EAAGA,EAAI02B,EAAav2B,OAAQH,GAAK,EAAG,CAC7C,IAAIyM,EAAU+W,EAAKkT,EAAa12B,IAE1ByM,aAAmB2J,IACrBsgB,EAAa12B,EAAI,GAAGI,KAAKqM,IAvEjCkoC,CAAkBnxB,GAwB1B,SAASoxB,EAAgBt9B,GACrB,IAAIu9B,EAAWv9B,EAAMtD,IAAOoyB,QAC5B,GAAiB,OAAbyO,EAAmB,CAEnB,IADA,IAAIC,EAAWx9B,EAAMhD,IACZtU,EAAI,EAAGA,EAAI60C,EAAS10C,OAAS,EAAGH,GAAK,EAC1C,GAA2B,iBAAhB60C,EAAS70C,GAAiB,CAEjC,IAAI+0C,EAAoBF,EAAS70C,EAAI,GACjCQ,EAAsC,mBAAtBu0C,EAChBA,EAAkBz9B,GAClB6L,GAAY7L,EAAMy9B,IAElBC,EAAqBH,EAAS70C,EAAI,GACJ,kBAAvBg1C,EAEPx0C,EAAOy0C,oBAAoBJ,EAAS70C,GAJzB80C,EAASD,EAAS70C,EAAI,IAIiBg1C,GAG9CA,GAAsB,EAEtBF,EAASE,KAITF,GAAUE,GAAoBE,cAGtCl1C,GAAK,OAKL60C,EAAS70C,GAAGI,KADE00C,EAASD,EAAS70C,EAAI,KAI5CsX,EAAMhD,IAAW,MA1DjBsgC,CAAgBpxB,GAChB,IAAIsC,EAAYtC,EAAKnP,IAEjByR,GAAgC,IAAnBA,EAAUxf,MAA4BuV,GAAqB2H,EAAK9O,MAE7E8O,EAAK9O,IAAUygC,UAEnB,IAAIxB,EAAuBnwB,EAAKzO,IAEhC,GAA6B,OAAzB4+B,GAAiCl+B,GAAa+N,EAAKtP,KAAU,CAEzDy/B,IAAyBnwB,EAAKtP,KAC9B2/B,GAAgBF,EAAsBnwB,GAG1C,IAAIowB,EAAWpwB,EAAKpP,IACH,OAAbw/B,GACAA,EAASG,WAAWvwB,EAAKxP,OAsEzC,SAASohC,GAAgBz/B,EAAOqF,GAE5B,GAAIjF,GAAWiF,GACX,OAAOm3B,GAAiBn3B,EAAYtG,IAAW2O,GAAiB1N,EAAOqF,IAK3E,IADA,IAAIq6B,EAAc1/B,EAAM+E,OACF,MAAf26B,IAA6C,IAArBA,EAAY/uC,MAClB,IAArB+uC,EAAY/uC,OAEZ+uC,GADA1/B,EAAQ0/B,GACY36B,OAIxB,GAAmB,MAAf26B,EAAqB,CACrB,IAAIvvB,EAAY9K,EAAY3G,IAC5B,OAAuB,IAAnByR,EAAUxf,KAQH2rC,GAAyBnsB,EAAW9K,GAMpCA,EAAYjH,IAOvB,GAHgB4B,GAAwB,IAAfA,EAAMrP,MAGA,EAAdqP,EAAMxK,MACnB,OAAOkY,GAAiB1N,EAAOqF,GAAa4V,WAGhD,GAAwB,EAApBykB,EAAYlqC,MAAiC,CAC7C,IAAIkb,EAAQrL,EAAYhH,IAAO1C,KAE3BC,EAAgB8U,EADNA,EAAMgvB,EAAYjxC,OACE+jB,gBAAgB5W,cAOlD,GAAIA,IAAkBpT,EAAQ4O,kBAAkBuoC,WAC5C/jC,IAAkBpT,EAAQ4O,kBAAkBwoC,OAC5C,OAAO,KAGf,OAAOlyB,GAAiBgyB,EAAar6B,GAQ7C,SAAS23B,GAAmB72B,EAAUpB,EAAQD,EAAO83B,GAE7C12B,GAAqBC,GACrBA,EAAS05B,aAAa96B,EAAQD,EAAO83B,GAGrC73B,EAAO86B,aAAa/6B,EAAO83B,GAAY,GAG/C,SAASG,GAAkB52B,EAAUpB,EAAQD,GAGrCoB,GAAqBC,GACrBA,EAAS4P,YAAYhR,EAAQD,GAG7BC,EAAOgR,YAAYjR,GAG3B,SAASg7B,GAA2B35B,EAAUpB,EAAQD,EAAO83B,GACtC,OAAfA,EACAI,GAAmB72B,EAAUpB,EAAQD,EAAO83B,GAG5CG,GAAkB52B,EAAUpB,EAAQD,GAe5C,SAAS03B,GAAiBr2B,EAAUoV,GAChC,OAAQrV,GAAqBC,GAAYA,EAAS8U,WAAWM,GAAQA,EAAKN,WAc9E,SAAS8kB,GAAoBL,EAAa/9B,GACtC,GAAyB,IAArB+9B,EAAY/uC,KAAuB,CACnC,IAAIksC,EAAaV,GAAcuD,EAAa/9B,GAC5C,OAAmB,OAAfk7B,EACO,KAEJmD,GADKnD,EAAW9qC,QAAQ4P,EAAO/B,IAA2BA,GAC9Bi9B,GAElC,OAAyB,IAArB6C,EAAY/uC,MACI,IAArB+uC,EAAY/uC,KACL+c,GAAiBgyB,EAAa/9B,GAElC,KAYX,SAASoU,GAAYkqB,EAASC,EAAY76B,GACtC,IAAI+3B,EAAeqC,GAAgBS,EAAY76B,GAC/C,GAAoB,MAAhB+3B,EAAsB,CACtB,IAAIj3B,EAAWd,EAAYtG,IAEvBohC,EAAaJ,GADCG,EAAWn7B,QAAUM,EAAY3G,IACD2G,GAClD,GAAI5b,MAAM+H,QAAQyuC,GACd,IAAK,IAAI51C,EAAI,EAAGA,EAAI41C,EAAQz1C,OAAQH,IAChCy1C,GAA2B35B,EAAUi3B,EAAc6C,EAAQ51C,GAAI81C,QAInEL,GAA2B35B,EAAUi3B,EAAc6C,EAASE,IA2CxE,SAASH,GAAqBI,EAAsBvD,GAChD,IAAIwD,EAAgBzgC,GAA0BwgC,EAAuB,EACrE,GAAIC,EAAgBxD,EAAWryC,OAAQ,CACnC,IAAImX,EAAQk7B,EAAWwD,GACnBC,EAAmB3+B,EAAMtD,IAAO4Y,WACpC,GAAyB,OAArBqpB,EACA,OAxCZ,SAASC,EAAmB5+B,EAAO3B,GAC/B,GAAc,OAAVA,EAAgB,CAEhB,IAAIwgC,EAAYxgC,EAAMrP,KACtB,GAAkB,IAAd6vC,EACA,OAAO9yB,GAAiB1N,EAAO2B,GAE9B,GAAkB,IAAd6+B,EACL,OAAOR,IAAsB,EAAGr+B,EAAM3B,EAAMvR,QAE3C,GAAkB,IAAd+xC,GAAwD,IAAdA,EAAoC,CACnF,IAAIC,EAAsBzgC,EAAM8E,MAChC,OAA4B,OAAxB27B,EACOF,EAAmB5+B,EAAO8+B,GAG1B/yB,GAAiB1N,EAAO2B,GAInC,IAAI24B,EAAgB7rB,GAAkB9M,GAClC++B,EAAgBpG,EAAc57B,IAC9BoJ,EAAa0G,GAAe8rB,GAC5BqG,EAAsBD,EAAcvP,WAAWnxB,EAAMmxB,YACzD,OAA2B,MAAvBwP,EACOJ,EAAmBz4B,EAAY64B,GAG/BJ,EAAmB5+B,EAAO3B,EAAM9T,MAInD,OAAO,KAQQq0C,CAAmB5+B,EAAO2+B,GAGzC,OAAOzD,EAAWn9B,IAWtB,SAASu9B,GAAiB92B,EAAU22B,EAAO8D,GACvC,IAAIC,EAAerE,GAAiBr2B,EAAU22B,GAC1C+D,GA/HR,SAASC,EAAkB36B,EAAUpB,EAAQD,EAAO87B,GAC5C16B,GAAqBC,GACrBA,EAAS6Q,YAAYjS,EAAQD,EAAO87B,GAGpC77B,EAAOiS,YAAYlS,GA2HnBg8B,CAAkB36B,EAAU06B,EAAc/D,EAAO8D,GAOzD,SAASG,GAAW56B,EAAUu2B,EAAQ18B,EAAO2B,EAAOy7B,EAAcR,EAAYoE,GAC1E,KAAgB,MAAThhC,GAAe,CAGlB,IAAIihC,EAAet/B,EAAM3B,EAAMvR,OAC3B+xC,EAAYxgC,EAAMrP,KAClBqwC,GACe,IAAXtE,IACAuE,GAAgB5hB,GAAgB7R,GAAYyzB,GAAet/B,GAC3D3B,EAAMxK,OAAS,GAGqB,KAAzB,GAAdwK,EAAMxK,SACW,IAAdgrC,GAAwD,IAAdA,GAC1CO,GAAW56B,EAAUu2B,EAAQ18B,EAAM8E,MAAOnD,EAAOy7B,EAAcR,GAAY,GAC3EH,GAA0BC,EAAQv2B,EAAUi3B,EAAc6D,EAAcrE,IAErD,IAAd4D,EACLU,GAAyB/6B,EAAUu2B,EAAQ/6B,EAAO3B,EAAOo9B,EAAcR,GAIvEH,GAA0BC,EAAQv2B,EAAUi3B,EAAc6D,EAAcrE,IAGhF58B,EAAQghC,EAAehhC,EAAMkxB,eAAiBlxB,EAAM9T,MAyB5D,SAASoxC,GAAUn3B,EAAUu2B,EAAQ/6B,EAAOy7B,EAAcR,GAItDmE,GAAW56B,EAAUu2B,EAHT/6B,EAAMtD,IAEQkd,KAAKzW,MACanD,EAAOy7B,EAAcR,GAAY,GAWjF,SAASuE,GAAgBx/B,EAAOy/B,GAK5BF,GAJev/B,EAAM5C,IAIc,EAAgB4C,EAAOy/B,EAHvC3B,GAAgB2B,EAAiBz/B,GAEnCo+B,GADCqB,EAAgBr8B,QAAUpD,EAAMjD,IACAiD,IAiBtD,SAASu/B,GAAyB/6B,EAAUu2B,EAAQ/6B,EAAOy/B,EAAiBhE,EAAcR,GACtF,IAAIyE,EAAiB5yB,GAAkB9M,GAInC2/B,EAHgBD,EAAe3iC,IAGOyyB,WAAWiQ,EAAgBjQ,YACrE,GAAI1nC,MAAM+H,QAAQ8vC,GAMd,IAAK,IAAIj3C,EAAI,EAAGA,EAAIi3C,EAAsB92C,OAAQH,IAE9CoyC,GAA0BC,EAAQv2B,EAAUi3B,EADhCkE,EAAsBj3C,GAC+BuyC,QAMrEmE,GAAW56B,EAAUu2B,EAFD4E,EACUD,EAAe9iC,IACwB6+B,EAAcR,GAAY;;;;;;;;AAqFvG,IA0UI2E,GAsBAC,GAwDAC,GAxZAC,GAAyB,WACzB,SAASA,EAYTvuB,EAOAwuB,GACIz4C,KAAKiqB,OAASA,EACdjqB,KAAKy4C,oBAAsBA,EAC3Bz4C,KAAK04C,QAAU,KACf14C,KAAK24C,kBAAoB,KAIzB34C,KAAK44C,WAAa,KAsOtB,OApOAx4C,OAAO+B,eAAeq2C,EAAQ33C,UAAW,YAAa,CAClD4L,IAAK,WACD,OAAyB,MAArBzM,KAAKiqB,OAAO/U,IAqP5B,SAAS2jC,EAAmBpgC,EAAO3B,EAAO4yB,EAAQoO,GAE9C,SADqB,IAAjBA,IAA2BA,GAAe,GAC7B,OAAVhhC,GAAgB,CAEnB,IAAIgiC,EAAQrgC,EAAM3B,EAAMvR,OAOxB,GANc,OAAVuzC,GACApP,EAAOpmC,KAAKghB,GAAYw0B,IAKxBliC,GAAakiC,GACb,IAAK,IAAI33C,EAAIuV,GAAyBvV,EAAI23C,EAAMx3C,OAAQH,IAAK,CACzD,IAAI43C,EAAoBD,EAAM33C,GAC1B63C,EAAuBD,EAAkB5jC,IAAO4Y,WACvB,OAAzBirB,GACAH,EAAmBE,EAAmBC,EAAsBtP,GAIxE,IAAI4N,EAAYxgC,EAAMrP,KACtB,GAAkB,IAAd6vC,GAAwD,IAAdA,EAC1CuB,EAAmBpgC,EAAO3B,EAAM8E,MAAO8tB,QAEtC,GAAkB,IAAd4N,EAAkC,CACvC,IAAIlG,EAAgB7rB,GAAkB9M,GAClC++B,EAAgBpG,EAAc57B,IAC9BoJ,EAAa0G,GAAe8rB,GAC5B6H,EAAqBzB,EAAcvP,WAAWnxB,EAAMmxB,YAC7B,OAAvBgR,GAA8C,OAAfr6B,GAC/Bi6B,EAAmBj6B,EAAYq6B,EAAoBvP,GAAQ,GAGnE5yB,EAAQghC,EAAehhC,EAAMkxB,eAAiBlxB,EAAM9T,KAExD,OAAO0mC;;;;;;;OAtRYmP,CAAmB74C,KAAKiqB,OADnBjqB,KAAKiqB,OAAOzU,IACqBoG,MAAO,IAEjD,IAEXinB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeq2C,EAAQ33C,UAAW,UAAW,CAChD4L,IAAK,WAAc,OAAOzM,KAAKiqB,OAAOvU,KACtCmtB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeq2C,EAAQ33C,UAAW,YAAa,CAClD4L,IAAK,WACD,OAAsD,MAAzB,IAArBzM,KAAKiqB,OAAO7U,MAExBytB,YAAY,EACZC,cAAc,IAElB0V,EAAQ33C,UAAUy1C,QAAU,WACxB,GAAIt2C,KAAK04C,QACL14C,KAAK04C,QAAQxD,WAAWl1C,WAEvB,GAAIA,KAAK24C,kBAAmB,CAC7B,IAAIpzC,EAAQvF,KAAK24C,kBAAkB9vC,QAAQ7I,MACvCuF,GAAS,GACTvF,KAAK24C,kBAAkBO,OAAO3zC,GAElCvF,KAAK24C,kBAAoB,KAE7BnD,GAAax1C,KAAKiqB,SAEtBuuB,EAAQ33C,UAAUkR,UAAY,SAAUonC,IA93D5C,SAASC,EAAez0B,EAAM00B,GAC1B3G,GAAW/tB,GAAMrhB,KAAK+1C,GAClB10B,EAAKxP,IAAOoR,iBACZosB,GAAgBhuB,GAAMrhB,KAAKqhB,EAAKlP,IAASnU,OAAS,EAAG,MA23DL83C,CAAep5C,KAAKiqB,OAAQkvB,IAmChFX,EAAQ33C,UAAUy4C,aAAe,WAAcpH,GAAclyC,KAAKy4C,qBAAuBz4C,KAAKiqB,SAsD9FuuB,EAAQ33C,UAAUq4C,OAAS,WAAcl5C,KAAKiqB,OAAO7U,MAAU,KAyD/DojC,EAAQ33C,UAAU04C,SAAW,WAAcv5C,KAAKiqB,OAAO7U,KAAU,KAsBjEojC,EAAQ33C,UAAU24C,cAAgB,WAAclH,GAAsBtyC,KAAKiqB,OAAQjqB,KAAK4N,UAOxF4qC,EAAQ33C,UAAU44C,eAAiB,YAhtCvC,SAASC,EAAuB/0B,EAAM/W,GAClCqM,IAAsB,GACtB,IACIq4B,GAAsB3tB,EAAM/W,GAEhC,QACIqM,IAAsB,IA0sCuBy/B,CAAuB15C,KAAKiqB,OAAQjqB,KAAK4N,UAC1F4qC,EAAQ33C,UAAU84C,yBAA2B,SAAUC,GACnD,GAAI55C,KAAK04C,QACL,MAAM,IAAI9xC,MAAM,iEAEpB5G,KAAK24C,kBAAoBiB,GAE7BpB,EAAQ33C,UAAUg5C,iBAAmB,WACjC75C,KAAK04C,QAAU,KA98BvB,SAASoB,EAAiBrhC,GACtB27B,GAAU37B,EAAM5C,IAAW,EAAgB4C,EAAO,KAAM,MA88BpDqhC,CAAiB95C,KAAKiqB,SAE1BuuB,EAAQ33C,UAAUk5C,eAAiB,SAAUC,GACzC,GAAIh6C,KAAK24C,kBACL,MAAM,IAAI/xC,MAAM,qDAEpB5G,KAAK04C,QAAUsB,GAEZxB,EAlQiB,GAqQxByB,GAA6B,SAAUzuB,GAEvC,SAASyuB,EAAYC,GACjB,IAAIC,EAAQ3uB,EAAOjqB,KAAKvB,KAAMk6C,IAAUl6C,KAExC,OADAm6C,EAAMD,MAAQA,EACPC,EASX,OAbAz5C,EAAUu5C,EAAazuB,GAMvByuB,EAAYp5C,UAAU24C,cAAgB,WAAcjH,GAAwBvyC,KAAKk6C,QACjFD,EAAYp5C,UAAU44C,eAAiB,YA1tC3C,SAASW,EAAyB3hC,GAC9BwB,IAAsB,GACtB,IACIs4B,GAAwB95B,GAE5B,QACIwB,IAAsB,IAotC2BmgC,CAAyBp6C,KAAKk6C,QACnF95C,OAAO+B,eAAe83C,EAAYp5C,UAAW,UAAW,CACpD4L,IAAK,WAAc,OAAO,MAC1Bo2B,YAAY,EACZC,cAAc,IAEXmX,EAdqB,CAe9BzB,IA+DF,SAAS6B,GAAiBC,EAAiBxjC,EAAO6N,GAW9C,OAVK0zB,KAEDA,GAA8B,SAAU7sB,GAEpC,SAAS+uB,IACL,OAAkB,OAAX/uB,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU65C,EAAa/uB,GAIhB+uB,EALkB,CAM3BD,IAEC,IAAIjC,GAAa7zB,GAAiB1N,EAAO6N,IAoBpD,SAAS61B,GAAkBC,EAAkBH,EAAiBrzB,EAAWlC,GA8BrE,OA7BKuzB,KAEDA,GAA+B,SAAU9sB,GAErC,SAASkvB,EAAaC,EAAkBC,EAAwBC,GAC5D,IAAIV,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAIjC,OAHAm6C,EAAMQ,iBAAmBA,EACzBR,EAAMS,uBAAyBA,EAC/BT,EAAMU,WAAaA,EACZV,EAiBX,OAvBAz5C,EAAUg6C,EAAclvB,GAQxBkvB,EAAa75C,UAAUi6C,mBAAqB,SAAUltC,GAClD,IAAIs+B,EAAgBlsC,KAAK46C,uBAAuB7S,OAC5CtvB,EAAQmyB,GAAY5qC,KAAK26C,iBAAkBzO,EAAet+B,EAAS,GAAsB,KAAMs+B,EAAc7Z,MAGjH5Z,EAAMvC,IAFsBlW,KAAK26C,iBAAiB36C,KAAK46C,uBAAuBr1C,OAG9E,IAAIw1C,EAA0B/6C,KAAK26C,iBAAiBplC,IACpB,OAA5BwlC,IACAtiC,EAAMlD,IAAWwlC,EAAwBD,mBAAmB5O,IAEhEZ,GAAW7yB,EAAOyzB,EAAet+B,GACjC,IAAIotC,EAAU,IAAIxC,GAAQ//B,GAE1B,OADAuiC,EAAQpC,WAAangC,EAAMjD,IACpBwlC,GAEJN,EAxBmB,CAyB5BD,IAEiB,IAAnBxzB,EAAUxf,KAEH,IAAI6wC,GAAcvzB,EAAUkC,EAAWozB,GAAiBC,EAAiBrzB,EAAWlC,IAGpF,KAuBf,SAASk2B,GAAmBC,EAAuBZ,EAAiBrzB,EAAWlC,GA0I3E,IAAI4uB,EAzIC4E,KAEDA,GAAoC,SAAU/sB,GAE1C,SAAS2vB,EAAkBC,EAAaC,EAAYC,GAChD,IAAInB,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAIjC,OAHAm6C,EAAMiB,YAAcA,EACpBjB,EAAMkB,WAAaA,EACnBlB,EAAMmB,UAAYA,EACXnB,EA4HX,OAlIAz5C,EAAUy6C,EAAmB3vB,GAQ7BprB,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,UAAW,CAC1D4L,IAAK,WACD,OAAO4tC,GAAiBC,EAAiBt6C,KAAKq7C,WAAYr7C,KAAKs7C,YAEnEzY,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,WAAY,CAC3D4L,IAAK,WAAc,OAAO,IAAIwb,GAAajoB,KAAKq7C,WAAYr7C,KAAKs7C,YACjEzY,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,iBAAkB,CAEjE4L,IAAK,WACD,IAAI4R,EAAiBuI,GAA0B5mB,KAAKq7C,WAAYr7C,KAAKs7C,WACjE18B,EAAaJ,GAAsBH,EAAgBre,KAAKs7C,WACxD9E,EAvexB,SAAS+E,EAAuB98B,EAAUC,EAAW88B,GACjD,GAAIA,EAAW3/B,SAA+C,IAArC2/B,EAAW3/B,OAAO2K,cAAsB,CAI7D,IAFA,IAAIA,EAAgBg1B,EAAW3/B,OAAO2K,cAClCi1B,EAAgBD,EAAW3/B,OACA,MAAxB4/B,EAAc5/B,QAAkB2K,GAAiBi1B,EAAcj1B,eAClEi1B,EAAgBA,EAAc5/B,OAElC,OAAO4/B,EAOX,IALA,IAAI98B,EAAaJ,GAA4BE,GAEzCG,EAAaF,EACb83B,EAAc93B,EAAUlJ,IAErBmJ,EAAa,GAEhB63B,GADA53B,EAAaA,EAAW3I,KACCT,IACzBmJ,IAEJ,OAAO63B,EAmd2B+E,CAAuBl9B,EAAgBre,KAAKs7C,UAAWt7C,KAAKq7C,YAC9E,OAAQj9B,GAAkBC,IAAkC,MAAfm4B,EAEzC,IAAIvuB,GAAauuB,EAAa53B,GAD9B,IAAIqJ,GAAa,KAAMjoB,KAAKs7C,YAGpCzY,YAAY,EACZC,cAAc,IAElBqY,EAAkBt6C,UAAU66C,MAAQ,WAChC,KAAO17C,KAAKsB,OAAS,GACjBtB,KAAKigC,OAAOjgC,KAAKsB,OAAS,IAGlC65C,EAAkBt6C,UAAU4L,IAAM,SAAUlH,GACxC,OAAuC,OAAhCvF,KAAKo7C,YAAY3kC,KAAuBzW,KAAKo7C,YAAY3kC,IAAWlR,IAAU,MAEzFnF,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,SAAU,CACzD4L,IAAK,WAAc,OAAOzM,KAAKo7C,YAAY95C,OAASoV,IACpDmsB,YAAY,EACZC,cAAc,IAElBqY,EAAkBt6C,UAAUi6C,mBAAqB,SAAUa,EAAa/tC,EAASrI,GAC7E,IAAIy1C,EAAUW,EAAYb,mBAAmBltC,GAAW,IAExD,OADA5N,KAAK47C,OAAOZ,EAASz1C,GACdy1C,GAEXG,EAAkBt6C,UAAUg7C,gBAAkB,SAAUC,EAAkBv2C,EAAOyG,EAAU+vC,EAAkBC,GACzG,IAAIC,EAAkBjwC,GAAYhM,KAAKk8C,eACvC,IAAKF,GAA4C,MAA7BF,EAAiBK,UAAoBF,EAAiB,CAItE,IAAIvS,EAASuS,EAAgBxvC,IAAI8B,GAAa,MAC1Cm7B,IACAsS,EAActS,GAGtB,IAAI0S,EAAeN,EAAiBh7C,OAAOm7C,EAAiBF,OAAkB70C,EAAW80C,GAEzF,OADAh8C,KAAK47C,OAAOQ,EAAar3B,SAAUxf,GAC5B62C,GAEXjB,EAAkBt6C,UAAU+6C,OAAS,SAAUZ,EAASz1C,GACpD,GAAIy1C,EAAQpS,UACR,MAAM,IAAIhiC,MAAM,sDAEpB5G,KAAKq8C,4BACL,IAAI5jC,EAAQuiC,EAAQ/wB,OAChBqyB,EAAct8C,KAAKu8C,aAAah3C,GACpC,OA//PhB,SAASi3C,EAAwB73B,GAC7B,OAAO/N,GAAa+N,EAAKtP,KA8/PTmnC,CAAwB/jC,GAGjBzY,KAAKy8C,KAAKzB,EAASsB,IAE9B7H,GAAWh8B,EAAOzY,KAAKo7C,YAAakB,GAEpC/H,GAA2B97B,GAAO,EADjBq+B,GAAqBwF,EAAat8C,KAAKo7C,cAExDJ,EAAQrB,yBAAyB35C,MACjCoP,GAAWpP,KAAKo7C,YAAY3kC,IAAY6lC,EAAatB,GAC9CA,IAEXG,EAAkBt6C,UAAU47C,KAAO,SAAUzB,EAAS0B,GAClD,GAAI1B,EAAQpS,UACR,MAAM,IAAIhiC,MAAM,oDAEpB,IAAIrB,EAAQvF,KAAK6I,QAAQmyC,GAIzB,OAHe,IAAXz1C,GACAvF,KAAKk5C,OAAO3zC,GAChBvF,KAAK47C,OAAOZ,EAAS0B,GACd1B,GAEXG,EAAkBt6C,UAAUgI,QAAU,SAAUmyC,GAC5C,OAAuC,OAAhCh7C,KAAKo7C,YAAY3kC,IACpBzW,KAAKo7C,YAAY3kC,IAAW5N,QAAQmyC,GACpC,GAERG,EAAkBt6C,UAAUo/B,OAAS,SAAU16B,GAC3CvF,KAAKq8C,4BACL,IAAIC,EAAct8C,KAAKu8C,aAAah3C,GAAQ,GAC5C+vC,GAAWt1C,KAAKo7C,YAAakB,GAC7BhtC,GAAgBtP,KAAKo7C,YAAY3kC,IAAY6lC,IAEjDnB,EAAkBt6C,UAAUq4C,OAAS,SAAU3zC,GAC3CvF,KAAKq8C,4BACL,IAAIC,EAAct8C,KAAKu8C,aAAah3C,GAAQ,GACxCof,EAAOuwB,GAAWl1C,KAAKo7C,YAAakB,GAExC,OADkB33B,GAAqE,MAA7DrV,GAAgBtP,KAAKo7C,YAAY3kC,IAAY6lC,GAClD,IAAI9D,GAAQ7zB,GAAQ,MAE7Cw2B,EAAkBt6C,UAAU07C,aAAe,SAAUh3C,EAAOo3C,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAATp3C,EACOvF,KAAKsB,OAASq7C,EAOlBp3C,GAEX41C,EAAkBt6C,UAAUw7C,0BAA4B,WAChB,OAAhCr8C,KAAKo7C,YAAY3kC,MACjBzW,KAAKo7C,YAAY3kC,IAAa,KAG/B0kC,EAnIwB,CAoIjCD,IAIN,IAAIl2B,EAAYD,EAASkC,EAAU1hB,OACnC,GAAIqR,GAAaoO,IAEb2uB,EAAa3uB,GACF1O,KAAiB,MAE3B,CACD,IAAIsmC,EAcJ,GAVIA,EADmB,IAAnB31B,EAAUxf,KACI6c,GAAYU,GAIZD,EAASlP,IAAUgnC,cAAwC,IAMzE3lC,GAAW6N,GAAW,CACtB,IAAI9H,EAAW8H,EAASlP,IACpB+7B,EAAaptB,GAAiByC,EAAWlC,GAE7C+uB,GAAmB72B,EADMq2B,GAAiBr2B,EAAU20B,GACHgL,EAr4B7D,SAASE,EAAkB7/B,EAAUoV,GACjC,OAAOrV,GAAqBC,GAAYA,EAAS2R,YAAYyD,GAAQA,EAAKzD,YAo4BJkuB,CAAkB7/B,EAAU20B,SAG1F/kB,GAAY+vB,EAAa31B,EAAWlC,GAExCA,EAASkC,EAAU1hB,OAASouC,EACxBhC,GAAiB3sB,EAAWD,EAAU63B,EAAa31B,GACvDoqB,GAActsB,EAAU4uB,GAE5B,OAAO,IAAI4E,GAAmB5E,EAAY1sB,EAAWlC,GAGzD,SAASg4B,GAAwBC,GAE7B,YADe,IAAXA,IAAqBA,GAAS,GAWtC,SAASC,EAAcnmC,EAAO2B,EAAOukC,GAIjC,IADuBA,GAAUjmC,GAAgBD,GAC5B,CAGjB,IAAIs6B,EAAgBvsB,GAAyB/N,EAAMvR,MAAOkT,GAC1D,OAAO,IAAI+/B,GAAQpH,EAAeA,GAEjC,GAAmB,IAAft6B,EAAMrP,MAA2C,IAAfqP,EAAMrP,MAC9B,IAAfqP,EAAMrP,KAAmC,CAGzC,IAAIy1C,EAAoB33B,GAAkB9M,GAC1C,OAAO,IAAI+/B,GAAQ0E,EAAmBzkC,GAE1C,OAAO,KA3BAwkC,CAAcxjC,KAA4BjB,KAAYwkC;;;;;;;;AAkGjE,IAAIG,GAAmC,WACnC,SAASA,KAOT,OADAA,EAAkBnyC,kBAAoB,WAAc,OAAOoyC,MACpDD,EAR2B,GAUlCE,GAAgDN,GAQhDK,GAP+C,WAE/C,IADA,IAAI74C,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,IAuBzB84C,GAAO59B,SACX,SAAS69B,GAAOt7B,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIu7B,GAAgB,6DAChBC,GAAkB,4CAClBC,GAA4B,mEAC5BC,GAAqC,oGAarCC,GAAwC,WACxC,SAASA,EAAuBC,GAC5B79C,KAAK89C,SAAWD,GAAW/zC,EAAiB,QA2MhD,OAzMA8zC,EAAuB/8C,UAAUk9C,oBAAsB,WAAc,OAAO,GAC5EH,EAAuB/8C,UAAUxB,QAAU,SAAU4B,GAAK,OAAO,WAE7D,IADA,IAAIsD,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD,GAEzB,OAAO,IAAKvD,EAAEyD,KAAKlD,MAAMP,EAAGuC,EAAS,MAAC,GAASe,OAGnDq5C,EAAuB/8C,UAAUm9C,wBAA0B,SAAUC,EAAYC,GAC7E,IAAIxU,EAEAA,EAASl6B,QADa,IAAfyuC,EACWC,EAAiB58C,OAGjB28C,EAAW38C,QAEjC,IAAK,IAAIH,EAAI,EAAGA,EAAIuoC,EAAOpoC,OAAQH,IAK3BuoC,EAAOvoC,QADe,IAAf88C,EACK,GAEPA,EAAW98C,IAAM88C,EAAW98C,IAAMf,OAC3B,CAAC69C,EAAW98C,IAGZ,GAEZ+8C,GAA2C,MAAvBA,EAAiB/8C,KACrCuoC,EAAOvoC,GAAKuoC,EAAOvoC,GAAGsC,OAAOy6C,EAAiB/8C,KAGtD,OAAOuoC,GAEXkU,EAAuB/8C,UAAUs9C,eAAiB,SAAU12C,EAAM22C,GAS9D,GArDR,SAASC,EAAeC,GACpB,OAAOd,GAAce,KAAKD,IAAYX,GAAmCY,KAAKD,IACzEb,GAAgBc,KAAKD,KAAaZ,GAA0Ba,KAAKD,GAmD9DD,CARU52C,EAAKkB,YASf,OAAO,KAGX,GAAIlB,EAAKjC,YAAciC,EAAKjC,aAAe44C,EAAW54C,WAClD,OAAOiC,EAAKjC,WAGhB,IAAIg5C,EAAoB/2C,EAAKg3C,eAC7B,GAAID,GAAqBA,IAAsBJ,EAAWK,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAel2C,KAAI,SAAUo2C,GAAa,OAAOA,GAAaA,EAAUl3C,QACvFm3C,EAAqBH,EAAel2C,KAAI,SAAUo2C,GAClD,OAAOA,GAAaE,GAAoCF,EAAUj9C,eAEtE,OAAO1B,KAAKg+C,wBAAwBU,EAAcE,GAGtD,IAAIV,EAAmBz2C,EAAKhH,eAAekD,IAAe8D,EAAK9D,GAC3Ds6C,EAAaj+C,KAAK89C,UAAY99C,KAAK89C,SAASgB,gBAC5C9+C,KAAK89C,SAASgB,eAAe,oBAAqBr3C,GACtD,OAAIw2C,GAAcC,EACPl+C,KAAKg+C,wBAAwBC,EAAYC,GAM7C1uC,GAAS/H,EAAKnG,SAEzBs8C,EAAuB/8C,UAAU2E,WAAa,SAAUiC,GAGpD,IAAK81C,GAAO91C,GACR,MAAO,GAEX,IAAI22C,EAAaW,GAAct3C,GAC3BjC,EAAaxF,KAAKm+C,eAAe12C,EAAM22C,GAI3C,OAHK54C,GAAc44C,IAAeh+C,SAC9BoF,EAAaxF,KAAKwF,WAAW44C,IAE1B54C,GAAc,IAEzBo4C,EAAuB/8C,UAAUm+C,gBAAkB,SAAUC,EAAYb,GAErE,GAAIa,EAAWC,aAAeD,EAAWC,cAAgBd,EAAWc,YAAa,CAC7E,IAAIA,EAAcD,EAAWC,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAID,EAAWv9C,YAAcu9C,EAAWv9C,aAAe08C,EAAW18C,WACvDm9C,GAAoCI,EAAWv9C,YAGtDu9C,EAAWx+C,eAAeiD,GACnBu7C,EAAWv7C,GAEf,MAEXk6C,EAAuB/8C,UAAUq+C,YAAc,SAAUD,GACrD,IAAK1B,GAAO0B,GACR,MAAO,GAEX,IAAIb,EAAaW,GAAcE,GAC3BE,EAAiBn/C,KAAKg/C,gBAAgBC,EAAYb,IAAe,GAErE,OADwBA,IAAeh+C,OAASJ,KAAKk/C,YAAYd,GAAc,IACtD36C,OAAO07C,IAEpCvB,EAAuB/8C,UAAUu+C,iBAAmB,SAAUH,EAAYb,GAEtE,GAAIa,EAAWI,cACXJ,EAAWI,eAAiBjB,EAAWiB,aAAc,CACrD,IAAIA,EAAeJ,EAAWI,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIJ,EAAWK,gBACXL,EAAWK,iBAAmBlB,EAAWkB,eAAgB,CACzD,IAAIC,EAAmBN,EAAWK,eAC9BE,EAAiB,GAIrB,OAHAp/C,OAAO2iB,KAAKw8B,GAAkBpwC,SAAQ,SAAU6T,GAC5Cw8B,EAAex8B,GAAQ67B,GAAoCU,EAAiBv8B,OAEzEw8B,EAGX,OAAIP,EAAWx+C,eAAemD,GACnBq7C,EAAWr7C,GAEf,MAEXg6C,EAAuB/8C,UAAUw+C,aAAe,SAAUJ,GACtD,IAAK1B,GAAO0B,GACR,MAAO,GAEX,IAAIb,EAAaW,GAAcE,GAC3BI,EAAe,GACnB,GAAIjB,IAAeh+C,OAAQ,CACvB,IAAIq/C,EAAuBz/C,KAAKq/C,aAAajB,GAC7Ch+C,OAAO2iB,KAAK08B,GAAsBtwC,SAAQ,SAAUlK,GAChDo6C,EAAap6C,GAAYw6C,EAAqBx6C,MAGtD,IAAIy6C,EAAkB1/C,KAAKo/C,iBAAiBH,EAAYb,GAWxD,OAVIsB,GACAt/C,OAAO2iB,KAAK28B,GAAiBvwC,SAAQ,SAAUlK,GAC3C,IAAIvD,EAAa,GACb29C,EAAa5+C,eAAewE,IAC5BvD,EAAW4B,KAAK9B,MAAME,EAAY8B,EAAS67C,EAAap6C,KAE5DvD,EAAW4B,KAAK9B,MAAME,EAAY8B,EAASk8C,EAAgBz6C,KAC3Do6C,EAAap6C,GAAYvD,KAG1B29C,GAEXzB,EAAuB/8C,UAAU6+C,gBAAkB,SAAUT,GACzD,OAAK1B,GAAO0B,IAGLj/C,KAAKo/C,iBAAiBH,EAAYF,GAAcE,KAF5C,IAIfrB,EAAuB/8C,UAAU8+C,iBAAmB,SAAUl4C,EAAMm4C,GAChE,OAAOn4C,aAAgB61C,IAAQsC,KAAcn4C,EAAK5G,WAEtD+8C,EAAuB/8C,UAAUg/C,OAAS,SAAUp4C,GAAQ,MAAO,IACnEm2C,EAAuB/8C,UAAUi/C,OAAS,SAAUh8C,GAAQ,OAAO,IAAI4b,SAAS,IAAK,YAAc5b,EAAO,MAC1G85C,EAAuB/8C,UAAUk/C,OAAS,SAAUj8C,GAChD,OAAO,IAAI4b,SAAS,IAAK,IAAK,YAAc5b,EAAO,UAEvD85C,EAAuB/8C,UAAUm/C,OAAS,SAAUl8C,GAEhD,OAAO,IAAI4b,SAAS,IAAK,OADN,UAAY5b,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5H85C,EAAuB/8C,UAAUo/C,UAAY,SAAUx4C,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAOY,EAAUZ,IAE5Bm2C,EAAuB/8C,UAAUq/C,YAAc,SAAUz4C,GAAQ,MAAO,KAAOY,EAAUZ,IACzFm2C,EAAuB/8C,UAAUs/C,kBAAoB,SAAUr8C,EAAMs8C,EAAWC,EAASC,GACrF,OAAOA,GAEX1C,EAAuB/8C,UAAU0/C,YAAc,SAAUC,EAAgB18C,GAAQ,OAAO08C,EAAe18C,IAChG85C,EA7MgC,GA+M3C,SAASiB,GAAoC4B,GACzC,OAAKA,EAGEA,EAAqBl4C,KAAI,SAAUm4C,GACtC,IACI57C,EADgB47C,EAAoBj5C,KACN3C,cAElC,OAAO,IAAKA,EAAcJ,KAAKlD,MAAMsD,EAAetB,EAAS,MAAC,GADzCk9C,EAAoBn8C,KAAOm8C,EAAoBn8C,KAAO,SALpE,GASf,SAASw6C,GAAch6C,GACnB,IAAI47C,EAAc57C,EAAKlE,UAAYT,OAAOiqB,eAAetlB,EAAKlE,WAAa,KAI3E,OAHiB8/C,EAAcA,EAAY//C,YAAc,OAGpCR;;;;;;;OAUzB,IAAI09C,GAAW,KACf,SAAS8C,KACL,OAAQ9C,GAAWA,IAAY,IAAIF,GAEvC,SAASiD,GAAoBp5C,GACzB,OAAOq5C,GAAoBF,KAAap7C,WAAWiC,IAEvD,SAASq5C,GAAoBC,GACzB,IAAIC,EAAWj3C,IACf,OAAOg3C,EAAKx4C,KAAI,SAAU04C,GAAO,OAErC,SAASC,EAAkBF,EAAUC,GACjC,IAAIp7C,EAAO,CACPI,MAAO,KACP4kC,MAAM,EACNsW,UAAU,EACVC,SAAUJ,EAAS33C,yBAAyBg4C,MAC5C1hD,MAAM,EACN2hD,UAAU,GAEd,SAASC,EAAwBt7C,GAC7BJ,EAAKu7C,SAAWJ,EAAS33C,yBAAyBg4C,MAClDx7C,EAAKI,MAAQA,EAEjB,GAAI1F,MAAM+H,QAAQ24C,GAAM,CACpB,GAAmB,IAAfA,EAAI3/C,OACJ,MAAM,IAAIsF,MAAM,yCAEpB,IAAK,IAAIqG,EAAI,EAAGA,EAAIg0C,EAAI3/C,OAAQ2L,IAAK,CACjC,IAAIu0C,EAAQP,EAAIh0C,GAChB,QAAc/F,IAAVs6C,EAIC,GAAIA,aAAiBr7C,GAA+C,aAAnCq7C,EAAMlhD,UAAUuE,eAClDgB,EAAKs7C,UAAW,OAEf,GAAIK,aAAiBn7C,GAA+C,aAAnCm7C,EAAMlhD,UAAUuE,eAClDgB,EAAKy7C,UAAW,OAEf,GAAIE,aAAiBp7C,GAA2C,SAAnCo7C,EAAMlhD,UAAUuE,eAC9CgB,EAAKlG,MAAO,OAEX,GAAI6hD,aAAiBl7C,GAA2C,SAAnCk7C,EAAMlhD,UAAUuE,eAC9CgB,EAAKglC,MAAO,OAEX,GAAI2W,aAAiBt7C,EACtBL,EAAKI,MAAQu7C,EAAMv7C,WAElB,GAAIu7C,aAAiB/6C,EAAW,CACjC,QAA4BS,IAAxBs6C,EAAMh7C,cACN,MAAM,IAAII,MAAM,mCAEpBf,EAAKI,MAAQu7C,EAAMh7C,cACnBX,EAAKu7C,SAAWJ,EAAS33C,yBAAyB5C,eAE7C+6C,IAAUrE,IACft3C,EAAKI,MAAQu7C,EACb37C,EAAKu7C,SAAWJ,EAAS33C,yBAAyB8zC,mBAGlDoE,EAAwBC,SAKhCD,EAAwBN,GAE5B,OAAOp7C;;;;;;;OA3DiCq7C,CAAkBF,EAAUC,MA8GxE,IACIQ,GAAc/6C,EAAuB,CAAEiF,QAASC,OAAQC,SADjDnF,IAEX,SAASg7C,GAAmB77C,GACxB,YAAyBqB,IAAlBrB,EAAK87C,SAKhB,SAASC,GAAqB/7C,GAC1B,YAA2BqB,IAApBrB,EAAKg8C,WAKhB,SAASC,GAAsBr6C,EAAMs6C,GAEjC,IAAIl8C,EAAOk8C,GAAW,CAAE96C,WAAY,MAChC+6C,EAAe,CACfl+C,KAAM2D,EAAK3D,KACX2D,KAAMA,EACNw6C,kBAAmB,EACnBh7C,WAAYpB,EAAKoB,WACjBi7C,cAAUh7C,GAqBd,OAnBKw6C,GAAmB77C,IAAS+7C,GAAqB/7C,UAAwBqB,IAAdrB,EAAKk7C,OACjEiB,EAAaE,SAAWpB,GAAoBj7C,EAAKk7C,OAEjDW,GAAmB77C,GAEnBm8C,EAAaL,SAAWz4C,EAAkBrD,EAAK87C,UAxBvD,SAASQ,EAAmBt8C,GACxB,OAAO47C,MAAe57C,EAyBbs8C,CAAmBt8C,GAExBm8C,EAAan2C,SAAW3C,EAAkBrD,EAAKgG,UAE1C+1C,GAAqB/7C,GAE1Bm8C,EAAaH,WAAah8C,EAAKg8C,WA1BvC,SAASO,EAAsBv8C,GAC3B,YAA4BqB,IAArBrB,EAAKw8C,YA2BHD,CAAsBv8C,KAE3Bm8C,EAAaK,YAAcn5C,EAAkBrD,EAAKw8C,cAE/CL;;;;;;;OAUX,IACIM,GAAc57C,EAAuB,CAAEiF,QAASC,OAAQC,SADjDnF,IAEP67C,GAAgB,GACpB,SAASC,GAAmC/6C,EAAMg7C,GAC9C,IAAKA,EAAU,CACX,IACIC,GADAC,EAAyB,IAAI/E,IACGp4C,WAAWiC,GAE/C,OAAO,WAAc,OAAO,IAAKA,EAAK/C,KAAKlD,MAAMiG,EAAMjE,EAAS,MAAC,GAASsJ,GAAW41C,OAEzF,GAAIJ,MAAeG,EAAU,CACzB,IAAIG,EAAkBH,EACtB,OAAO,WAAc,OAAOG,EAAgB/2C,UAE3C,GAAI42C,EAASJ,YAAa,CAC3B,IAAIQ,EAAqBJ,EACzB,OAAO,WAAc,OAAO/1C,GAASxD,EAAkB25C,EAAmBR,eAEzE,GAAII,EAASZ,WAAY,CAC1B,IAAIiB,EAAoBL,EACxB,OAAO,WAAc,OAAOK,EAAkBjB,WAAWrgD,MAAMshD,EAAmBt/C,EAASsJ,GAAWg2C,EAAkB/B,MAAQwB,OAE/H,GAAIE,EAASd,SAAU,CACxB,IAAIoB,EAAkBN,EAClBO,EAASP,EAAS1B,KACtB,IAAKiC,EAAQ,CACT,IAAIL,EAAyB,IAAI/E,GACjCoF,EAASL,EAAuBn9C,WAAWiC,GAE/C,OAAO,WACH,IAAInD,EACJ,OAAO,KAAMA,EAAM4E,EAAkB65C,EAAgBpB,WAAYj9C,KAAKlD,MAAM8C,EAAId,EAAS,MAAC,GAASsJ,GAAWk2C,OAIlH,IAAIC,EAASR,EAAS1B,KAKtB,OAJKkC,IACGN,EAAyB,IAAI/E,GACjCqF,EAASN,EAAuBn9C,WAAWiC,IAExC,WAAc,OAAO,IAAKA,EAAK/C,KAAKlD,MAAMiG,EAAMjE,EAAS,MAAC,GAASsJ,GAAWm2C;;;;;;;OAW7F,IAOIC,GAAar/C,EAAc,kBAAcqD,OAAWA,OAAWA,GAPxD,SAAUO,EAAM5B,GAAQ,OAAOs9C,GAA0B17C,EAAM5B,MAsBtEs9C,GAXJ,SAASC,GAAyBC,EAAgBh8C,GAC1CA,QAAkCH,IAAvBG,EAAQJ,aAA6BO,EAAiB67C,KACjEA,EAAep7C,MAAQlB,EAAmB,CACtCd,MAAOo9C,EACPp8C,WAAYI,EAAQJ,WACpB5H,QAASmjD,GAAmCa,EAAgBh8C,OAoBpEi8C,GAAiB,IAAIr4C,GAAe,uBAYpCs4C,GAAU,GAQVC,GAAW,GACXC,GAAgB,GAIhBC,QAAgBx8C,EACpB,SAASy8C,KAIL,YAHsBz8C,IAAlBw8C,KACAA,GAAgB,IAAIx2C,IAEjBw2C,GAOX,SAASE,GAAeC,EAAShoC,EAAQioC,EAAqBhgD,GAI1D,YAHe,IAAX+X,IAAqBA,EAAS,WACN,IAAxBioC,IAAkCA,EAAsB,MAC5DjoC,EAASA,GAAU8nC,KACZ,IAAII,GAAWF,EAASC,EAAqBjoC,EAAQ/X,GAEhE,IAAIigD,GAA4B,WAC5B,SAASA,EAAWl8C,EAAKi8C,EAAqBjoC,EAAQ/U,GAClD,IAAIqzC,EAAQn6C,UACG,IAAX8G,IAAqBA,EAAS,MAClC9G,KAAK6b,OAASA,EAMd7b,KAAKgkD,QAAU,IAAIC,IAInBjkD,KAAKkkD,iBAAmB,IAAIC,IAI5BnkD,KAAK+R,UAAY,IAAIoyC,IACrBnkD,KAAKokD,YAAa,EAClB,IAAIC,EAAa,GAIjBP,GAAuB70C,GAAY60C,GAAqB,SAAUrB,GAAY,OAAOtI,EAAMmK,gBAAgB7B,EAAU56C,EAAKi8C,MAC1H70C,GAAY,CAACpH,IAAM,SAAUqiB,GAAe,OAAOiwB,EAAMoK,oBAAoBr6B,EAAa,GAAIm6B,MAE9FrkD,KAAKgkD,QAAQze,IAAIp6B,GAAUq5C,QAAWt9C,EAAWlH,OAGjD,IAAIykD,EAASzkD,KAAKgkD,QAAQv3C,IAAI62C,IAC9BtjD,KAAKoU,MAAkB,MAAVqwC,EAAiBA,EAAOxhD,MAAQ,KAE7CjD,KAAKkkD,iBAAiB/0C,SAAQ,SAAU00C,GAAW,OAAO1J,EAAM1tC,IAAIo3C,MAEpE7jD,KAAK8G,OAASA,IAA0B,iBAARe,EAAmB,KAAOQ,EAAUR,IA6PxE,OA3PAzH,OAAO+B,eAAe4hD,EAAWljD,UAAW,YAAa,CAIrD4L,IAAK,WAAc,OAAOzM,KAAKokD,YAC/BvhB,YAAY,EACZC,cAAc,IAQlBihB,EAAWljD,UAAUy1C,QAAU,WAC3Bt2C,KAAK0kD,qBAEL1kD,KAAKokD,YAAa,EAClB,IAEIpkD,KAAK+R,UAAU5C,SAAQ,SAAUw1C,GAAW,OAAOA,EAAQ3yC,iBAE/D,QAEIhS,KAAKgkD,QAAQtI,QACb17C,KAAK+R,UAAU2pC,QACf17C,KAAKkkD,iBAAiBxI,UAG9BqI,EAAWljD,UAAU4L,IAAM,SAAUxG,EAAO2G,EAAeN,QACjC,IAAlBM,IAA4BA,EAAgBxB,SAClC,IAAVkB,IAAoBA,EAAQhN,EAAQyG,YAAYwG,SACpDvM,KAAK0kD,qBAEL,IAAIE,EAAmB74C,GAAmB/L,MAC1C,IAEI,KAAMsM,EAAQhN,EAAQyG,YAAYM,UAAW,CAEzC,IAAIo+C,EAASzkD,KAAKgkD,QAAQv3C,IAAIxG,GAC9B,QAAeiB,IAAXu9C,EAAsB,CAGtB,IAAI58C,EA0UxB,SAASg9C,EAAsB5hD,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiBgI;;;;;;;OA5UzB45C,CAAsB5+C,IAAUuB,EAAiBvB,GAIvDw+C,EAHA58C,GAAO7H,KAAK8kD,qBAAqBj9C,GAGxB28C,GAAWO,GAAkC9+C,GAAQs9C,IAGrD,KAEbvjD,KAAKgkD,QAAQze,IAAIt/B,EAAOw+C,GAG5B,GAAc,MAAVA,EACA,OAAOzkD,KAAKglD,QAAQ/+C,EAAOw+C,GAWnC,OANqBn4C,EAAQhN,EAAQyG,YAAYK,KAAsBu9C,KAAd3jD,KAAK6b,QAM1CpP,IAAIxG,EAHxB2G,EAAiBN,EAAQhN,EAAQyG,YAAYI,UAAayG,IAAkBxB,GACxE,KACAwB,GAGR,MAAOxJ,GACH,GAAe,sBAAXA,EAAEU,KAA8B,CAGhC,IAFWV,EAAEiI,IAAsBjI,EAAEiI,KAAuB,IACvDvF,QAAQuC,EAAUpC,IACnB2+C,EAEA,MAAMxhD,EAIN,OAAO+J,GAAmB/J,EAAG6C,EAAO,kBAAmBjG,KAAK8G,QAIhE,MAAM1D,EAGd,QAEI2I,GAAmB64C,KAG3Bb,EAAWljD,UAAU8H,SAAW,WAC5B,IAAIs8C,EAAS,GAEb,OAF2BjlD,KAAKgkD,QACxB70C,SAAQ,SAAU8S,EAAGhc,GAAS,OAAOg/C,EAAO3hD,KAAK+E,EAAUpC,OAC5D,cAAgBg/C,EAAOz8C,KAAK,MAAQ,KAE/Cu7C,EAAWljD,UAAU6jD,mBAAqB,WACtC,GAAI1kD,KAAKokD,WACL,MAAM,IAAIx9C,MAAM,yCAYxBm9C,EAAWljD,UAAU0jD,oBAAsB,SAAUW,EAAiBC,EAASd,GAC3E,IAAIlK,EAAQn6C,KAEZ,KADAklD,EAAkBh8C,EAAkBg8C,IAEhC,OAAO,EAKX,IAAIr9C,EAAMC,EAAeo9C,GAErB/I,EAAmB,MAAPt0C,GAAgBq9C,EAAgB/I,eAAYj1C,EAIxD28C,OAAwB38C,IAAbi1C,EAA0B+I,EAAkB/I,EAOvDiJ,GAA+C,IAAjCf,EAAWx7C,QAAQg7C,GAOrC,QAJiB38C,IAAbi1C,IACAt0C,EAAMC,EAAeq0C,IAGd,MAAPt0C,EACA,OAAO,EAOX,GAJA7H,KAAKkkD,iBAAiBnkB,IAAI8jB,GAC1B7jD,KAAKgkD,QAAQze,IAAIse,EAASW,GAAW38C,EAAIxI,QAASkkD,KAG/B,MAAf17C,EAAIN,UAAoB69C,EAAa,CAMrC,IAAIC,EADJhB,EAAW/gD,KAAKugD,GAEhB,IACI50C,GAAYpH,EAAIN,SAAS,SAAU+9C,GAC3BnL,EAAMoK,oBAAoBe,EAAUH,EAASd,UACVn9C,IAA/Bm+C,IACAA,EAA6B,IAGjCA,EAA2B/hD,KAAKgiD,OAI5C,SAOA,QAAmCp+C,IAA/Bm+C,EAKA,IAJA,IAAIE,EAAU,SAAUpkD,GACpB,IAAImD,EAAK+gD,EAA2BlkD,GAAIqkD,EAAalhD,EAAG63C,SAAU70C,EAAYhD,EAAGgD,UACjF2H,GAAY3H,GAAW,SAAUm7C,GAAY,OAAOtI,EAAMmK,gBAAgB7B,EAAU+C,EAAYl+C,GAAam8C,QAExGtiD,EAAI,EAAGA,EAAIkkD,EAA2B/jD,OAAQH,IACnDokD,EAAQpkD,GAKpB,IAAIskD,EAAe59C,EAAIP,UACvB,GAAoB,MAAhBm+C,IAAyBL,EAAa,CACtC,IAAIM,EAAiBR,EACrBj2C,GAAYw2C,GAAc,SAAUhD,GAAY,OAAOtI,EAAMmK,gBAAgB7B,EAAUiD,EAAgBD,MAE3G,YAAqBv+C,IAAbi1C,QAC0Bj1C,IAA9Bg+C,EAAgB59C,WAKxBy8C,EAAWljD,UAAUyjD,gBAAkB,SAAU7B,EAAUkD,EAAcr+C,GAIrE,IAAIrB,EAAQ2/C,GADZnD,EAAWv5C,EAAkBu5C,IACUA,EAAWv5C,EAAkBu5C,GAAYA,EAAS92C,SAErF84C,EAkGZ,SAASoB,EAAiBpD,EAAUkD,EAAcr+C,GAC9C,OAAIw+C,GAAgBrD,GACT+B,QAAWt9C,EAAWu7C,EAAS52C,UAI/B24C,GADOuB,GAAkBtD,EAAUkD,EAAcr+C,GAC7Bi8C,IAxGdsC,CAAiBpD,EAAUkD,EAAcr+C,GACtD,GAAKs+C,GAAenD,KAAgC,IAAnBA,EAASuD,MAkBrC,CACD,IAAIC,EAAWjmD,KAAKgkD,QAAQv3C,IAAIxG,GAC5BggD,QAA+B/+C,IAAnB++C,EAASD,OACrBjvB,SArBkD,CAGtD,IAAImvB,EAAgBlmD,KAAKgkD,QAAQv3C,IAAIxG,GACjCigD,OAE4Bh/C,IAAxBg/C,EAAcF,OACdjvB,OAIJmvB,EAAgB1B,QAAWt9C,EAAWq8C,IAAS,IACjClkD,QAAU,WAAc,OAAOyN,GAAWo5C,EAAcF,QACtEhmD,KAAKgkD,QAAQze,IAAIt/B,EAAOigD,IAE5BjgD,EAAQw8C,EACRyD,EAAcF,MAAM1iD,KAAKm/C,GAQ7BziD,KAAKgkD,QAAQze,IAAIt/B,EAAOw+C,IAE5BV,EAAWljD,UAAUmkD,QAAU,SAAU/+C,EAAOw+C,GAW5C,OAVIA,EAAOxhD,QAAUugD,GAh9N7B,SAAS2C,EAA2BlgD,GAChC,MAAM,IAAIW,MAAM,yCAA2CX,GAg9NnDkgD,CAA2B99C,EAAUpC,IAEhCw+C,EAAOxhD,QAAUsgD,KACtBkB,EAAOxhD,MAAQugD,GACfiB,EAAOxhD,MAAQwhD,EAAOplD,WAEE,iBAAjBolD,EAAOxhD,OAAsBwhD,EAAOxhD,OAsIvD,SAASmjD,EAAanjD,GAClB,OAAiB,OAAVA,GAAmC,iBAAVA,GACC,mBAAtBA,EAAM+O,YAxI2Co0C,CAAa3B,EAAOxhD,QACxEjD,KAAK+R,UAAUguB,IAAI0kB,EAAOxhD,OAEvBwhD,EAAOxhD,OAElB8gD,EAAWljD,UAAUikD,qBAAuB,SAAUj9C,GAClD,QAAKA,EAAIZ,aAG0B,iBAAnBY,EAAIZ,WACU,QAAnBY,EAAIZ,YAAyBY,EAAIZ,aAAejH,KAAKoU,MAGrDpU,KAAKkkD,iBAAiBmC,IAAIx+C,EAAIZ,cAGtC88C,EAhSoB,GAkS/B,SAASgB,GAAkC9+C,GAEvC,IAAI4G,EAAgBrF,EAAiBvB,GACjC5G,EAA4B,OAAlBwN,EAAyBA,EAAcxN,QAAU2V,GAAc/O,GAC7E,GAAgB,OAAZ5G,EACA,OAAOA,EAIX,IAAI6qB,EAAcpiB,EAAe7B,GACjC,GAAoB,OAAhBikB,EACA,OAAOA,EAAY7qB,QAIvB,GAAI4G,aAAiBgF,GACjB,MAAM,IAAIrE,MAAM,SAAWyB,EAAUpC,GAAS,mCAGlD,GAAIA,aAAiByZ,SACjB,OAKR,SAAS4mC,EAAgCrgD,GAErC,IAAIsgD,EAActgD,EAAM3E,OACxB,GAAIilD,EAAc,EAAG,CACjB,IAAIhiD,EAAOiL,GAAS+2C,EAAa,KACjC,MAAM,IAAI3/C,MAAM,oCAAsCyB,EAAUpC,GAAS,MAAQ1B,EAAKiE,KAAK,MAAQ,MAOvG,IAAIg+C,EA51XR,SAASC,EAA0Bh/C,GAC/B,IAAII,EAAMJ,IAASA,EAAKE,IAAgBF,EAAKG,IAC7C,OAAIC,GAGA+iB,QAAQsE,KAAK,4CAA+CznB,EAAK3D,KAAO,kJACM2D,EAAK3D,KAAO,YACnF+D,GAGA,KAk1XkB4+C,CAA0BxgD,GACvD,OAA+B,OAA3BugD,EACO,WAAc,OAAOA,EAAuBnnD,QAAQ4G,IAGpD,WAAc,OAAO,IAAIA,GAtBzBqgD,CAAgCrgD,GAG3C,MAAM,IAAIW,MAAM,eAoCpB,SAASm/C,GAAkBtD,EAAUkD,EAAcr+C,GAC/C,IAAIjI,OAAU6H,EACd,GAAI0+C,GAAenD,GACf,OAAOsC,GAAkC77C,EAAkBu5C,IAG3D,GAAIqD,GAAgBrD,GAChBpjD,EAAU,WAAc,OAAO6J,EAAkBu5C,EAAS52C,gBAEzD,GAiCb,SAAS66C,EAAmBzjD,GACxB,SAAUA,IAASA,EAAMo/C,aAlCZqE,CAAmBjE,GACxBpjD,EAAU,WAAc,OAAOqN,GAASxD,EAAkBu5C,EAASJ,oBAElE,GAiCb,SAASsE,EAAkB1jD,GACvB,SAAUA,IAASA,EAAM4+C,YAlCZ8E,CAAkBlE,GACvBpjD,EAAU,WAAc,OAAOojD,EAASZ,WAAWrgD,MAAMihD,EAAUj/C,EAASsJ,GAAW21C,EAAS1B,MAAQ,WAEvG,CACD,IAAI6F,EAAa19C,EAAkBu5C,IAC9BA,EAASd,UAAYc,EAAS92C,UAInC,GAHKi7C,GAjiOjB,SAASC,EAA0BlB,EAAcr+C,EAAWm7C,GACxD,IAAIqE,EAAiB,GAMrB,MALInB,GAAgBr+C,IAEhBw/C,EACI,6DAFiBx/C,EAAUiB,KAAI,SAAU0Z,GAAK,OAAOA,GAAKwgC,EAAW,IAAMA,EAAW,IAAM,SAEdj6C,KAAK,MAAQ,KAE7F,IAAI5B,MAAM,sCAAwCyB,EAAUs9C,GAAgB,IAAMmB,GA2hO5ED,CAA0BlB,EAAcr+C,EAAWm7C,IAmCnE,SAASsE,EAAQ9jD,GACb,QAASA,EAAM89C,KAlCHgG,CAAQtE,GAIR,OAAOsC,GAAkC6B,GAHzCvnD,EAAU,WAAc,OAAO,IAAK,EAAaqF,KAAKlD,MAAM,EAAcgC,EAAS,MAAC,GAASsJ,GAAW21C,EAAS1B,UAO7H,OAAO1hD,EAEX,SAASmlD,GAAWnlD,EAAS4D,EAAO+iD,GAEhC,YADc,IAAVA,IAAoBA,GAAQ,GACzB,CACH3mD,QAASA,EACT4D,MAAOA,EACP+iD,MAAOA,EAAQ,QAAK9+C,GAG5B,SAAS4+C,GAAgB7iD,GACrB,OAAiB,OAAVA,GAAkC,iBAATA,GAAqByI,MAAazI,EAQtE,SAAS2iD,GAAe3iD,GACpB,MAAwB,mBAAVA,EA8BlB,IAAI+jD,GANJ,SAASC,GAAwB3/C,EAAWuU,EAAQ/X,GAChD,OAAO,IAAIojD,GAAe5/C,EAAWuU,EAAQ/X,IAsB7CqjD,GAA0B,WAC1B,SAASA,KA+BT,OArBAA,EAASrmD,OAAS,SAAUuG,EAASwU,GACjC,OAAItb,MAAM+H,QAAQjB,GACP2/C,GAAc3/C,EAASwU,EAAQ,IAG/BmrC,GAAc3/C,EAAQC,UAAWD,EAAQwU,OAAQxU,EAAQvD,MAAQ,KAGhFqjD,EAAS/7C,mBAAqBA,GAC9B+7C,EAASC,KAAO,IAAIl6C,GAEpBi6C,EAASl/C,MAAQlB,EAAmB,CAChCd,MAAOkhD,EACPlgD,WAAY,MACZ5H,QAAS,WAAc,OAAOqN,GAASvB,OAM3Cg8C,EAASn8C,mBAAqB,EACvBm8C,EAhCkB,GAkCzBE,GAAQ,SAAUpkD,GAClB,OAAOA,GAGPqkD,GAAQ,GACRC,GAAaF,GACbG,GAAoB,WACpB,OAAOjnD,MAAMM,UAAUmO,MAAMzN,KAAKF,YAIlC6lD,GAAgC,WAChC,SAASA,EAAe5/C,EAAWuU,EAAQ/U,QACxB,IAAX+U,IAAqBA,EAASsrC,GAASC,WAC5B,IAAXtgD,IAAqBA,EAAS,MAClC9G,KAAK6b,OAASA,EACd7b,KAAK8G,OAASA,EACd,IAAIk9C,EAAUhkD,KAAKynD,SAAW,IAAIxD,IAClCD,EAAQze,IAAI4hB,GAAU,CAAElhD,MAAOkhD,GAAU/9C,GAAIi+C,GAAOtG,KAAMuG,GAAOrkD,MAAOjD,KAAM0nD,QAAQ,IACtF1D,EAAQze,IAAIp6B,GAAU,CAAElF,MAAOkF,GAAU/B,GAAIi+C,GAAOtG,KAAMuG,GAAOrkD,MAAOjD,KAAM0nD,QAAQ,IACtF1nD,KAAKoU,MAsEb,SAASuzC,EAA4B3D,EAASvB,GAC1C,IAAIruC,EAAQ,KACZ,GAAIquC,EAEA,GADAA,EAAWv5C,EAAkBu5C,GACzBliD,MAAM+H,QAAQm6C,GAEd,IAAK,IAAIthD,EAAI,EAAGA,EAAIshD,EAASnhD,OAAQH,IACjCiT,EAAQuzC,EAA4B3D,EAASvB,EAASthD,KAAOiT,MAGhE,CAAA,GAAwB,mBAAbquC,EAGZ,MAAMmF,GAAY,+BAAgCnF,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAAS92C,QAoC1D,MAAMi8C,GAAY,sBAAuBnF,GAlCzC,IAAIx8C,EAAQiD,EAAkBu5C,EAAS92C,SACnCk8C,EAAmBC,GAAgBrF,GACvC,IAAuB,IAAnBA,EAASuD,MAAgB,CAEzB,IAAI+B,EAAgB/D,EAAQv3C,IAAIxG,GAChC,GAAI8hD,GACA,GAAIA,EAAc3+C,KAAOo+C,GACrB,MAAMQ,GAAsB/hD,QAKhC+9C,EAAQze,IAAIt/B,EAAO8hD,EAAgB,CAC/B9hD,MAAOw8C,EAAS92C,QAChBo1C,KAAM,GACN2G,QAAQ,EACRt+C,GAAIo+C,GACJvkD,MAAOqkD,KAKfS,EAAchH,KAAKz9C,KAAK,CAAE2C,MAD1BA,EAAQw8C,EACgCp7C,QAAS,IAErD,IAAIo9C,EAAST,EAAQv3C,IAAIxG,GACzB,GAAIw+C,GAAUA,EAAOr7C,IAAMo+C,GACvB,MAAMQ,GAAsB/hD,GAE5BA,IAAUq9C,KACVlvC,EAAQyzC,EAAiB5kD,OAE7B+gD,EAAQze,IAAIt/B,EAAO4hD,GAM3B,OAAOzzC,EA5HUuzC,CAA4B3D,EAAS18C,GAoCtD,OAlCA4/C,EAAermD,UAAU4L,IAAM,SAAUxG,EAAO2G,EAAeN,QAC7C,IAAVA,IAAoBA,EAAQhN,EAAQyG,YAAYwG,SACpD,IAAIy3C,EAAUhkD,KAAKynD,SACfhD,EAAST,EAAQv3C,IAAIxG,GACzB,QAAeiB,IAAXu9C,EAAsB,CAEtB,IAAI53C,EAAgBrF,EAAiBvB,GACrC,GAAI4G,EAAe,CACf,IAAI5F,EAAa4F,GAAiBA,EAAc5F,YAC7B,QAAfA,GAAsC,MAAdA,GAAsBA,IAAejH,KAAKoU,QAClE4vC,EAAQze,IAAIt/B,EAAOw+C,EAASqD,GAAgB,CAAEn8C,QAAS1F,EAAO47C,WAAYh1C,EAAcxN,QAAS0hD,KAAMuG,WAGhGpgD,IAAXu9C,GAEAT,EAAQze,IAAIt/B,EAAO,MAG3B,IAAIgiD,EAAel8C,GAAmB/L,MACtC,IACI,OAwGZ,SAASkoD,EAAgBjiD,EAAOw+C,EAAQT,EAASnoC,EAAQjP,EAAeN,GACpE,IACI,OAgBR,SAAS67C,EAAaliD,EAAOw+C,EAAQT,EAASnoC,EAAQjP,EAAeN,GACjE,IAAIhI,EACArB,EACJ,IAAIwhD,GAAYn4C,EAAQhN,EAAQyG,YAAYM,SA2CxCpD,EAPOqJ,EAAQhN,EAAQyG,YAAYK,KAO3B+gD,GAASC,KAAK36C,IAAIxG,EAJnBqG,EAAQhN,EAAQyG,YAAYI,cAIuB,IAAlByG,EAAgCA,EAAgB,KAHvDA,GAHzBiP,EAAOpP,IAAIxG,EAAO2G,EAAetN,EAAQyG,YAAYwG,aArCV,CAInD,IADAtJ,EAAQwhD,EAAOxhD,QACFskD,GACT,MAAM3gD,MAAMwhD,wBAEX,GAAInlD,IAAUqkD,GAAO,CACtB7C,EAAOxhD,MAAQskD,GACf,IACIG,EAASjD,EAAOiD,OAChBt+C,EAAKq7C,EAAOr7C,GACZi/C,EAAa5D,EAAO1D,KACpBA,EAAOuG,GACX,GAAIe,EAAW/mD,OAAQ,CACnBy/C,EAAO,GACP,IAAK,IAAI5/C,EAAI,EAAGA,EAAIknD,EAAW/mD,OAAQH,IAAK,CACxC,IAAImnD,EAAYD,EAAWlnD,GACvBkG,EAAUihD,EAAUjhD,QACpBkhD,EAAwB,EAAVlhD,EAA8B28C,EAAQv3C,IAAI67C,EAAUriD,YAASiB,EAC/E65C,EAAKz9C,KAAK4kD,EAEVI,EAAUriD,MAGVsiD,EAEAvE,EAGCuE,GAA2B,EAAVlhD,EAAiDwU,EAAhBsrC,GAASC,KAAyB,EAAV//C,EAA6B,KAAO8/C,GAAS/7C,mBAAoB9L,EAAQyG,YAAYwG,WAGxKk4C,EAAOxhD,MAAQA,EAAQykD,EAAS,KAAMpjD,EAAK8E,GAAI1E,KAAKlD,MAAM8C,EAAId,EAAS,MAAC,GAASu9C,KAAY33C,EAAG5H,WAxBtF0F,EAwBiG65C,IAYnH,OAAO99C,EAhEIklD,CAAaliD,EAAOw+C,EAAQT,EAASnoC,EAAQjP,EAAeN,GAEvE,MAAOlJ,GAWH,MATMA,aAAawD,QACfxD,EAAI,IAAIwD,MAAMxD,KAEPA,EAAEiI,IAAsBjI,EAAEiI,KAAuB,IACvDvF,QAAQG,GACTw+C,GAAUA,EAAOxhD,OAASskD,KAE1B9C,EAAOxhD,MAAQqkD,IAEblkD,GAvHK8kD,CAAgBjiD,EAAOw+C,EAAQT,EAAShkD,KAAK6b,OAAQjP,EAAeN,GAE/E,MAAOlJ,GACH,OAAO+J,GAAmB/J,EAAG6C,EAAO,sBAAuBjG,KAAK8G,QAEpE,QACIiF,GAAmBk8C,KAG3Bf,EAAermD,UAAU8H,SAAW,WAChC,IAAIs8C,EAAS,GAEb,OAF2BjlD,KAAKynD,SACxBt4C,SAAQ,SAAU8S,EAAGhc,GAAS,OAAOg/C,EAAO3hD,KAAK+E,EAAUpC,OAC5D,kBAAoBg/C,EAAOz8C,KAAK,MAAQ,KAE5C0+C,EA7CwB,GA+CnC,SAASY,GAAgBrF,GACrB,IAAI1B,EA2JR,SAASyH,EAAY/F,GACjB,IAAI1B,EAAOuG,GACPmB,EAAehG,EAAS1B,KAC5B,GAAI0H,GAAgBA,EAAannD,OAAQ,CACrCy/C,EAAO,GACP,IAAK,IAAI5/C,EAAI,EAAGA,EAAIsnD,EAAannD,OAAQH,IAAK,CAC1C,IAAIkG,EAAU,EACVpB,EAAQiD,EAAkBu/C,EAAatnD,IAC3C,GAAIZ,MAAM+H,QAAQrC,GACd,IAAK,IAAIgH,EAAI,EAAGiyC,EAAcj5C,EAAOgH,EAAIiyC,EAAY59C,OAAQ2L,IAAK,CAC9D,IAAI5H,EAAa65C,EAAYjyC,GACzB5H,aAAsBc,GAAYd,GAAcc,EAChDkB,GAAoB,EAEfhC,aAAsBgB,GAAYhB,GAAcgB,EACrDgB,IAAoB,EAEfhC,aAAsBe,GAAQf,GAAce,EACjDiB,IAAoB,EAGpBpB,EADKZ,aAAsBa,EACnBb,EAAWY,MAGXiD,EAAkB7D,GAItC07C,EAAKz9C,KAAK,CAAE2C,MAAOA,EAAOoB,QAASA,UAGtC,GAAIo7C,EAASJ,YAEdtB,EAAO,CAAC,CAAE96C,MADNA,EAAQiD,EAAkBu5C,EAASJ,aACfh7C,QAAS,SAEhC,KAAKohD,GAAkB/8C,MAAa+2C,GAErC,MAAMmF,GAAY,kBAAqBnF,GAE3C,OAAO1B,EAlMIyH,CAAY/F,GACnBr5C,EAAKi+C,GACLpkD,EAAQqkD,GACRI,GAAS,EACT/7C,EAAUzC,EAAkBu5C,EAAS92C,SACzC,GAAID,MAAa+2C,EAEbx/C,EAAQw/C,EAAS52C,cAEhB,GAAI42C,EAASZ,WACdz4C,EAAKq5C,EAASZ,gBAEb,GAAIY,EAASJ,kBAGb,GAAII,EAASd,SACd+F,GAAS,EACTt+C,EAAKF,EAAkBu5C,EAASd,cAE/B,CAAA,GAAsB,mBAAXh2C,EAKZ,MAAMi8C,GAAY,sGAAuGnF,GAJzHiF,GAAS,EACTt+C,EAAKuC,EAKT,MAAO,CAAEo1C,KAAMA,EAAM33C,GAAIA,EAAIs+C,OAAQA,EAAQzkD,MAAOA,GAExD,SAAS+kD,GAAsB/hD,GAC3B,OAAO2hD,GAAY,mDAAoD3hD,GAuK3E,SAAS2hD,GAAYp6C,EAAMC,GACvB,OAAO,IAAI7G,MAAM2G,GAAYC,EAAMC,EAAK;;;;;;;OAqB5C,SAASi7C,GAAuB3lC,GAC5B,OAAIA,EAAKzhB,OAAS,EAGP,KAff,SAASqnD,EAAqB5lC,GAE1B,IADA,IAAIra,EAAM,GACDvH,EAAI,EAAGA,EAAI4hB,EAAKzhB,SAAUH,EAAG,CAClC,GAAIuH,EAAIG,QAAQka,EAAK5hB,KAAO,EAExB,OADAuH,EAAIpF,KAAKyf,EAAK5hB,IACPuH,EAEXA,EAAIpF,KAAKyf,EAAK5hB,IAElB,OAAOuH,EAIYigD,CAAqB5lC,EAAK/T,QAAQ45C,WACxBrgD,KAAI,SAAUk9B,GAAK,OAAOp9B,EAAUo9B,EAAEx/B,UACvCuC,KAAK,QAAU,IAEpC,GAEX,SAASqgD,GAAe78C,EAAUpK,EAAKknD,EAA2B99B,GAC9D,IAAIjI,EAAO,CAACnhB,GACRmnD,EAASD,EAA0B/lC,GACnCxf,EAASynB,EA73RjB,SAASg+B,EAAa17C,EAAS0d,GAC3B,IAAIpb,EAAMtC,EAAU,gBAAkB0d,aAAyBpkB,MAAQokB,EAAc1d,QAAU0d,GAC3FznB,EAAQqD,MAAMgJ,GAElB,OADArM,EAAMgnB,IAAwBS,EACvBznB;;;;;;;OAy3RsBylD,CAAaD,EAAQ/9B,GAAiBpkB,MAAMmiD,GAMzE,OALAxlD,EAAM0lD,OAASA,GACf1lD,EAAMwf,KAAOA,EACbxf,EAAM2lD,UAAY,CAACl9C,GACnBzI,EAAMulD,0BAA4BA,EAClCvlD,EAAMgnB,IAAwBS,EACvBznB,EAEX,SAAS0lD,GAAOj9C,EAAUpK,GACtB5B,KAAKkpD,UAAU5lD,KAAK0I,GACpBhM,KAAK+iB,KAAKzf,KAAK1B,GAEf5B,KAAKsN,QAAUtN,KAAK8oD,0BAA0B9oD,KAAK+iB,MA0HvD,SAASomC,GAAkBlK,EAAYmK,GAEnC,IADA,IAAIC,EAAY,GACPloD,EAAI,EAAGmoD,EAAKF,EAAO9nD,OAAQH,EAAImoD,EAAInoD,IAAK,CAC7C,IAAIooD,EAAYH,EAAOjoD,GAKnBkoD,EAAU/lD,KAJTimD,GAAiC,GAApBA,EAAUjoD,OAITioD,EAAUhhD,IAAIF,GAAWG,KAAK,KAH9B,KAMvB,OAAO5B,MAAM,sCAAyCyB,EAAU42C,GAAc,KAC1EoK,EAAU7gD,KAAK,MAAQ,2GAEvBH,EAAU42C,GAAc;;;;;;;;AA+DhC,IAAIuK,GAA+B,WAI/B,SAASA,EAAcvjD,EAAO2M,GAG1B,GAFA5S,KAAKiG,MAAQA,EACbjG,KAAK4S,GAAKA,GACL3M,EACD,MAAM,IAAIW,MAAM,0BAEpB5G,KAAKypD,YAAcphD,EAAUrI,KAAKiG,OAgBtC,OAXAujD,EAAc/8C,IAAM,SAAUxG,GAC1B,OAAOyjD,GAAmBj9C,IAAIvD,EAAkBjD,KAEpD7F,OAAO+B,eAAeqnD,EAAe,eAAgB,CAIjD/8C,IAAK,WAAc,OAAOi9C,GAAmBC,cAC7C9mB,YAAY,EACZC,cAAc,IAEX0mB,EA1BuB,GAiD9BE,GAAqB,IArBQ,WAC7B,SAASE,IACL5pD,KAAK6pD,SAAW,IAAI5F,IAiBxB,OAfA2F,EAAY/oD,UAAU4L,IAAM,SAAUxG,GAClC,GAAIA,aAAiBujD,GACjB,OAAOvjD,EACX,GAAIjG,KAAK6pD,SAASxD,IAAIpgD,GAClB,OAAOjG,KAAK6pD,SAASp9C,IAAIxG,GAE7B,IAAI6jD,EAAS,IAAIN,GAAcvjD,EAAOujD,GAAcG,cAEpD,OADA3pD,KAAK6pD,SAAStkB,IAAIt/B,EAAO6jD,GAClBA,GAEX1pD,OAAO+B,eAAeynD,EAAY/oD,UAAW,eAAgB,CACzD4L,IAAK,WAAc,OAAOzM,KAAK6pD,SAASp6C,MACxCozB,YAAY,EACZC,cAAc,IAEX8mB,EAnBqB,IA6E5BG,GAAY,IA3Ce,WAC3B,SAASC,EAAUrH,GACf3iD,KAAK2iD,uBAAyBA,EA2BlC,OAzBAqH,EAAUnpD,UAAUopD,mBAAqB,SAAUC,GAAQlqD,KAAK2iD,uBAAyBuH,GACzFF,EAAUnpD,UAAUxB,QAAU,SAAUoI,GAAQ,OAAOzH,KAAK2iD,uBAAuBtjD,QAAQoI,IAC3FuiD,EAAUnpD,UAAU2E,WAAa,SAAUy5C,GACvC,OAAOj/C,KAAK2iD,uBAAuBn9C,WAAWy5C,IAElD+K,EAAUnpD,UAAUq+C,YAAc,SAAUD,GACxC,OAAOj/C,KAAK2iD,uBAAuBzD,YAAYD,IAEnD+K,EAAUnpD,UAAUw+C,aAAe,SAAUJ,GACzC,OAAOj/C,KAAK2iD,uBAAuBtD,aAAaJ,IAEpD+K,EAAUnpD,UAAU8+C,iBAAmB,SAAUl4C,EAAMm4C,GACnD,OAAO5/C,KAAK2iD,uBAAuBhD,iBAAiBl4C,EAAMm4C,IAE9DoK,EAAUnpD,UAAUi/C,OAAS,SAAUh8C,GAAQ,OAAO9D,KAAK2iD,uBAAuB7C,OAAOh8C,IACzFkmD,EAAUnpD,UAAUk/C,OAAS,SAAUj8C,GAAQ,OAAO9D,KAAK2iD,uBAAuB5C,OAAOj8C,IACzFkmD,EAAUnpD,UAAUm/C,OAAS,SAAUl8C,GAAQ,OAAO9D,KAAK2iD,uBAAuB3C,OAAOl8C,IACzFkmD,EAAUnpD,UAAUo/C,UAAY,SAAUx4C,GAAQ,OAAOzH,KAAK2iD,uBAAuB1C,UAAUx4C,IAC/FuiD,EAAUnpD,UAAUq/C,YAAc,SAAUz4C,GAAQ,OAAOzH,KAAK2iD,uBAAuBzC,YAAYz4C,IACnGuiD,EAAUnpD,UAAUs/C,kBAAoB,SAAUr8C,EAAMs8C,EAAWC,EAASC,GACxE,OAAOtgD,KAAK2iD,uBAAuBxC,kBAAkBr8C,EAAMs8C,EAAWC,EAASC,IAEnF0J,EAAUnpD,UAAU0/C,YAAc,SAAU4J,EAAYrmD,GACpD,OAAO9D,KAAK2iD,uBAAuBpC,YAAY4J,EAAYrmD,IAExDkmD,EA7BmB,GA2Cd,CAAc,IAAIpM,IAa9BwM,GAAsC,WACtC,SAASA,EAAqBxoD,EAAKu/C,EAAUkJ,GACzCrqD,KAAK4B,IAAMA,EACX5B,KAAKmhD,SAAWA,EAChBnhD,KAAKqqD,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAU1oD,GACrC,OAAO,IAAIwoD,EAAqBxoD,GAAK,EAAO,OAEzCwoD,EAT8B,GAWrCG,GAAc,GACdC,GACA,SAASA,GAA4B5oD,EAAK6oD,EAAmB1C,GACzD/nD,KAAK4B,IAAMA,EACX5B,KAAKyqD,kBAAoBA,EACzBzqD,KAAK+nD,cAAgBA,EACrB/nD,KAAK0qD,gBAAkB1qD,KAAKyqD,kBAAkB,IAQlDE,GACA,SAASA,GAITtrD,EAIAurD,GACI5qD,KAAKX,QAAUA,EACfW,KAAK4qD,aAAeA,GAO5B,SAASC,GAAyBpI,GAC9B,IAAIqI,EACAC,EACJ,GAAItI,EAASd,SAAU,CACnB,IAAIA,EAAWz4C,EAAkBu5C,EAASd,UAC1CmJ,EAAYf,GAAU1qD,QAAQsiD,GAC9BoJ,EAAeC,GAAiBrJ,QAE3Bc,EAASJ,aACdyI,EAAY,SAAUG,GAAiB,OAAOA,GAC9CF,EAAe,CAACX,GAAqBE,QAAQd,GAAc/8C,IAAIg2C,EAASJ,gBAEnEI,EAASZ,YACdiJ,EAAYrI,EAASZ,WACrBkJ,EA6ER,SAASG,EAAsBjM,EAAY2L,GACvC,GAAKA,EAGA,CACD,IAAIO,EAAWP,EAAariD,KAAI,SAAUtH,GAAK,MAAO,CAACA,MACvD,OAAO2pD,EAAariD,KAAI,SAAUtH,GAAK,OAAOmqD,GAAcnM,EAAYh+C,EAAGkqD,MAJ3E,OAAOH,GAAiB/L,GA/ETiM,CAAsBzI,EAASZ,WAAYY,EAAS1B,QAGnE+J,EAAY,WAAc,OAAOrI,EAAS52C,UAC1Ck/C,EAAeR,IAEnB,OAAO,IAAII,GAA0BG,EAAWC,GAQpD,SAASM,GAA0B5I,GAC/B,OAAO,IAAI+H,GAA4BhB,GAAc/8C,IAAIg2C,EAAS92C,SAAU,CAACk/C,GAAyBpI,IAAYA,EAASuD,QAAS,GAKxI,SAASsF,GAA2BhkD,GAChC,IAEIikD,EAOR,SAASC,EAAiClkD,EAAWmkD,GACjD,IAAK,IAAItqD,EAAI,EAAGA,EAAImG,EAAUhG,OAAQH,IAAK,CACvC,IAAIshD,EAAWn7C,EAAUnG,GACrB8kD,EAAWwF,EAAuBh/C,IAAIg2C,EAAS7gD,IAAIgR,IACvD,GAAIqzC,EAAU,CACV,GAAIxD,EAASsF,gBAAkB9B,EAAS8B,cACpC,MA/OLnhD,MAAM,0DA+OmDq/C,EA/OqB,IA+OXxD,GAElE,GAAIA,EAASsF,cACT,IAAK,IAAI96C,EAAI,EAAGA,EAAIw1C,EAASgI,kBAAkBnpD,OAAQ2L,IACnDg5C,EAASwE,kBAAkBnnD,KAAKm/C,EAASgI,kBAAkBx9C,SAI/Dw+C,EAAuBlmB,IAAIkd,EAAS7gD,IAAIgR,GAAI6vC,OAG/C,CACD,IAAIoF,EAEAA,EADApF,EAASsF,cACU,IAAIyC,GAA4B/H,EAAS7gD,IAAK6gD,EAASgI,kBAAkBz7C,QAASyzC,EAASsF,eAG3FtF,EAEvBgJ,EAAuBlmB,IAAIkd,EAAS7gD,IAAIgR,GAAIi1C,IAGpD,OAAO4D,EAnCmBD,CAqC9B,SAASE,EAAoBpkD,EAAWoB,GAepC,OAdApB,EAAU6H,SAAQ,SAAUhP,GACxB,GAAIA,aAAam9C,GACb50C,EAAIpF,KAAK,CAAEqI,QAASxL,EAAGwhD,SAAUxhD,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B+G,IAAd/G,EAAEwL,QACpCjD,EAAIpF,KAAKnD,OAER,CAAA,IAAII,MAAM+H,QAAQnI,GAInB,MArWZ,SAASwrD,EAAqBlJ,GAC1B,OAAO77C,MAAM,4EAA8E67C,GAoW7EkJ,CAAqBxrD,GAH3BurD,EAAoBvrD,EAAGuI,OAMxBA,EAtDUgjD,CAAoBpkD,EAAW,IACtBiB,IAAI8iD,IACuC,IAAIpH,KACzE,OAAO1jD,MAAMqrD,KAAKL,EAAoBvmD,UA8D1C,SAASgmD,GAAiB/L,GACtB,IAAImK,EAASW,GAAUvkD,WAAWy5C,GAClC,IAAKmK,EACD,MAAO,GACX,GAAIA,EAAOyC,MAAK,SAAUrrD,GAAK,OAAY,MAALA,KAClC,MAAM2oD,GAAkBlK,EAAYmK,GAExC,OAAOA,EAAO7gD,KAAI,SAAU/H,GAAK,OAAO4qD,GAAcnM,EAAYz+C,EAAG4oD,MAEzE,SAASgC,GAAcnM,EAAYv8C,EAAU0mD,GACzC,IAAInjD,EAAQ,KACRk7C,GAAW,EACf,IAAK5gD,MAAM+H,QAAQ5F,GACf,OACWopD,GADPppD,aAAoBwD,EACKxD,EAASuD,MAGTvD,EAHgBy+C,EAAU,MAO3D,IADA,IAAIkJ,EAAa,KACRlpD,EAAI,EAAGA,EAAIuB,EAASpB,SAAUH,EAAG,CACtC,IAAI4qD,EAAgBrpD,EAASvB,GACzB4qD,aAAyBzO,GACzBr3C,EAAQ8lD,EAEHA,aAAyB7lD,EAC9BD,EAAQ8lD,EAAc9lD,MAEjB8lD,aAAyB5lD,EAC9Bg7C,GAAW,EAEN4K,aAAyB3lD,GAAQ2lD,aAAyB1lD,EAC/DgkD,EAAa0B,EAERA,aAAyB9gD,KAC9BhF,EAAQ8lD,GAIhB,GAAa,OADb9lD,EAAQiD,EAAkBjD,IAEtB,OAAO6lD,GAAkB7lD,EAAOk7C,EAAUkJ,GAG1C,MAAMlB,GAAkBlK,EAAYmK,GAG5C,SAAS0C,GAAkB7lD,EAAOk7C,EAAUkJ,GACxC,OAAO,IAAID,GAAqBZ,GAAc/8C,IAAIxG,GAAQk7C,EAAUkJ;;;;;;;OAWxE,IAmXI2B,GAnXAC,GAAY,IAAI7rD,OAsChB8rD,GAAoC,WACpC,SAASA,KA2FT,OAxDAA,EAAmB5hB,QAAU,SAAUhjC,GACnC,OAAOgkD,GAA2BhkD,IAyBtC4kD,EAAmBC,iBAAmB,SAAU7kD,EAAWuU,GACvD,IAAIuwC,EAA8BF,EAAmB5hB,QAAQhjC,GAC7D,OAAO4kD,EAAmBG,sBAAsBD,EAA6BvwC,IAyBjFqwC,EAAmBG,sBAAwB,SAAU/kD,EAAWuU,GAC5D,OAAO,IAAIywC,GAAoBhlD,EAAWuU,IAEvCqwC,EA5F4B,GA8FnCI,GAAqC,WAIrC,SAASA,EAAoBC,EAAYC,GAErCxsD,KAAKysD,qBAAuB,EAC5BzsD,KAAKusD,WAAaA,EAClBvsD,KAAK6b,OAAS2wC,GAAW,KACzB,IAAIE,EAAMH,EAAWjrD,OACrBtB,KAAK2sD,OAAS,GACd3sD,KAAK4sD,KAAO,GACZ,IAAK,IAAIzrD,EAAI,EAAGA,EAAIurD,EAAKvrD,IACrBnB,KAAK2sD,OAAOxrD,GAAKorD,EAAWprD,GAAGS,IAAIgR,GACnC5S,KAAK4sD,KAAKzrD,GAAK8qD,GAgJvB,OA7IAK,EAAoBzrD,UAAU4L,IAAM,SAAUxG,EAAO2G,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBxB,IACzCpL,KAAK6sD,UAAUrD,GAAc/8C,IAAIxG,GAAQ,KAAM2G,IAE1D0/C,EAAoBzrD,UAAUisD,sBAAwB,SAAUxlD,GAC5D,IAAI8kD,EAA8BF,GAAmB5hB,QAAQhjC,GAC7D,OAAOtH,KAAK+sD,wBAAwBX,IAExCE,EAAoBzrD,UAAUksD,wBAA0B,SAAUzlD,GAC9D,IAAI0lD,EAAM,IAAIV,EAAoBhlD,GAElC,OADA0lD,EAAInxC,OAAS7b,KACNgtD,GAEXV,EAAoBzrD,UAAUosD,sBAAwB,SAAUxK,GAC5D,OAAOziD,KAAKktD,oBAAoBhB,GAAmB5hB,QAAQ,CAACmY,IAAW,KAE3E6J,EAAoBzrD,UAAUqsD,oBAAsB,SAAUzK,GAC1D,OAAOziD,KAAKmtD,qBAAqB1K,IAErC6J,EAAoBzrD,UAAUusD,mBAAqB,SAAU7nD,GACzD,GAAIA,EAAQ,GAAKA,GAASvF,KAAKusD,WAAWjrD,OACtC,MAxhBZ,SAAS+rD,EAAiB9nD,GACtB,OAAOqB,MAAM,SAAWrB,EAAQ,sBAuhBlB8nD,CAAiB9nD,GAE3B,OAAOvF,KAAKusD,WAAWhnD,IAG3B+mD,EAAoBzrD,UAAUysD,KAAO,SAAU7K,GAC3C,GAAIziD,KAAKysD,uBAAyBzsD,KAAKutD,yBACnC,MAhpBZ,SAASC,EAAsBxhD,EAAUpK,GACrC,OAAOinD,GAAe78C,EAAUpK,GAAK,SAAUmhB,GAC3C,MAAO,wCAA0C2lC,GAAuB3lC,MA8oB9DyqC,CAAsBxtD,KAAMyiD,EAAS7gD,KAE/C,OAAO5B,KAAKmtD,qBAAqB1K,IAErC6J,EAAoBzrD,UAAU0sD,uBAAyB,WAAc,OAAOvtD,KAAK4sD,KAAKtrD,QACtFgrD,EAAoBzrD,UAAUssD,qBAAuB,SAAU1K,GAC3D,GAAIA,EAASsF,cAAe,CAExB,IADA,IAAIr/C,EAAM,GACDvH,EAAI,EAAGA,EAAIshD,EAASgI,kBAAkBnpD,SAAUH,EACrDuH,EAAIvH,GAAKnB,KAAKytD,aAAahL,EAAUA,EAASgI,kBAAkBtpD,IAEpE,OAAOuH,EAGP,OAAO1I,KAAKytD,aAAahL,EAAUA,EAASgI,kBAAkB,KAGtE6B,EAAoBzrD,UAAU4sD,aAAe,SAAUhL,EAAUkI,GAC7D,IAEI5J,EAWAtzC,EAbA0sC,EAAQn6C,KACRX,EAAUsrD,EAA0BtrD,QAExC,IACI0hD,EACI4J,EAA0BC,aAAariD,KAAI,SAAU04C,GAAO,OAAO9G,EAAMuT,2BAA2BzM,MAE5G,MAAO79C,GAIH,MAHIA,EAAE6lD,QACF7lD,EAAE6lD,OAAOjpD,KAAMyiD,EAAS7gD,KAEtBwB,EAGV,IACIqK,EAAMpO,EAAQmC,WAAM,EAAQgC,EAASu9C,IAEzC,MAAO39C,GACH,MAppBZ,SAASuqD,EAAmB3hD,EAAU4hD,EAAmBC,EAAejsD,GACpE,OAAOinD,GAAe78C,EAAUpK,GAAK,SAAUmhB,GAC3C,IAAI+qC,EAAQzlD,EAAU0a,EAAK,GAAG9c,OAC9B,OAAO2nD,EAAkBtgD,QAAU,mCAAqCwgD,EAAQ,IAAMpF,GAAuB3lC,GAAQ,MACtH6qC,GAgpBWD,CAAmB3tD,KAAMoD,EAAGA,EAASq/C,EAAS7gD,KAExD,OAAO6L,GAEX6+C,EAAoBzrD,UAAU6sD,2BAA6B,SAAUzM,GACjE,OAAOjhD,KAAK6sD,UAAU5L,EAAIr/C,IAAKq/C,EAAIoJ,WAAYpJ,EAAIE,SAAW,KAAO/1C,KAEzEkhD,EAAoBzrD,UAAUgsD,UAAY,SAAUjrD,EAAKyoD,EAAYz9C,GACjE,OAAIhL,IAAQ0qD,EAAoByB,aACrB/tD,KAEPqqD,aAAsBjkD,EACfpG,KAAKguD,cAAcpsD,EAAKgL,GAGxB5M,KAAKiuD,iBAAiBrsD,EAAKgL,EAAey9C,IAGzDiC,EAAoBzrD,UAAUqtD,eAAiB,SAAUC,GACrD,IAAK,IAAIhtD,EAAI,EAAGA,EAAInB,KAAK2sD,OAAOrrD,OAAQH,IACpC,GAAInB,KAAK2sD,OAAOxrD,KAAOgtD,EAInB,OAHInuD,KAAK4sD,KAAKzrD,KAAO8qD,KACjBjsD,KAAK4sD,KAAKzrD,GAAKnB,KAAKstD,KAAKttD,KAAKusD,WAAWprD,KAEtCnB,KAAK4sD,KAAKzrD,GAGzB,OAAO8qD,IAGXK,EAAoBzrD,UAAUutD,aAAe,SAAUxsD,EAAKgL,GACxD,GAAIA,IAAkBxB,GAClB,OAAOwB,EAGP,MA9uBZ,SAASyhD,EAAgBriD,EAAUpK,GAC/B,OAAOinD,GAAe78C,EAAUpK,GAAK,SAAUmhB,GAE3C,MAAO,mBADK1a,EAAU0a,EAAK,GAAG9c,OACM,IAAMyiD,GAAuB3lC,MA2uBvDsrC,CAAgBruD,KAAM4B,IAIpC0qD,EAAoBzrD,UAAUmtD,cAAgB,SAAUpsD,EAAKgL,GACzD,IAAIa,EAAMzN,KAAKkuD,eAAetsD,EAAIgR,IAClC,OAAQnF,IAAQw+C,GAAax+C,EAAMzN,KAAKouD,aAAaxsD,EAAKgL,IAG9D0/C,EAAoBzrD,UAAUotD,iBAAmB,SAAUrsD,EAAKgL,EAAey9C,GAC3E,IAAI2C,EAOJ,IALIA,EADA3C,aAAsBhkD,EAChBrG,KAAK6b,OAGL7b,KAEHgtD,aAAeV,GAAqB,CACvC,IAAIgC,EAAOtB,EACPv/C,EAAM6gD,EAAKJ,eAAetsD,EAAIgR,IAClC,GAAInF,IAAQw+C,GACR,OAAOx+C,EACXu/C,EAAMsB,EAAKzyC,OAEf,OAAY,OAARmxC,EACOA,EAAIvgD,IAAI7K,EAAIqE,MAAO2G,GAGnB5M,KAAKouD,aAAaxsD,EAAKgL,IAGtCxM,OAAO+B,eAAemqD,EAAoBzrD,UAAW,cAAe,CAChE4L,IAAK,WAGD,MAAO,kCASnB,SAAS8hD,EAAcviD,EAAU5C,GAE7B,IADA,IAAIV,EAAM,GACDvH,EAAI,EAAGA,EAAI6K,EAASugD,WAAWjrD,SAAUH,EAC9CuH,EAAIvH,GAAKiI,EAAG4C,EAASohD,mBAAmBjsD,IAE5C,OAAOuH;;;;;;;;;;;;;;;;;;;;;OAhBiB6lD,CAAcvuD,MAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEyB,IAAI6nD,YAAc,QAChFjhD,KAAK,MAC6C,MAE3Dq6B,YAAY,EACZC,cAAc,IAElBwpB,EAAoBzrD,UAAU8H,SAAW,WAAc,OAAO3I,KAAKypD,aACnE6C,EAAoByB,aAAevE,GAAc/8C,IAAI06C,IAC9CmF,EA9J6B,GAoOpCkC,GAA+B,IAAIvjD,GAAe,6BA2BlDwjD,GAAkBhpD,EAAkB,mBAX7B,SAAU6zB,EAAU7mB,GAE3B,YADa,IAATA,IAAmBA,EAAO,IACtB1R,EAAS,CAAEu4B,SAAUA,EAAUw0B,OAAO,EAAOY,aAAa,EAAOC,aAAa,GAASl8C,KAP/Fu5C,GACA,SAASA,QA4BT4C,GAAenpD,EAAkB,gBAZ1B,SAAU6zB,EAAU7mB,GAE3B,YADa,IAATA,IAAmBA,EAAO,IACtB1R,EAAS,CAAEu4B,SAAUA,EAAUw0B,OAAO,EAAMY,aAAa,EAAOC,aAAa,GAAQl8C,KAUtCu5C,IAWvD6C,GAAeppD,EAAkB,gBAV5B,SAAU6zB,EAAU7mB,GAEzB,YADa,IAATA,IAAmBA,EAAO,IACtB1R,EAAS,CAAEu4B,SAAUA,EAAUw0B,OAAO,EAAOY,aAAa,EAAMC,aAAa,GAAQl8C,KAQxCu5C,IAUrD8C,GAAYrpD,EAAkB,aATzB,SAAU6zB,EAAU7mB,GACzB,OAAQ1R,EAAS,CAAEu4B,SAAUA,EAAUw0B,OAAO,EAAMY,aAAa,EAAMC,aAAa,GAAQl8C,KAQ7Cu5C;;;;;;;;AAyCnD,SAAS+C,GAA0BC,GAE/B,IAAIC,EAAoB,GAEpBC,EAAS,IAAIjL,IACjB,SAASkL,EAAsBngC,GAC3B,IAAIogC,EAAUF,EAAOziD,IAAIuiB,GACzB,IAAKogC,EAAS,CACV,IAAIC,EAAOL,EAAiBhgC,GAC5BkgC,EAAO3pB,IAAIvW,EAAKogC,EAAUC,EAAKC,KAAKC,KAExC,OAAOH,EA0BX,OAxBAI,GAAiCrgD,SAAQ,SAAUomB,EAAW9tB,GAC1D,IAAIgoD,EAAW,GACXl6B,EAAUm6B,aACVD,EAASnsD,KAAK6rD,EAAsB55B,EAAUm6B,aAAaJ,MAAK,SAAU5+C,GACtE6kB,EAAU7kB,SAAWA,MAG7B,IAAIi/C,EAAYp6B,EAAUo6B,UACtB98C,EAAS0iB,EAAU1iB,SAAW0iB,EAAU1iB,OAAS,IACjD+8C,EAAcr6B,EAAU1iB,OAAOvR,OACnCquD,GAAaA,EAAUxgD,SAAQ,SAAU0gD,EAAUtqD,GAC/CsN,EAAOvP,KAAK,IACZmsD,EAASnsD,KAAK6rD,EAAsBU,GAAUP,MAAK,SAAU9vB,GACzD3sB,EAAO+8C,EAAcrqD,GAASi6B,EAC9BmwB,EAAUtgD,OAAOsgD,EAAU9mD,QAAQgnD,GAAW,GACtB,GAApBF,EAAUruD,SACVi0B,EAAUo6B,eAAYzoD,UAIlC,IAAI4oD,EAAgBzlB,QAAQ0lB,IAAIN,GAAUH,MAAK,WAAc,OAsCrE,SAASU,EAAqBvoD,GAC1BwoD,GAA8BC,OAAOzoD;;;;;;;OAvCmCuoD,CAAqBvoD,MACzFwnD,EAAkB3rD,KAAKwsD,MAE3BK,KACO9lB,QAAQ0lB,IAAId,GAAmBK,MAAK,eAE/C,IAAIE,GAAmC,IAAIvL,IAEvCgM,GAAgC,IAAI9L,IAUxC,SAASiM,GAAyB76B,GAC9B,SAAWA,EAAUm6B,cAAgBn6B,EAAU90B,eAAe,aAC1D80B,EAAUo6B,WAAap6B,EAAUo6B,UAAUruD,QAEnD,SAAS6uD,KACL,IAAIE,EAAMb,GAEV,OADAA,GAAmC,IAAIvL,IAChCoM,EAUX,SAASd,GAAe1hC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASrgB,OAoB7D,SAAS8iD,GAAgB31C,GACrB,IAAIlC,EAAQD,KACRvF,EAAQwF,EAAMtD,IACblC,EAAMsT,kBASf,SAASgqC,EAAyBt9C,EAAOpL,EAAK2oD,GAG1C,IAAI3iB,EAAU56B,EAAMm0B,oBAChB9lC,EAASusC,EAAQvsC,OAMjBA,GAAU,GAAKusC,EAAQvsC,EAAS,KAAOuG,EAAIgJ,aAC3Cg9B,EAAQvsC,EAAS,GAAKusC,EAAQvsC,EAAS,GAAKkvD,EAG5C3iB,EAAQvqC,KAAKuE,EAAIgJ,aAAc2/C,GArBnCD,CAAyBt9C,EA10X7B,SAASw9C,IACL,OAAO54C,GAAiBC,OAAOM,oBAy0XCq4C,GAA0B91C,GA6B9D,SAAS+1C,EAAgBz9C,EAAOwF,EAAOk4C,GAGnC,IAAK,IAAIxvD,EAAI,EAAGA,EAAIwvD,EAAexvD,IAC/BsX,EAAMnV,KAAKqc,IACX1M,EAAMyT,UAAUpjB,KAAKqc,IACrB1M,EAAMR,KAAKnP,KAAK;;;;;;;OAlCpBotD,CAAgBz9C,EAAOwF,EAAOkC,IA6ClC,IAAIi2C,GAAkB,KACtB,SAASC,KACL,IAAKD,GAAiB,CAClB,IAAIE,EAAWhnD,EAAgB,OAC/B,GAAIgnD,GAAYA,EAAS/tD,SACrB6tD,GAAkBE,EAAS/tD,cAK3B,IADA,IAAIggB,EAAO3iB,OAAO2wD,oBAAoB9M,IAAIpjD,WACjCM,EAAI,EAAGA,EAAI4hB,EAAKzhB,SAAUH,EAAG,CAClC,IAAIS,EAAMmhB,EAAK5hB,GACH,YAARS,GAA6B,SAARA,GACrBqiD,IAAIpjD,UAAUe,KAASqiD,IAAIpjD,UAAmB,UAC9C+vD,GAAkBhvD,IAKlC,OAAOgvD;;;;;;;;;;;;;;;AAyDX,SAASI,GAAevvC,EAAGthB,GACvB,OAAOshB,IAAMthB,GAAkB,iBAANshB,GAA+B,iBAANthB,GAAkB8wD,MAAMxvC,IAAMwvC,MAAM9wD;;;;;;;;AA2B1F,SAAS+wD,GAAezvC,EAAGthB,GACvB,IAAIgxD,EAAsBC,GAAqB3vC,GAC3C4vC,EAAsBD,GAAqBjxD,GAC/C,OAAIgxD,GAAuBE,EAwD/B,SAASC,EAAoB7vC,EAAGthB,EAAGoxD,GAG/B,IAFA,IAAIC,EAAY/vC,EAAEovC,QACdY,EAAYtxD,EAAE0wD,UACL,CACT,IAAIa,EAAQF,EAAUxuD,OAClB2uD,EAAQF,EAAUzuD,OACtB,GAAI0uD,EAAMxuD,MAAQyuD,EAAMzuD,KACpB,OAAO,EACX,GAAIwuD,EAAMxuD,MAAQyuD,EAAMzuD,KACpB,OAAO,EACX,IAAKquD,EAAWG,EAAMzuD,MAAO0uD,EAAM1uD,OAC/B,OAAO,GAlEJquD,CAAoB7vC,EAAGthB,EAAG+wD,MAK5BC,IAFW1vC,GAAmB,iBAANA,GAA+B,mBAANA,GAEZ4vC,IAD1BlxD,GAAmB,iBAANA,GAA+B,mBAANA,IAK3C6wD,GAAevvC,EAAGthB,GAwBrC,IAAIyxD,GAA8B,WAC9B,SAASA,EAAa3uD,GAClBjD,KAAK6xD,QAAU5uD,EAWnB,OARA2uD,EAAaE,KAAO,SAAU7uD,GAAS,OAAO,IAAI2uD,EAAa3uD,IAK/D2uD,EAAaG,OAAS,SAAU9uD,GAAS,OAAO2uD,EAAaI,UAAU/uD,GAASA,EAAM4uD,QAAU5uD,GAEhG2uD,EAAaI,UAAY,SAAU/uD,GAAS,OAAOA,aAAiB2uD,GAC7DA,EAbsB,GAejC,SAASR,GAAqB3jD,GAC1B,QAAKwkD,GAAaxkD,KAEXlN,MAAM+H,QAAQmF,MACdA,aAAew2C,MACd4M,OAAuBpjD,GA8BnC,SAASwkD,GAAarvD,GAClB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA;;;;;;;OAY5D,SAASsvD,GAAcz5C,EAAO8B,EAActX,GACxC,OAAOwV,EAAM8B,GAAgBtX,EAGjC,SAASkvD,GAAW15C,EAAO8B,GAIvB,OAAO9B,EAAM8B,GAGjB,SAAS63C,GAAe35C,EAAO8B,EAActX,GAKzC,OAAI7C,OAAOwhB,GADInJ,EAAM8B,GACGtX,KAYpBwV,EAAM8B,GAAgBtX,GACf,GAIf,SAASovD,GAAgB55C,EAAO8B,EAAc+3C,EAAMC,GAChD,IAAIC,EAAYJ,GAAe35C,EAAO8B,EAAc+3C,GACpD,OAAOF,GAAe35C,EAAO8B,EAAe,EAAGg4C,IAASC,EAG5D,SAASC,GAAgBh6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,GACtD,IAAIF,EAAYH,GAAgB55C,EAAO8B,EAAc+3C,EAAMC,GAC3D,OAAOH,GAAe35C,EAAO8B,EAAe,EAAGm4C,IAASF,EAG5D,SAASG,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GAC5D,IAAIJ,EAAYH,GAAgB55C,EAAO8B,EAAc+3C,EAAMC,GAC3D,OAAOF,GAAgB55C,EAAO8B,EAAe,EAAGm4C,EAAME,IAASJ;;;;;;;OAuBnE,SAASK,GAAY/uD,EAAMb,EAAOyZ,EAAWguB,GACzC,IAAIjyB,EAAQD,KAIZ,OAHI45C,GAAe35C,EAAOgC,KAAoBxX,IAC1CquC,GAAyBl1B,KAAoBtY,EAAMb,EAAOwV,EAAOiE,EAAWguB,GAEzEmoB;;;;;;;OAsBX,SAASC,GAAer6C,EAAOzT,GAK3B,IAFA,IAAI+tD,GAAmB,EACnBx4C,EAAeD,KACVnZ,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EAEpC4xD,EAAmBX,GAAe35C,EAAO8B,IAAgBvV,EAAO7D,KAAO4xD,EAG3E,GADAv4C,GAAgBD,IACXw4C,EACD,OAAOpzC,GAGX,IAAI0T,EAAUruB,EAAO,GACrB,IAAS7D,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EACpCkyB,GAAWxU,GAAgB7Z,EAAO7D,IAAM6D,EAAO7D,EAAI,GAEvD,OAAOkyB,EASX,SAAS2/B,GAAev6C,EAAO8qB,EAAQ0vB,EAAIC,GAEvC,OADgBd,GAAe35C,EAAOgC,KAAoBw4C,GACvC1vB,EAAS1kB,GAAgBo0C,GAAMC,EAASvzC,GAK/D,SAASwzC,GAAe16C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAC/C,IACIV,EAAYH,GAAgB55C,EADb6B,KACkC24C,EAAII,GAEzD,OADA34C,GAAsB,GACf83C,EAAYjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAMH,EAASvzC,GAK1F,SAAS2zC,GAAe76C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GACvD,IACIV,EAAYC,GAAgBh6C,EADb6B,KACkC24C,EAAII,EAAIG,GAE7D,OADA94C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAMN,EACrFvzC,GAKR,SAAS8zC,GAAeh7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAC/D,IACIV,EAAYG,GAAgBl6C,EADb6B,KACkC24C,EAAII,EAAIG,EAAIG,GAEjE,OADAj5C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAME,EACjF70C,GAAgB80C,GAAMT,EAC1BvzC,GAKR,SAASi0C,GAAen7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GACvE,IAAI34C,EAAeD,KACfk4C,EAAYG,GAAgBl6C,EAAO8B,EAAc04C,EAAII,EAAIG,EAAIG,GAGjE,OAFAnB,EAAYJ,GAAe35C,EAAO8B,EAAe,EAAGu5C,IAAOtB,EAC3D93C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAME,EACjF70C,GAAgB80C,GAAME,EAAKh1C,GAAgBi1C,GAAMZ,EACrDvzC,GAKR,SAASo0C,GAAet7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAC/E,IAAI34C,EAAeD,KACfk4C,EAAYG,GAAgBl6C,EAAO8B,EAAc04C,EAAII,EAAIG,EAAIG,GAGjE,OAFAnB,EAAYH,GAAgB55C,EAAO8B,EAAe,EAAGu5C,EAAIG,IAAOzB,EAChE93C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAME,EACjF70C,GAAgB80C,GAAME,EAAKh1C,GAAgBi1C,GAAME,EAAKn1C,GAAgBo1C,GAAMf,EAChFvzC,GAKR,SAASu0C,GAAez7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GACvF,IAAI34C,EAAeD,KACfk4C,EAAYG,GAAgBl6C,EAAO8B,EAAc04C,EAAII,EAAIG,EAAIG,GAGjE,OAFAnB,EAAYC,GAAgBh6C,EAAO8B,EAAe,EAAGu5C,EAAIG,EAAIG,IAAO5B,EACpE93C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAME,EACjF70C,GAAgB80C,GAAME,EAAKh1C,GAAgBi1C,GAAME,EAAKn1C,GAAgBo1C,GAAME,EAC5Et1C,GAAgBu1C,GAAMlB,EAC1BvzC,GAKR,SAAS00C,GAAe57C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAC/F,IAAI34C,EAAeD,KACfk4C,EAAYG,GAAgBl6C,EAAO8B,EAAc04C,EAAII,EAAIG,EAAIG,GAGjE,OAFAnB,EAAYG,GAAgBl6C,EAAO8B,EAAe,EAAGu5C,EAAIG,EAAIG,EAAIG,IAAO/B,EACxE93C,GAAsB,GACf83C,EACHjvB,EAAS1kB,GAAgBo0C,GAAMG,EAAKv0C,GAAgBw0C,GAAME,EAAK10C,GAAgB20C,GAAME,EACjF70C,GAAgB80C,GAAME,EAAKh1C,GAAgBi1C,GAAME,EAAKn1C,GAAgBo1C,GAAME,EAC5Et1C,GAAgBu1C,GAAME,EAAKz1C,GAAgB01C,GAAMrB,EACrDvzC,GA2BR,SAAS60C,GAAwB72C,EAAU4lB,EAAQ0vB,EAAIC,EAAQx2C,EAAWguB,GACtE,IAAIjyB,EAAQD,KACRi8C,EAAoBzB,GAAev6C,EAAO8qB,EAAQ0vB,EAAIC,GAI1D,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzF8pB,GA4BX,SAASE,GAAwB/2C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIH,EAAQx2C,EAAWguB,GAC9E,IAAIjyB,EAAQD,KACRi8C,EAAoBtB,GAAe16C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAIlE,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFgqB,GA+BX,SAASC,GAAwBh3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQx2C,EAAWguB,GACtF,IAAIjyB,EAAQD,KACRi8C,EAAoBnB,GAAe76C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAI1E,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFiqB,GAiCX,SAASC,GAAwBj3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQx2C,EAAWguB,GAC9F,IAAIjyB,EAAQD,KACRi8C,EAAoBhB,GAAeh7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAIlF,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFkqB,GAmCX,SAASC,GAAwBl3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQx2C,EAAWguB,GACtG,IAAIjyB,EAAQD,KACRi8C,EAAoBb,GAAen7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAI1F,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFmqB,GAqCX,SAASC,GAAwBn3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQx2C,EAAWguB,GAC9G,IAAIjyB,EAAQD,KACRi8C,EAAoBV,GAAet7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAIlG,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFoqB,GAuCX,SAASC,GAAwBp3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQx2C,EAAWguB,GACtH,IAAInlC,EAAQ6W,KACR3D,EAAQD,KACRi8C,EAAoBP,GAAez7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAI1G,OAHIuB,IAAsB90C,IACtB2xB,GAAyB/rC,EAAOoY,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAE5EqqB,GAyCX,SAASC,GAAwBr3C,EAAU4lB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQx2C,EAAWguB,GAC9H,IAAIjyB,EAAQD,KACRi8C,EAAoBJ,GAAe57C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAIlH,OAHIuB,IAAsB90C,IACtB2xB,GAAyBl1B,KAAoBuB,EAAU82C,EAAmBh8C,EAAOiE,EAAWguB,GAEzFsqB,GA4BX,SAASC,GAAwBt3C,EAAU3Y,EAAQ0X,EAAWguB,GAC1D,IAAIjyB,EAAQD,KACR08C,EAAepC,GAAer6C,EAAOzT,GAIzC,OAHIkwD,IAAiBv1C,IACjB2xB,GAAyBl1B,KAAoBuB,EAAUu3C,EAAcz8C,EAAOiE,EAAWguB,GAEpFuqB;;;;;;;OA2CX,SAASE,GAAU5/B,IAz8JnB,SAAS6/B,EAAahjB,EAAa9lC,GAC/B,IAGQ+oD,EAHJC,EAAyC,IAAtBljB,EAAY9lC,MACnC8lC,EAAY9lC,OAASA,EACjBgpD,GAAoBljB,EAAYmjB,OAASnrB,KAEzCgI,EAAYmjB,MAAQ,IAAIlrB,SAAQ,SAAUtoC,GAAK,OAAOszD,EAAQtzD,KAC9DqwC,EAAYojB,WAAU,WAKlB,GAJwB,EAApBpjB,EAAY9lC,QACZ8lC,EAAY9lC,QAAS,EACrB6lC,GAAgBC,IAEI,EAApBA,EAAY9lC,MAA8B,CAC1C8lC,EAAY9lC,QAAS,EACrB,IAAImpD,EAAgBrjB,EAAYqjB,cAC5BA,GACAA,EAAcC,eAGtBtjB,EAAYmjB,MAAQnrB,GACpBirB,EAAM,UA07JdD,CAFeljB,GAAc3b,GAA2BhB,IAElC7f,IAAU;;;;;;;;AAsCpC,SAASigD,GAAYpwD,GACjB,IAAIkT,EAAQD,KACR1B,EAAQ8+C,GAAkBn9C,EAAOlT,EAAO,KAAM,MAC9CkT,EAAMtD,IAAOoR,kBACbzP,EAAMixB,OAAS,IAEnBhuB,KAqBJ,SAAS87C,GAAWtwD,EAAOimC,EAAYh7B,EAAOC,EAAMuhB,EAAS8jC,EAAYC,EAAgB/nB,GACrF,IAAIv1B,EAAQD,KACRvF,EAAQwF,EAAMtD,IACd6gD,EAAc/iD,EAAMtC,OAEpBslD,EAAiBL,GAAkBn9C,EAAOlT,EAAOysB,GAAW,KAAM5M,GAAY4wC,EAAaF,IAC3Fx/B,EAAYlR,GAAY4wC,EAAaD,GACzC,GAAI9iD,EAAMsT,gBAAiB,CAEvBmpB,GAAkBz8B,EAAOwF,EAAOw9C,EAAgB3/B,GAChDiB,GAAuBtkB,EAAOgjD,GAC9B,IAAI/pB,EAAgB+pB,EAAeluB,OAASoG,GAAY,GAAmB,EAAG3C,EAAYh7B,EAAOC,EAAMwC,EAAMu0B,kBAAmBv0B,EAAMw0B,aAAc,KAAMx0B,EAAMD,QAASgjD,GACrKE,EAAoB/qB,GAAYl4B,EAAO,KAAM,GAAe,EAAG,KAAM,MACzEijD,EAAkB1vC,cAAgByvC,EAAezvC,cACjD0lB,EAAc7Z,KAAO6jC,EACC,OAAlBjjD,EAAMi0B,UACNj0B,EAAMi0B,QAAQx2B,SAASuC,EAAOgjD,GAC9B/pB,EAAchF,QAAUj0B,EAAMi0B,QAAQgF,cAAc+pB,IAGxDj/C,GAAgBi/C,IAChB3oB,GAA0Br6B,EAAOwF,EAAOw9C,GAE3B,MAAb3/B,GACAyX,GAAyBt1B,EAAOw9C,EAAgBjoB,GAEpDj0B,KASJ,SAASo8C,GAAwB5wD,GAC7B,IAAIkT,EAAQD,KACRvF,EAAQwF,EAAMtD,IAOlB,GAJAwE,GAF4BiL,GAAK3R,EAAMR,KAAMlN,IAEG,GAChDkT,EAAMlT,EAAQ6Q,IAAeE,IAAgB,GAGxC0D,KAED,GAD8E,IAAhC,EAAfvB,EAAMrD,KACR,CACzB,IAAIkiB,EAAqBrkB,EAAMqkB,mBACJ,OAAvBA,GACAQ,GAAkBrf,EAAO6e,EAAoB,UAGhD,CACD,IAAID,EAAgBpkB,EAAMokB,cACJ,OAAlBA,GACAY,GAAyBxf,EAAO4e,EAAe,EAA4B,MAE/Ec,GAAwB1f,EAAO,IAW3C,SAAS29C,KACL,IAAI18C,EAAwBD,KACxBK,KACAC,KAMAJ,GADAD,EAAwBA,EAAsBmC,QACE,GAMpD,IAHA,IAAI83B,EAAan7B,KAAWkB,EAAsBnU,OAC9C8wD,EAAY1iB,EAAWr9B,IAEpB+/C,EAAY1iB,EAAWryC,OAASoV,IACnC4+B,GAAW3B,EAAY0iB,GAG/B,SAAST,GAAkBn9C,EAAOqM,EAAWkN,EAASxU,GAElD,IAAIytB,EAAgBnmB,EAAY1O,GAG5BkgD,EAAU79C,EAAMwyB,GAChBxyB,EAAM5C,IAAUgnC,cAAwC,IACxD/lC,EAAQk0B,GAAiBvyB,EAAMtD,IAAQsD,EAAMjD,IAASsP,EAAW,EAAmBkN,EAASxU,GAC7Fm2B,EAAal7B,EAAMwyB,GAAiB0G,GAAiB2kB,EAAS79C,EAAO69C,EAASx/C,GAOlF,OANA+V,GAAYypC,EAASx/C,EAAO2B,GAC5B0d,GAAgBmgC,EAAS79C,GAGzB44B,GAAc54B,EAAOk7B,GAEd78B;;;;;;;OAWX,SAASy/C,GAAMhxD,EAAOtC,GAClB,IAAIwV,EAAQD,KACRvF,EAAQwF,EAAMtD,IAGd81B,EAAgB1lC,EAAQ6Q,GACxB60B,GAAiBh4B,EAAMR,KAAKnR,SAC5B2R,EAAMR,KAAKw4B,GAAiB,KAC5Bh4B,EAAMyT,UAAUukB,GAAiB,MAErCxyB,EAAMwyB,GAAiBhoC,EAY3B,SAASuzD,GAAYjxD,GAEjB,OAAOqf,GAjrZX,SAAS6xC,IACL,OAAO5+C,GAAiBC,OAAO0B,aA+qZZi9C,GACOlxD;;;;;;;OAU9B,SAASmxD,GAAkBzwD,EAAOqG,QAChB,IAAVA,IAAoBA,EAAQhN,EAAQyG,YAAYwG,SACpDtG,EAAQiD,EAAkBjD,GAC1B,IAAIwS,EAAQD,KAGZ,OAAa,MAATC,EACO/L,GAASzG,EAAOqG,GACpBub,GAAsBpO,KAA4BhB,EAAOxS,EAAOqG,GAO3E,SAASqqD,GAAkBjvC,GACvB,OAAOD,GAAoBhO,KAA4BiO,GAc3D,SAASkvC,KAEL,MAAM,IAAIhwD,MAD+E,WA6B7F,SAASiwD,GAAiBn6C,GACtBD,GAAyBC,GAuB7B,SAASo6C,GAAY9zC,EAAM/f,EAAOiwD,GAC9B6D,GAAkB36C,KAAoB4G,EAAM/f,EAAOiwD,GAQvD,SAAS6D,GAAkBj+C,EAAckK,EAAM/f,EAAOiwD,GAKlD,IAAI34C,EAAeE,KACfhC,EAAQD,KACR1B,EAAQ4N,GAAS5L,EAAcL,GAC/B6H,EAAkB7H,EAAMtD,IAAOmL,gBAI/BA,IACAG,GAAY3J,EAAO,OACnBkgD,GAAqBlgD,EAAOmgD,MAAiB,IAEnCC,GAAYpgD,EAAOwJ,EAAiB7H,EAAO8B,EAAcyI,EAqZ3E,SAASm0C,EAAsBl0D,EAAOiwD,GAClC,GAAIjwD,IAAU0c,GACV,OAAO1c,EACX,IAAIm0D,EAAgB,KAepB,OAdc,OAAVn0D,IAIIm0D,EAHAlE,EAGgBr0C,GAAgB5b,GAASiwD,EAOzBjwD,GAGjBm0D,EAvasED,CAAsBl0D,EAAOiwD,IAAS,GAuBvH,SAASmE,GAAYz3B,EAAW38B,GAK5B,IAAIsX,EAAeE,KACfhC,EAAQD,KAER1B,EAAQ4N,GADOtI,KACgB3D,GAC/B6H,EAAkB7H,EAAMtD,IAAOmL,gBAI/BA,IACAG,GAAY3J,EAAO,MACnBkgD,GAAqBlgD,EAAOmgD,MAAiB,IAEnCC,GAAYpgD,EAAOwJ,EAAiB7H,EAAO8B,EAAcqlB,EAAW38B,GAAO,GAkB7F,SAASi0D,GAAYpgD,EAAOwJ,EAAiB7H,EAAO8B,EAAcyI,EAAM/f,EAAOod,GAC3E,IAAIi3C,GAAU,EACV/5C,EAASiH,GAAiB1N,EAAO2B,GACjC7K,EAAUyS,EAAek3C,GAAkBzgD,GAAS0gD,GAAiB1gD,GACrE4F,EAAY2D,EAAe,KAAO1D,KAatC,GAAIyD,GAAmBtJ,EAAOuJ,EAAcC,GAAkB,CAC1D,IAAIm3C,EAAiBp3C,EAAe,KAAO3D,EAE3C46C,EAh+QR,SAASI,EAA0Bz6C,EAAUrP,EAASkJ,EAAOqI,EAAS1M,EAAM8H,EAAcyI,EAAM/f,EAAOod,EAAc3D,GACjH,IAAIgH,GAAU,EACd,GAAIlC,GAAgB/O,EAAK8H,GAAetX,GAAQ,CAC5Cme,GAAS3O,EAAM8H,EAActX,GAC7B,IAAIk8B,EAAU9e,EAAesf,GAAWN,GAKxC,KAHA3b,EAAUwb,GAAkBjiB,EAAUkC,EAAS6D,EAAM/f,EAAOk8B,EAAS5kB,EAAcmC,KAGnEyD,GAAUrJ,EADJuJ,EAAe,IAAgC,OAClB,CAC/C,IACI9X,EADAkzB,EAAQN,GAAgBhc,EAASU,IAErC6D,KADInb,EAAM8X,EAAeob,EAAMV,mBAAqBU,EAAMT,qBAEtDoE,GAAqBniB,EAAUkC,EAASggB,EAAS52B,EAAKya,EAAMzI,EAAcmC,IAI7EgH,GAAWvD,GAAUrJ,EAAO,OAE7B4M,KADInb,EAAM4Z,GAAmBvU,KAEnBwxB,GAAqBniB,EAAUkC,EAASggB,EAAS52B,EAAKya,EAAMzI,IAGrEmJ,GACDyb,EAAQliB,EAAUkC,EAAS6D,EAAM,KAAMzI,GAG/C,OAAOmJ,EAq8QOg0C,CADKC,GAAY7gD,EAAO2B,GACY7K,EAASkJ,EAAOyG,EAAQ9E,EAAO8B,EAAcyI,EAAM/f,EAAOod,EAAco3C,GAClHA,GAIAv+C,GAAiB0+C,QAGpB,CAID,IAAI3gC,EAAiB7d,KAEjBk+C,EADAj3C,EACUib,GAAsB1tB,EAASkJ,EAAO2B,EAAO8E,EAAQ0Z,EAAgBjU,EAAMzI,EAActX,GAAO,EAAOqd,GAGvGsb,GAAsBhuB,EAASkJ,EAAO2B,EAAO8E,EAAQ0Z,EAAgBjU,EAAMzI,EAActX,EAAOyZ,GAAW,EAAO4D,GAEhIpH,GAAiB0+C,IAErB,OAAON,EAqBX,SAASO,GAAWhlD,GAChB,IAAItN,EAAQ6W,KACR3D,EAAQD,KACR1B,EAAQ4N,GAASnf,EAAOkT,GACxB6H,EAAkB7H,EAAMtD,IAAOmL,gBAC/B1S,EAAU4pD,GAAiB1gD,GAC3BghD,EAAoBv1C,GAAczL,GAKlCyD,EAAeG,GAAsB,IAClBu8C,MAIEa,GAAqBjlD,IAAW8M,KACrDo4C,GAA0BnqD,EAAS6K,EAAO3B,EAAOyD,EAAc1H,GAAQ,EAAOyN,GAC9EzN,EAAS8M,IAKTW,IACAG,GAAY3J,EAAO,OACnBkgD,GAAqBlgD,EAAOmgD,MAAiB,IAEjDv6B,GAAW9uB,EAASkJ,EAAOwJ,EAAiB7H,EAAO8B,EAAc1H,GAAQ,EAAOilD,GAoBpF,SAASE,GAAWrwC,GAChBswC,GAAiB77C,KAAoBuL,GAQzC,SAASswC,GAAiBn/C,EAAc6O,GACpC,IAAIlP,EAAQD,KACR1B,EAAQ4N,GAAS5L,EAAcL,GAC/B6H,EAAkB7H,EAAMtD,IAAOmL,gBAC/B1S,EAAU2pD,GAAkBzgD,GAC5BghD,EAAoBx1C,GAAcxL,GAKlCyD,EAAeG,GAAsB,IAClBu8C,MAIEa,GAAqBnwC,IAAYhI,KACtDo4C,GAA0BnqD,EAAS6K,EAAO3B,EAAOyD,EAAcoN,GAAS,EAAMrH,GAC9EqH,EAAUhI,IAKVW,IACAG,GAAY3J,EAAO,KACnBkgD,GAAqBlgD,EAAOmgD,MAAiB,IAEjDv6B,GAAW9uB,EAASkJ,EAAOwJ,EAAiB7H,EAAO8B,EAAcoN,GAAS,EAAMmwC,GAQpF,SAASp7B,GAAW9uB,EAASkJ,EAAOwJ,EAAiB7H,EAAO8B,EAActX,EAAOod,EAAcy3C,GAC3F,IAAI7gC,EAAiB7d,KACjBmE,EAASiH,GAAiB1N,EAAO2B,GACjCuN,EAAW3E,GAAS5I,EAAO8B,GAC3BmC,EAAYC,KACZu7C,EAAkB12C,GAAgBwE,EAAU/iB,GAUhD,GAAImd,GAAmBtJ,EAAOuJ,EAAcC,GAAkB,CAC1D,IAAIm3C,EAAiBp3C,EAAe,KAAO3D,GAzuRnD,SAASy7C,EAAwBl7C,EAAUrP,EAASkJ,EAAOqI,EAAS1M,EAAM8H,EAActX,EAAOod,EAAc3D,EAAW6e,EAAa68B,GACjI,IAAIpyC,EAAW3E,GAAS5O,EAAM8H,GAC9B,GAAIghB,GAAe/Z,GAAgBwE,EAAU/iB,GAAQ,CACjD,IAAIo1D,EAAal4C,GAAUrJ,EAAO,KAC9B+nB,EAAew5B,IAAeD,EAA8B/1C,GAAuBzU,GAAW,KAClGwT,GAAS3O,EAAM8H,EAActX,GAI7B,IAAIq1D,EAAmB/9C,EAAe,EAClCg+C,EAAcl3C,GAAS5O,EAAM6lD,GAC7BC,IAAgB54C,KAChB44C,EAAc15B,GAElB05B,EAAqC,iBAAhBA,EAA2B,GAAKA,EAKrD,IACIC,GAAuBr4C,GAAUrJ,EADduJ,EAAe,KAAkC,OAiBxE,GAfIm4C,GAsTZ,SAASC,EAA0Bt5C,EAASo5C,EAAal4C,GAIrD,MAAqB,cAAjBvW,EAAQ4kB,MAAwB6pC,IAAgBn9B,MAIhC/a,EAAelB,EAAQygB,UAAazgB,EAAQqgB,OAASrgB,EAAQqgB,MAAMk5B,UAAa,OAC3EH,GAAe,IA9ThCE,CAA0Bt5C,EAASo5C,EAAal4C,KAChDm4C,GAAsB,EAClBxyC,IAAaoV,KAiU7B,SAASu9B,EAAoB17C,EAAUkC,EAASna,EAAQqb,GACpD,IAAI1R,EAKAA,EAt7HR,SAASiqD,EAAkB31D,GAGvB,OAAO1C,MAAM+H,QAAQrF,IAC8B,iBAAvCA,EAAM,GA86Hd21D,CAAkB5zD,GACZA,EAGA2e,GAAwB,KAAM3e,GAASqb,GAGjD,IADA,IAAI8e,EAAU9e,EAAesf,GAAWN,GAC/Bl+B,EAAI,EAA6BA,EAAIwN,EAAIrN,OAAQH,GAAK,EAC/CwhB,GAAYhU,EAAKxN,IAGzBg+B,EAAQliB,EAAUkC,EADPqD,GAAW7T,EAAKxN,IACM,GAxU7Bw3D,CAAoB17C,EAAUkC,EAAS6G,EAAU3F,GAGjDe,GAAS3O,EAAM6lD,EAAkBl9B,MAGrCo9B,EAGAp3C,GAAS3O,EAAM6lD,EADI15B,GAA0B3hB,EAAUkC,EAASlc,EAAOod,EADlDg4C,IAAeD,EAA8B/1C,GAAuBzU,GAAW,OAEnD,UAEhD,CAID,IAHA,IAAIuxB,EAAU9e,EAAesf,GAAWN,GACpC92B,EAAMob,GAAwBqC,EAAU/iB,GAAQod,GAChDw4C,EAAgBR,EAAal2C,GAAmBvU,GAAW,KACtDzM,EAAI,EAA6BA,EAAIoH,EAAIjH,OAAQH,GAAK,EAAmB,CAC9E,IAAI6hB,EAAOR,GAAWja,EAAKpH,GAGvBuiB,EAAUwb,GAAkBjiB,EAAUkC,EAAS6D,EAFrCL,GAAYpa,EAAKpH,GAEmCg+B,EAAS5kB,EAAcmC,IAEpFgH,GAAWm1C,IACZn1C,EAAU0b,GAAqBniB,EAAUkC,EAASggB,EAAS05B,EAAe71C,EAAMzI,EAAcmC,IAG7FgH,GACDyb,EAAQliB,EAAUkC,EAAS6D,EAAM,KAAMzI,GAG/C,IAAIkhB,EAAQN,GAAgBhc,EAASU,IACjCQ,EACAob,EAAMV,mBAAqBxyB,EAG3BkzB,EAAMT,mBAAqBzyB,KA2qRnC4vD,CADeR,GAAY7gD,EAAO2B,GACA7K,EAASkJ,EAAOyG,EAAQ9E,EAAO8B,EAActX,EAAOod,EAAco3C,EAAgBS,EAAiBJ,GACjIL,GAIAv+C,GAAiB0+C,QAGpB,CACD,IAAIr0C,EAAgBtgB,IAAU0c,GAAYA,GAAYgE,GAAwBqC,EAAU/iB,GAAQod,GAChGygB,KAIIzgB,EACAib,GAAsB1tB,EAASkJ,EAAO2B,EAAO8E,EAAQ0Z,EAAgB,KAAM1c,EAAcgJ,EAAe20C,EAAiB53C,GAGzHsb,GAAsBhuB,EAASkJ,EAAO2B,EAAO8E,EAAQ0Z,EAAgB,KAAM1c,EAAcgJ,EAAe7G,EAAWw7C,EAAiB53C,GAExIpH,GAAiB0+C,KAsBzB,SAASG,GAA0BnqD,EAAS6K,EAAO3B,EAAOyD,EAAcu+C,EAAUz4C,EAAcC,GAE5F,GAAIkB,GADWH,GAAS5I,EAAO8B,GACDu+C,GAAW,CAIrC,GAAIj3C,GAAsBi3C,KAAcx4C,EAAiB,CACrD,IAAIy4C,EAAY14C,EAAe+D,GAA0BtN,EAAM/F,QAAU,QAIzEu+B,GAAqB72B,EAHR3B,EAAM/F,OAAOgoD,GAgBtC,SAASC,EAAoCn6B,EAAcjb,EAAcvD,GACrE,IAAIpd,EAAQ2gB,EAWZ,OARIib,EAAav9B,SAET2B,EADAod,EACQyB,GAAa+c,EA72YjC,SAASo6B,EAAqBtxC,GAI1B,OAHIA,GAA8B,iBAAZA,IAClBA,EAAUvnB,OAAO2iB,KAAK4E,GAASnf,KAAK,MAEjCmf,GAAW,GAy2YyBsxC,CAAqBr1C,IAGhD9B,GAAa+c,EAAcjc,GAAoBgB,GAAc,GAAO,MAG7E3gB,EA1Ba+1D,CADO32C,GAAuBzU,GACoBkrD,EAAUz4C,IAExEnH,GAAiB0+C,IAErBx2C,GAAS3I,EAAO8B,EAAcu+C,IA+BtC,SAASlB,KACL,IAAIn/C,EAAQD,KACRvF,EAAQwF,EAAMtD,IAEd2B,EAAQ4N,GADOtI,KACgB3D,GAC/B8E,EAASiH,GAAiB1N,EAAO2B,GACjCwe,EAAiB7d,KACjB6D,EAAW06C,GAAY7gD,EAAO2B,GAC9BiE,EAAYC,MAvjSpB,SAASu8C,EAAaj8C,EAAUxK,EAAMqE,EAAOqiD,EAAgBC,EAAej6C,EAAS8X,EAAgBoiC,EAAgB/4C,GAEjH,IAAImb,EAAQN,GAAgBhc,EAAS8X,GACjC8E,EAAmB7Y,GAAoBuY,EAAMf,aAC7C0+B,IACA94C,GAAmBmd,GAA0B27B,EAAetiD,GAAO,GACvC,IAAxB2kB,EAAMZ,eACNgD,GAAuBu7B,EAAetiD,EAAOmG,EAAUkC,EAAS1M,EAAMgpB,EAAMZ,cAAewE,GAAUg6B,EAAgBt9B,GAAkB,IAG3Io9B,IACA74C,GAAmBmd,GAA0B07B,EAAgBriD,GAAO,GACvC,IAAzB2kB,EAAMd,gBACNkD,GAAuBs7B,EAAgBriD,EAAOmG,EAAUkC,EAAS1M,EAAMgpB,EAAMd,eAAgBgF,GAAU,KAAM5D,GAAkB,IAxW3I,SAASu9B,IACL7+B,GAAOtb,QAAU,KA0WjBm6C,IA0iSAJ,CAAaj8C,EAAUxE,EAAO3B,EAFTsL,GAAiBtL,EAAM6Q,SAAW7Q,EAAM6Q,QAAU,KACnDvF,GAAiBtL,EAAMjE,QAAUiE,EAAMjE,OAAS,KACA0K,EAAQ0Z,EAAgBva,EAAWzJ,EAAMqN,iBA94ZjH,SAASi5C,IACL98C,GAAyB,MA84ZzB88C,GAEJ,SAAS5B,GAAY7gD,EAAO2B,GACxB,OAAsB,IAAf3B,EAAMrP,KAA2BgR,EAAM5C,IAAY,KAM9D,SAAS2jD,GAA8B1iD,EAAO0G,EAAOi8C,GAKjD,IAJA,IAAIC,GAA8B,EAC9B7mD,EAASsP,GAAmBrL,EAAMjE,QAClC8U,EAAUxF,GAAmBrL,EAAM6Q,SACnCzN,GAAQ,EACH/Y,EAAIs4D,EAAYt4D,EAAIqc,EAAMlc,OAAQH,IAAK,CAC5C,IAAIw4D,EAAOn8C,EAAMrc,GACjB,GAAmB,iBAARw4D,EACPz/C,EAAOy/C,OAEN,GAAY,GAARz/C,EAELoJ,GADAqE,EAAUA,GAAWzH,GAAqB,MACby5C,GAAM,GACnCD,GAA8B,OAE7B,GAAY,GAARx/C,EAAwB,CAC7B,IAAIjX,EAAQua,IAAQrc,GAEpBmiB,GADAzQ,EAASA,GAAUqN,GAAqB,MACZy5C,EAAM12D,GAClCy2D,GAA8B,GAkBtC,OAfI/xC,GAAWA,EAAQrmB,OAAS,IACvBwV,EAAM6Q,UACP7Q,EAAM6Q,QAAUA,GAEpBiyC,GAAwB9iD,EAAM6Q,QAASvE,GAAmBuE,GAAS,KAEnE9U,GAAUA,EAAOvR,OAAS,IACrBwV,EAAMjE,SACPiE,EAAMjE,OAASA,GAEnB+mD,GAAwB9iD,EAAMjE,OAAQuQ,GAAmBvQ,GAAQ,KAEjE6mD,IACA5iD,EAAMxK,OAAS,KAEZotD,EAEX,SAASE,GAAwBhsD,EAAS3K,GAClBkf,GAAmBvU,GACzB,GAA4B3K,EAE9C,SAASu0D,GAAiB1gD,GACtB,OAAO+iD,GAAW/iD,GAAO,GAE7B,SAASygD,GAAkBzgD,GACvB,OAAO+iD,GAAW/iD,GAAO,GAK7B,SAAS+iD,GAAW/iD,EAAOuJ,GACvB,IAAIzS,EAAUyS,EAAevJ,EAAM6Q,QAAU7Q,EAAMjE,OAcnD,OAbKuP,GAAiBxU,KACEoJ,GAAgBF,GACpClJ,EAvnZR,SAASksD,EAAqBn8B,EAAgBsS,GAE1C,OADAtS,EAAiBA,GAAkBzd,GAAqB,MACjD,CACHF,GACA2d,GAmnZUm8B,CAAqBlsD,GAI3ByS,EACAvJ,EAAM6Q,QAAU/Z,EAGhBkJ,EAAMjE,OAASjF,GAGhBA,EA0BX,SAASqpD,KACL,OAAO/zC,GAAoB9J,MAE/B,SAAS49C,GAAqBlgD,EAAOilB,EAAkB1b,GAInDI,GAAY3J,EAHDilB,EACP1b,EAAe,KAAkC,OACjDA,EAAe,KAAsC;;;;;;;OAyB7D,SAAS05C,GAAex0D,EAAOzB,EAAMgyD,EAAYC,GAC7C,IAAIt9C,EAAQD,KACRvF,EAAQwF,EAAMtD,IACd6gD,EAAc/iD,EAAMtC,OACpB6M,EAAQ4H,GAAY4wC,EAAaF,GACjCx/B,EAAYlR,GAAY4wC,EAAaD,GAIrC94C,EAAWxE,EAAM5C,IACjB0H,EAAS9E,EAAMlT,EAAQ6Q,IAAiBq0B,GAAc3mC,EAAMmZ,EApiapE,SAAS+8C,IACL,OAAOniD,GAAiBC,OAAO0D,iBAmia2Cw+C,IACtEljD,EAAQk0B,GAAiB/3B,EAAOwF,EAAMjD,IAASjQ,EAAO,EAAiBzB,EAAM0Z,GACjF,GAAa,MAATA,EAAe,CACf,IAAIy8C,EAAgB38C,GAAgBL,EAAUM,EAAQC,GAClDvK,EAAMsT,iBACNizC,GAA8B1iD,EAAO0G,EAAOy8C,GAGA,MAAjC,IAAdnjD,EAAMxK,QACPymC,GAAqB91B,EAAUM,EAAQzG,GAAO,GAElD+V,GAAYtP,EAAQzG,EAAO2B,GAII,IAt9anC,SAASyhD,IACL,OAAOriD,GAAiBC,OAAOyD,kBAq9a3B2+C,IACA/jC,GAAgB5Y,EAAQ9E,GAp9ahC,SAAS0hD,IACLtiD,GAAiBC,OAAOyD,oBAq9axB4+C,GAKIlnD,EAAMsT,kBAEcmpB,GAAkBz8B,EAAOwF,EAAO3B,EAAOwf,GAErC,OAAlBrjB,EAAMi0B,SACNj0B,EAAMi0B,QAAQkzB,aAAannD,EAAO6D,IAGtCE,GAAgBF,KAChBw2B,GAA0Br6B,EAAOwF,EAAO3B,GACxCu2B,GAAsBp6B,EAAO6D,EAAO2B,IAEvB,MAAb6d,GACAyX,GAAyBt1B,EAAO3B,GAQxC,SAASujD,KACL,IAAI3gD,EAAwBD,KAExBK,KACAC,KAKAJ,GADAD,EAAwBA,EAAsBmC,QACE,GAEpD,IAAI/E,EAAQ4C,EAERjB,EAAQD,KACRvF,EAAQwF,EAAMtD,IAQlB,GAngbJ,SAASmlD,IACLziD,GAAiBC,OAAOyD,oBA2/axB++C,GACIrnD,EAAMsT,kBACNgR,GAAuBtkB,EAAOyG,GAC1B7C,GAAmB6C,IACnBzG,EAAMi0B,QAAQqzB,WAAW7gD,IAG7B4I,GAAcxL,GAAQ,CACtB,IAAIiiD,EAAY30C,GAA0BtN,EAAM/F,QAChDypD,GAAyB1jD,EAAM6Q,QAASlP,EAAO3B,EAAM/F,OAAOgoD,IAE5Dx2C,GAAczL,IACd0jD,GAAyB1jD,EAAMjE,OAAQ4F,EAAO3B,EAAM/F,OAAc,OAa1E,SAAS0pD,GAAUl1D,EAAOzB,EAAMgyD,EAAYC,GACxCgE,GAAex0D,EAAOzB,EAAMgyD,EAAYC,GACxCsE,KAyCJ,SAASK,GAAmBl9C,GACxB,IAAIm9C,EAAmBv+C,KACnB3D,EAAQD,KACRvF,EAAQwF,EAAMtD,IACd2B,EAAQ4N,GAASi2C,EAAkBliD,GAIvC,GAAmB,IAAf3B,EAAMrP,KAA0B,CAChC,IAAI8V,EAASiH,GAAiB1N,EAAO2B,GACjCwhD,EAAgB38C,GAAgB7E,EAAM5C,IAAW0H,EAAQC,GACzDvK,EAAMsT,iBACyBizC,GAA8B1iD,EAAO0G,EAAOy8C,IAWvElnB,GADet6B,EAAM5C,IACU0H,EAAQzG,GAAO,IAK9D,SAAS0jD,GAAyB5sD,EAAS6K,EAAOmiD,GAQ9CtrB,GAAqB72B,EAAOmiD,EAJfhtD,GAAWyU,GAAuBzU,IAAa;;;;;;;;AAsDhE,SAASitD,GAAwBt1D,EAAOuwD,EAAYC,GAChD,IAAIt9C,EAAQD,KACRvF,EAAQwF,EAAMtD,IACd8H,EAAWxE,EAAM5C,IAEjBmgD,EAAc/iD,EAAMtC,OACpB6M,EAAQ4H,GAAY4wC,EAAaF,GACjCx/B,EAAYlR,GAAY4wC,EAAaD,GAIrCx4C,EAAS9E,EAAMlT,EAAQ6Q,IAAiB6G,EAAS4/B,cAAoC,IAErF/lC,EAAQk0B,GAAiB/3B,EAAOwF,EAAMjD,IAASjQ,EAAO,EAT5C,eAS+EiY,GACzFA,GAASvK,EAAMsT,iBAGfizC,GAA8B1iD,EAAO0G,EAAO,GAEhDqP,GAAYtP,EAAQzG,EAAO2B,GAC3B0d,GAAgB5Y,EAAQ9E,GACpBxF,EAAMsT,kBAENmpB,GAAkBz8B,EAAOwF,EAAO3B,EAAOwf,GACnCrjB,EAAMi0B,SACNj0B,EAAMi0B,QAAQkzB,aAAannD,EAAO6D,IAGtCE,GAAgBF,KAChBw2B,GAA0Br6B,EAAOwF,EAAO3B,GACxCu2B,GAAsBp6B,EAAO6D,EAAO2B,IAEvB,MAAb6d,GACAyX,GAAyBt1B,EAAO3B,GAQxC,SAASgkD,KACL,IAAIphD,EAAwBD,KAExBxG,EADQuF,KACMrD,IACd2E,KACAC,KAKAJ,GADAD,EAAwBA,EAAsBmC,QACE,GAGhD5I,EAAMsT,kBACNgR,GAAuBtkB,EAAOyG,GAC1B7C,GAAmB6C,IACnBzG,EAAMi0B,QAAQqzB,WAAW7gD,IAcrC,SAASqhD,GAAmBx1D,EAAOuwD,EAAYC,GAC3C8E,GAAwBt1D,EAAOuwD,EAAYC,GAC3C+E;;;;;;;OAkBJ,SAASE,GAAoBC,EAAazqD,EAAOC,GAC7C,IAAIgI,EAAQD,KACRkB,EAAwBD,KAExByhD,EAAgD,IAA/BxhD,EAAsBjS,KACvCiS,EAAsBmC,OACtBnC,EACAi6B,EAAal7B,EAAMyiD,EAAe31D,OAElC41D,EAuDR,SAASC,EAAYznB,EAAY0nB,EAAUJ,GACvC,IAAK,IAAI95D,EAAIk6D,EAAW3kD,GAAyBvV,EAAIwyC,EAAWryC,OAAQH,IAAK,CACzE,IAAIm6D,EAAmB3nB,EAAWxyC,GAAGgU,IAAOvC,GAC5C,GAAI0oD,IAAqBL,EACrB,OAAOtnB,EAAWxyC,GAEjB,KAAIm6D,EAAmBL,GAQxB,MANA3lB,GAAW3B,EAAYxyC,EAAIuV,IASnC,OAAO,KAxEY0kD,CAAYznB,EAAYA,EAAWr9B,IAAe2kD,GACrE,GAAIE,GA3jbR,SAASI,IACL1jD,GAAiBC,OAAO+B,UAAW,EA2jb/B0hD,GACAjgD,GAAU6/C,EAAcA,EAAahmD,IAAOkd,UAE3C,CAED8oC,EAAevwB,GAAYnyB,EA6BnC,SAAS+iD,EAAyBptB,EAAW59B,EAAOC,EAAMoL,GACtD,IAAI5I,EAAQuF,KAAWrD,IAEnBsmD,EAAkB5/C,EAAOksB,OAM7B,OAHIqG,GAAaqtB,EAAgBn6D,QAAwC,MAA9Bm6D,EAAgBrtB,MACvDqtB,EAAgBrtB,GAAaD,GAAY,EAAkBC,EAAW,KAAM59B,EAAOC,EAAMwC,EAAMu0B,kBAAmBv0B,EAAMw0B,aAAc,KAAM,KAAMx0B,EAAMtC,SAErJ8qD,EAAgBrtB,GAtCeotB,CAAyBP,EAAazqD,EAAOC,EAAMyqD,GAAiB,KAAM,GAAsB,KAAM,MACxI,IAAI7vB,EAAcvxB,KAAgBJ,EAC9BA,GAAyBA,EAAsBmC,OACnDuvB,GAAuB+vB,EAAahmD,IAAQk2B,EAAa4vB,EAAaE,GACtE7/C,GAAU6/C,EAAcA,EAAahmD,IAAOkd,MAShD,OAPIshB,IACIxuB,GAAeg2C,IAEf1mB,GAAW0mB,EAAcxnB,EAAYA,EAAWr9B,KAEpDq9B,EAAWr9B,OAER6O,GAAeg2C,GAAgB,EAClC,EA0DR,SAASO,KACL,IAAIjjD,EAAQD,KACRvF,EAAQwF,EAAMtD,IACdwmD,EAAWljD,EAAMjD,IACjB5H,EAAU6K,EAAM/C,IAChByP,GAAe1M,IACf6yB,GAAW7yB,EAAOxF,EAAOrF,GAE7Bi+B,GAAYpzB,EAAOxF,EAAOA,EAAMvC,SAAU9C,GAG1CkO,KACAnC,GAAyBgiD,GAAU,GAYvC,SAASC,KACL,OAAOpjD;;;;;;;OAaX,SAASqjD,GAAUpuD,GAGf,QAASA,GAA2B,mBAAbA,EAAI6hD,KAK/B,SAASwM,GAAaruD,GAGlB,QAASA,GAAgC,mBAAlBA,EAAIsuD;;;;;;;OAwB/B,SAASC,GAAWC,EAAWC,EAAYC,EAAYC,QAChC,IAAfD,IAAyBA,GAAa,GAC1C,IAAI1jD,EAAQD,KACR1B,EAAQ2C,KACZ4iD,GAAiB5jD,EAAOA,EAAM5C,IAAWiB,EAAOmlD,EAAWC,EAAYC,EAAYC,GAuBvF,SAASE,GAAiCL,EAAWC,EAAYC,EAAYC,QACtD,IAAfD,IAAyBA,GAAa,GAC1C,IAAI1jD,EAAQD,KACR1B,EAAQ2C,KAEZ4iD,GAAiB5jD,EADFm6B,GAAsB97B,EAAO2B,GACV3B,EAAOmlD,EAAWC,EAAYC,EAAYC,GAiChF,SAASC,GAAiB5jD,EAAOwE,EAAUnG,EAAOmlD,EAAWC,EAAYC,EAAYC,QAC9D,IAAfD,IAAyBA,GAAa,GAC1C,IAAIlpD,EAAQwF,EAAMtD,IACdonD,EAAuBvlD,GAAgBF,GAEvCk/B,EADkB/iC,EAAMsT,kBACOtT,EAAMs0B,UAAYt0B,EAAMs0B,QAAU,KAEjEi1B,GAAiB,EAErB,GAAmB,IAAf1lD,EAAMrP,KAA0B,CAChC,IAAI8V,EAASiH,GAAiB1N,EAAO2B,GACjC2oC,EAAWgb,EAAsBA,EAAoB7+C,GAAUvN,GAC/DrO,EAASy/C,EAASz/C,QAAU4b,EAE5Bk/C,GADAxmB,EAAWvD,GAAWj6B,IACGnX,OACzB40C,EAAoBkmB,EACpB,SAAUnyC,GAAU,OAAOmyC,EAAoB93C,GAAY2F,EAAOnT,EAAMvR,SAAS5D,QACjFmV,EAAMvR,MAGV,GAAIyX,GAAqBC,GAAW,CAWhC,IAAIy/C,EAAmB,KAUvB,IAHKN,GAAuBG,IACxBG,EAjEhB,SAASC,EAAqBlkD,EAAOwjD,EAAWW,GAC5C,IACI5mB,EADQv9B,EAAMtD,IACGoyB,QACrB,GAAgB,MAAZyO,EACA,IAAK,IAAI70C,EAAI,EAAGA,EAAI60C,EAAS10C,OAAS,EAAGH,GAAK,EAAG,CAC7C,IAAI07D,EAAmB7mB,EAAS70C,GAChC,GAAI07D,IAAqBZ,GAAajmB,EAAS70C,EAAI,KAAOy7D,EAAU,CAIhE,IAAI3mB,EAAWx9B,EAAMhD,IACjBqnD,EAAwB9mB,EAAS70C,EAAI,GACzC,OAAO80C,EAAS30C,OAASw7D,EAAwB7mB,EAAS6mB,GAAyB,KAOvD,iBAArBD,IACP17D,GAAK,GAIjB,OAAO,KAyCwBw7D,CAAqBlkD,EAAOwjD,EAAWnlD,EAAMvR,QAE3C,OAArBm3D,GAKqBA,EAAiBK,sBAAwBL,GAC/CM,qBAAuBd,EACtCQ,EAAiBK,qBAAuBb,EACxCM,GAAiB,MAEhB,CAIDN,EAAae,GAAanmD,EAAO2B,EAAOyjD,GAAY,GACpD,IAAI7iB,EAAYp8B,EAASigD,OAAO9b,EAASt9C,MAAQnC,EAAQs6D,EAAWC,GAEpEjmB,EAAS3yC,KAAK44D,EAAY7iB,GAC1BrD,GAAYA,EAAS1yC,KAAK24D,EAAW/lB,EAAmBumB,EAAeA,EAAgB,SAI3FP,EAAae,GAAanmD,EAAO2B,EAAOyjD,GAAY,GACpDv6D,EAAOw7D,iBAAiBlB,EAAWC,EAAYC,GAE/ClmB,EAAS3yC,KAAK44D,GACdlmB,GAAYA,EAAS1yC,KAAK24D,EAAW/lB,EAAmBumB,EAAeN,GAI/E,IACIp4D,EADAiN,EAAU8F,EAAM9F,QAEpB,GAAIwrD,GAA6B,MAAXxrD,IAAoBjN,EAAQiN,EAAQirD,IAAa,CACnE,IAAImB,EAAcr5D,EAAMzC,OACxB,GAAI87D,EAEA,IADA,IAAInnB,EAAWvD,GAAWj6B,GACjBtX,EAAI,EAAGA,EAAIi8D,EAAaj8D,GAAK,EAAG,CACrC,IAQIk8D,EALoB5kD,EAHZ1U,EAAM5C,IAEC4C,EAAM5C,EAAI,IAMH46D,UAAUG,GAChCoB,EAAMrnB,EAAS30C,OACnB20C,EAAS3yC,KAAK44D,EAAYmB,GAC1BrnB,GAAYA,EAAS1yC,KAAK24D,EAAWnlD,EAAMvR,MAAO+3D,IAAOA,EAAM,MAK/E,SAASC,GAAiC9kD,EAAO3B,EAAOolD,EAAY94D,GAChE,IAEI,OAAyB,IAAlB84D,EAAW94D,GAEtB,MAAOG,GAEH,OADAwnB,GAAYtS,EAAOlV,IACZ,GAaf,SAAS05D,GAAanmD,EAAO2B,EAAOyjD,EAAYsB,GAG5C,OAAO,SAASC,EAA0Cr6D,GAGtD,GAAIA,IAAMsc,SACN,OAAOw8C,EAIX,IAAIx9C,EAA0B,EAAd5H,EAAMxK,MAClBuY,GAAyB/N,EAAMvR,MAAOkT,GACtCA,EAE2C,IAA3B,GAAfA,EAAMrD,MACP88B,GAAcxzB,GAMlB,IAJA,IAAIgrB,EAAS6zB,GAAiC9kD,EAAO3B,EAAOolD,EAAY94D,GAGpEs6D,EAAiBD,EAA0CT,qBACxDU,GAEHh0B,EAAS6zB,GAAiC9kD,EAAO3B,EAAO4mD,EAAgBt6D,IAAMsmC,EAC9Eg0B,EAAiBA,EAAeV,qBAOpC,OALIQ,IAAqC,IAAX9zB,IAC1BtmC,EAAEu6D,iBAEFv6D,EAAEw6D,aAAc,GAEbl0B;;;;;;;;;;;;;;OA+Bf,SAASm0B,GAAc7hD,GAEnB,YADc,IAAVA,IAAoBA,EAAQ,GACzBD,GAAgBC;;;;;;;OAkB3B,SAAS8hD,GAA4BhnD,EAAOinD,GAGxC,IAFA,IAAIC,EAAyB,KACzBC,EAv2UR,SAASC,EAAsBpnD,GAC3B,IAAIyiB,EAAYziB,EAAM0G,MACtB,GAAiB,MAAb+b,EAAmB,CACnB,IAAI4kC,EAAqB5kC,EAAU1wB,QAAQ,GAG3C,GAAiC,IAAP,EAArBs1D,GACD,OAAO5kC,EAAU4kC,EAAqB,GAG9C,OAAO,KA61UkBD,CAAsBpnD,GACtC3V,EAAI,EAAGA,EAAI48D,EAAgBz8D,OAAQH,IAAK,CAC7C,IAAI6jB,EAAY+4C,EAAgB58D,GAGhC,GAAkB,MAAd6jB,GAMJ,GAA2B,OAAvBi5C,EACA5jC,GAA2BvjB,EAAOkO,GAAkC,GACpEsV,GAAyB2jC,EAAoBj5C,GAC7C,OAAO7jB,OARP68D,EAAyB78D,EAWjC,OAAO68D,EA2BX,SAASI,GAAgBL,GACrB,IAAIM,EAAgB94C,GAAkB/M,MAAYhD,IAClD,IAAK6oD,EAAcp2B,WAQf,IALA,IACIq2B,EAAkBD,EAAcp2B,WAChCz4B,GAFqBuuD,EAAkBA,EAAgBz8D,OAAS,EAEnC,MAC7Bi9D,EAAQD,EAAgBtvD,QACxBwvD,EAAiBH,EAAcziD,MACT,OAAnB4iD,GAAyB,CAC5B,IAAIC,EAAYV,EAAkBD,GAA4BU,EAAgBT,GAAmB,EAC/E,OAAdU,IACIF,EAAME,GACNF,EAAME,GAAWz2B,eAAiBw2B,EAGlCF,EAAgBG,GAAaD,EAEjCD,EAAME,GAAaD,GAEvBA,EAAiBA,EAAex7D,MAI5C,IAAI07D,IAAkB,EACtB,SAASC,GAAmB17D,GACxBy7D,GAAkBz7D,EAatB,SAAS27D,GAAa95C,EAAW+5C,EAAerhD,QACtB,IAAlBqhD,IAA4BA,EAAgB,GAChD,IAAIpmD,EAAQD,KACR0/B,EAAkBlN,GAAiBvyB,EAAMtD,IAAQsD,EAAMjD,IAASsP,EAAW,EAAoB,KAAMtH,GAAS,MAE/E,OAA/B06B,EAAgBjQ,aAChBiQ,EAAgBjQ,WAAa42B,GAEjC9kD,KAEK2kD,IAEDzmB,GAAgBx/B,EAAOy/B;;;;;;;OA6B/B,SAAS4mB,GAAW75D,EAAUhC,EAAOyZ,GACjC,IAAIjE,EAAQD,KAOZ,OALI45C,GAAe35C,EADAgC,KACqBxX,IAEpCgsC,GAAwBx2B,EADR2D,KAC0BnX,EAAUhC,EAAOyZ,GAGxDoiD,GAgCX,SAASC,GAAsB95D,EAAUguD,EAAIv2C,GAEzC,OADAsiD,GAAuB/5D,EAAU,GAAIguD,EAAI,GAAIv2C,GACtCqiD,GA8BX,SAASC,GAAuB/5D,EAAUs+B,EAAQ0vB,EAAIC,EAAQx2C,GAC1D,IAAIjE,EAAQD,KACRi8C,EAAoBzB,GAAev6C,EAAO8qB,EAAQ0vB,EAAIC,GAM1D,OALIuB,IAAsB90C,IACtBsvB,GAAwBx2B,EAAO2D,KAAoBnX,EAAUwvD,EAAmB/3C,GAI7EsiD,GAgCX,SAASC,GAAuBh6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIH,EAAQx2C,GAClE,IAAIjE,EAAQD,KACRi8C,EAAoBtB,GAAe16C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAOlE,OANIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAIpEuiD,GAmCX,SAASC,GAAuBj6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQx2C,GAC1E,IAAIjE,EAAQD,KACRi8C,EAAoBnB,GAAe76C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAO1E,OANIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAIpEwiD,GAqCX,SAASC,GAAuBl6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQx2C,GAClF,IAAIjE,EAAQD,KACRi8C,EAAoBhB,GAAeh7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAMlF,OALIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAGpEyiD,GAuCX,SAASC,GAAuBn6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQx2C,GAC1F,IAAIjE,EAAQD,KACRi8C,EAAoBb,GAAen7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAM1F,OALIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAGpE0iD,GAyCX,SAASC,GAAuBp6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQx2C,GAClG,IAAIjE,EAAQD,KACRi8C,EAAoBV,GAAet7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAMlG,OALIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAGpE2iD,GA2CX,SAASC,GAAuBr6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQx2C,GAC1G,IAAIjE,EAAQD,KACRi8C,EAAoBP,GAAez7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAM1G,OALIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAGpE4iD,GA6CX,SAASC,GAAuBt6D,EAAUs+B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQx2C,GAClH,IAAIjE,EAAQD,KACRi8C,EAAoBJ,GAAe57C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAMlH,OALIuB,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAGpE6iD,GAgCX,SAASC,GAAuBv6D,EAAUD,EAAQ0X,GAC9C,IAAIjE,EAAQD,KACRi8C,EAAoB3B,GAAer6C,EAAOzT,GAa9C,OAZIyvD,IAAsB90C,IAEtBsvB,GAAwBx2B,EADR2D,KAC0BnX,EAAUwvD,EAAmB/3C,GAUpE8iD;;;;;;;OAkBX,SAASC,GAAOl6D,EAAOtC,QACL,IAAVA,IAAoBA,EAAQ,IAChC,IAAIwV,EAAQD,KAGRknD,EAAajnD,EAAMlT,EAAQ6Q,IAAiBi+B,GAAepxC,EAAOwV,EAAM5C,KACxEiB,EAAQk0B,GAAiBvyB,EAAMtD,IAAQsD,EAAMjD,IAASjQ,EAAO,EAAiB,KAAM,MAExFwU,KACA8S,GAAY6yC,EAAY5oD,EAAO2B;;;;;;;OA8BnC,SAASknD,GAAkB1M,GAEvB,OADA2M,GAAmB,GAAI3M,EAAI,IACpB0M,GAqBX,SAASC,GAAmBr8B,EAAQ0vB,EAAIC,GACpC,IAAIz6C,EAAQD,KACR08C,EAAelC,GAAev6C,EAAO8qB,EAAQ0vB,EAAIC,GAIrD,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C0K,GAqBX,SAASC,GAAmBt8B,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAC5C,IAAIz6C,EAAQD,KACR08C,EAAe/B,GAAe16C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAI7D,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C2K,GAsBX,SAASC,GAAmBv8B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GACpD,IAAIz6C,EAAQD,KACR08C,EAAe5B,GAAe76C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAIrE,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C4K,GAsBX,SAASC,GAAmBx8B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAC5D,IAAIz6C,EAAQD,KACR08C,EAAezB,GAAeh7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAI7E,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C6K,GAsBX,SAASC,GAAmBz8B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GACpE,IAAIz6C,EAAQD,KACR08C,EAAetB,GAAen7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAIrF,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C8K,GAwBX,SAASC,GAAmB18B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAC5E,IAAIz6C,EAAQD,KACR08C,EAAenB,GAAet7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAI7F,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5C+K,GAsBX,SAASC,GAAmB38B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GACpF,IAAIz6C,EAAQD,KACR08C,EAAehB,GAAez7C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAIrG,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5CgL,GAsBX,SAASC,GAAmB58B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAC5F,IAAIz6C,EAAQD,KACR08C,EAAeb,GAAe57C,EAAO8qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAI7G,OAHIgC,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5CiL,GA0BX,SAASC,GAAmBp7D,GACxB,IAAIyT,EAAQD,KACR08C,EAAepC,GAAer6C,EAAOzT,GAIzC,OAHIkwD,IAAiBv1C,IACjBmzB,GAAoBr6B,EAAO2D,KAAoB84C,GAE5CkL;;;;;;;OA+BX,SAASC,GAAuB98B,EAAQ0vB,EAAIC,GACxC,IACIuB,EAAoBzB,GADZx6C,KACkC+qB,EAAQ0vB,EAAIC,GAC1D+E,GAAiB77C,KAAoBq4C,GAyBzC,SAAS6L,GAAuB/8B,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAChD,IACIuB,EAAoBtB,GADZ36C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAClE+E,GAAiB77C,KAAoBq4C,GA4BzC,SAAS8L,GAAuBh9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GACxD,IACIuB,EAAoBnB,GADZ96C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAC1E+E,GAAiB77C,KAAoBq4C,GA8BzC,SAAS+L,GAAuBj9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAChE,IACIuB,EAAoBhB,GADZj7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAClF+E,GAAiB77C,KAAoBq4C,GAgCzC,SAASgM,GAAuBl9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GACxE,IACIuB,EAAoBb,GADZp7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAC1F+E,GAAiB77C,KAAoBq4C,GAkCzC,SAASiM,GAAuBn9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAChF,IACIuB,EAAoBV,GADZv7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAClG+E,GAAiB77C,KAAoBq4C,GAoCzC,SAASkM,GAAuBp9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GACxF,IACIuB,EAAoBP,GADZ17C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAC1G+E,GAAiB77C,KAAoBq4C,GAsCzC,SAASmM,GAAuBr9B,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAChG,IACIuB,EAAoBJ,GADZ77C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAClH+E,GAAiB77C,KAAoBq4C,GAyBzC,SAASoM,GAAuB77D,GAC5B,IACIyvD,EAAoB3B,GADZt6C,KACkCxT,GAC9CizD,GAAiB77C,KAAoBq4C;;;;;;;OAoCzC,SAASqM,GAAwB99C,EAAMugB,EAAQ0vB,EAAIC,EAAQ6N,GACvD,IACItM,EAAoBzB,GADZx6C,KACkC+qB,EAAQ0vB,EAAIC,GAE1D,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDD,GA8BX,SAASE,GAAwBh+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIH,EAAQ6N,GAC/D,IACItM,EAAoBtB,GADZ36C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIH,GAElE,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDC,GAgCX,SAASC,GAAwBj+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,EAAQ6N,GACvE,IACItM,EAAoBnB,GADZ96C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIN,GAE1E,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDE,GAkCX,SAASC,GAAwBl+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,EAAQ6N,GAC/E,IACItM,EAAoBhB,GADZj7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIT,GAElF,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDG,GAoCX,SAASC,GAAwBn+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,EAAQ6N,GACvF,IACItM,EAAoBb,GADZp7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIZ,GAE1F,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDI,GAsCX,SAASC,GAAwBp+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,EAAQ6N,GAC/F,IACItM,EAAoBV,GADZv7C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIf,GAElG,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDK,GAyCX,SAASC,GAAwBr+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,EAAQ6N,GACvG,IACItM,EAAoBP,GADZ17C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIlB,GAE1G,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDM,GA2CX,SAASC,GAAwBt+C,EAAMugB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,EAAQ6N,GAC/G,IACItM,EAAoBJ,GADZ77C,KACkC+qB,EAAQ0vB,EAAIG,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIrB,GAElH,OADA6D,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDO,GAgCX,SAASC,GAAwBv+C,EAAMhe,EAAQ+7D,GAC3C,IACItM,EAAoB3B,GADZt6C,KACkCxT,GAE9C,OADA+xD,GAAkB36C,KAAoB4G,EAAMyxC,EAAmBsM,GACxDQ;;;;;;;OAwBX,SAASC,GAAev8D,EAAUhC,EAAOyZ,GACrC,IAAIjE,EAAQD,KAOZ,OALI45C,GAAe35C,EADAgC,KACqBxX,IAEpCgsC,GAAwBx2B,EADR2D,KAC0BnX,EAAUhC,EAAOyZ,GAAW,GAGnE8kD,GAuBX,SAASC,GAA6Bx8D,EAAUhC,EAAOyZ,GACnD,IAAIjE,EAAQD,KAOZ,OALI45C,GAAe35C,EADAgC,KACqBxX,IAEpCgsC,GAAwBx2B,EADR2D,KAC0BnX,EAAUhC,EAAOyZ,GAAW,EAAMk2B,IAGzE6uB;;;;;;;;;;;;;;OAsCX,SAASC,GAAaviD,GAClB,KAAMA,aAAmBuP,MACrB,MAAM,IAAI9nB,MAAM,kCACpB,IAAIgH,EAAU+zD,GAAaxiD,GAAS,GACpC,OAAgB,OAAZvR,EACO,WACe1G,IAAtB0G,EAAQ2nB,YACR3nB,EAAQ2nB,UA/+YhB,SAASqsC,EAAwB98C,EAAWrM,GACxC,IAAI3B,EAAQ2B,EAAMtD,IAAO1C,KAAKqS,GAE9B,OAAqB,EAAdhO,EAAMxK,MAAkCmM,EADrB3B,EAAMwS,gBAC4C,KA4+YpDs4C,CAAwBh0D,EAAQkX,UAAWlX,EAAQ6K,QAEpE7K,EAAQ2nB,WAsBnB,SAASssC,GAAa1iD,GAClB,KAAMA,aAAmBuP,MACrB,MAAM,IAAI9nB,MAAM,kCACpB,IAAIgH,EAAU+zD,GAAaxiD,GAAS,GACpC,OAAgB,OAAZvR,EACO,KACJA,EAAQ6K,MAAM/C,IAsBzB,SAASosD,GAAiB3iD,GACtB,IAAIvR,EAAU+zD,GAAaxiD,GAAS,GACpC,GAAgB,OAAZvR,EACA,OAAO,KAIX,IAHA,IACIiO,EADApD,EAAQ7K,EAAQ6K,MAGG,OAAhBA,EAAMvD,MAAmB2G,EAASyJ,GAAe7M,KAEpDA,EAAQoD,EAEZ,OAAsB,IAAfpD,EAAMrD,IAA4B,KAAOqD,EAAM/C,IAW1D,SAASqsD,GAAkBpgE,GACvB,OAAO6B,EAASkiB,GAAe/jB,GAAQ+0B,YAS3C,SAASsrC,GAAYrgE,GACjB,IAAIiM,EAAU+zD,GAAahgE,GAAQ,GACnC,OAAgB,OAAZiM,EACOu5C,GAASC,KAEb,IAAIn/B,GADCra,EAAQ6K,MAAMtD,IAAO1C,KAAK7E,EAAQkX,WACflX,EAAQ6K,OAsC3C,SAASwpD,GAActgE,GACnB,IAAIiM,EAAU+zD,GAAahgE,GAI3B,YAH2BuF,IAAvB0G,EAAQuF,aACRvF,EAAQuF,WAAa4iB,GAAyBnoB,EAAQkX,UAAWlX,EAAQ6K,OAAO,IAE7E7K,EAAQuF,YAAc,GAEjC,SAASwuD,GAAahgE,EAAQugE,QACF,IAApBA,IAA8BA,GAAkB,GACpD,IAAIt0D,EAAUynB,GAAY1zB,GAC1B,IAAKiM,GAAWs0D,EACZ,MAAM,IAAIt7D,MACN,qBAER,OAAOgH,EA8BX,SAASu0D,GAAezpC,GACpB,OAAOrD,GAAYqD,GAAWnb,OAqBlC,SAAS6kD,GAAgBC,GAErB,MAAsC,kBAAxBA,EAASlG,WAuB3B,SAASmG,GAAanjD,GAClB,KAAMA,aAAmBuP,MACrB,MAAM,IAAI9nB,MAAM,kCACpB,IAAI27D,EAAWZ,GAAaxiD,GAAS,GACrC,GAAiB,OAAbojD,EACA,MAAO,GACX,IAAI9pD,EAAQ8pD,EAAS9pD,MAEjBw9B,EAAWx9B,EAAMhD,IACjBugC,EAFQv9B,EAAMtD,IAEGoyB,QACjBi7B,EAAY,GAChB,GAAIxsB,GAAYC,EACZ,IAAK,IAAI90C,EAAI,EAAGA,EAAI60C,EAAS10C,QAAS,CAClC,IAAImhE,EAAazsB,EAAS70C,KACtBuhE,EAAc1sB,EAAS70C,KAC3B,GAA0B,iBAAfshE,EAAyB,CAChC,IAAIE,EAASF,EACTG,EAAkBt+C,GAAY7L,EAAMiqD,IACpCvpB,EAAWlD,EAASD,EAAS70C,MAC7B0hE,EAAmB7sB,EAAS70C,KAO5Bge,GAAWyjD,GACXJ,EAAUl/D,KAAK,CAAE6b,QAASA,EAASrb,KAAM6+D,EAAQxpB,SAAUA,EAAUgjB,WAJ5B,kBAArB0G,EACpBA,IACCA,GAAoB,IAAY,QAQjD,OADAL,EAAU5+B,KAAKk/B,IACRN,EAEX,SAASM,GAAcrhD,EAAGthB,GACtB,OAAIshB,EAAE3d,MAAQ3D,EAAE2D,KACL,EACJ2d,EAAE3d,KAAO3D,EAAE2D,MAAQ,EAAI,EAiBlC,SAASi/D,GAAa5jD,GAClB,IAAI6jD,EAAY,KACZT,EAvFR,SAASU,EAAqB5wC,GAC1B,KAAMA,aAAgB3D,MAClB,MAAM,IAAI9nB,MAAM,kCACpB,OAAO+6D,GAAatvC,GAoFL4wC,CAAqB9jD,GAChC1G,EAAQ8pD,EAAS9pD,MACjBqM,EAAYy9C,EAASz9C,UACzB,IAAmB,IAAfA,EAAkB,CAClB,IAAIo+C,EAAezqD,EAAMqM,GAKzBk+C,EAAYp8B,GAFAjwB,GAAQusD,GAAgBA,EAAa1tD,IAC7CkP,GAASI,EAAY1O,GAAeqC,GACNA,EAAOqM,GAE7C,OAAOk+C;;;;;;;;;;;;;;;AAiDX,IAAIG,GAA6B,KAC7BC,IAAa,EA0BjB,SAASC,GAAkBv/D,EAAMsF,GAC7B,IAAwB,oBAAbk6D,WAA6BA,WAK5Bx5D,EAED,CACH,IAAIqpC,EAHArpC,EAGcq5D,IACbhwB,IACDA,EALArpC,EAKcq5D,IAA8B,IAEhDhwB,EAAUrvC,GAAQsF;;;;;;;OAgF9B,SAASm6D,GAAwB3vB,EAAO/rC,EAAK6tC,EAAU3K,EAAiB9tB,EAAUP,GAC9E,IAAIzJ,EAAQyiC,EAASvgC,IAErBugC,EAAS,EAAIt/B,IAAiBw9B,EAC9B,IAAI98B,EAAQk0B,GAAiB/3B,EAAO,KAAM,EAAG,EAAiB,KAAM,MAChEm+B,EAAgBxG,GAAY8K,EAAUxH,GAA0BrmC,GAAM,KAAMA,EAAIoK,OAAS,GAAiB,GAAsByjC,EAASt/B,IAAgBU,EAAOi0B,EAAiB9tB,EAAUP,GAQ/L,OAPIzJ,EAAMsT,kBACNW,GAAmBd,GAA+BtP,EAAO4+B,GAAWziC,EAAOpL,EAAIJ,MAC/EqoC,GAAoB78B,EAAO6D,GAC3Bo5B,GAAcp5B,EAAO4+B,EAASp0C,OAAQ,IAE1C+vC,GAAcqE,EAAUtE,GAEjBsE,EAASt/B,IAAiBg7B,EAMrC,SAASoyB,GAAoBpyB,EAAeqyB,EAAc/tB,EAAUtD,EAAasxB,GAC7E,IAAIzwD,EAAQyiC,EAASvgC,IAEjBogB,EA3jSR,SAASouC,EAAyB1wD,EAAOwF,EAAO5Q,GAC5C,IAAI4d,EAAYhM,KACZxG,EAAMsT,kBACF1e,EAAI0I,mBACJ1I,EAAI0I,kBAAkB1I,GAC1BsoC,GAAgCl9B,EAAOwS,EAAW,GAClD2qB,GAAqBn9B,EAAOwF,EAAO5Q,IAEvC,IAAI6wB,EAAY5P,GAAkB7V,EAAMR,KAAMgG,EAAOA,EAAMnX,OAAS,EAAGmkB,GACvE0Q,GAAgBuC,EAAWjgB,GAC3B,IAAI8E,EAASiH,GAAiBiB,EAAWhN,GAIzC,OAHI8E,GACA4Y,GAAgB5Y,EAAQ9E,GAErBigB,EA6iSSirC,CAAyB1wD,EAAOyiC,EAAU+tB,GAC1DrxB,EAAY1b,WAAWpzB,KAAKiyB,GAC5B6b,EAAc17B,IAAW6f,EACzBmuC,GAAgBA,EAAav0D,SAAQ,SAAUiE,GAAW,OAAOA,EAAQmiB,EAAWkuC,MAGhFA,EAAa3yD,gBACb2yD,EAAa3yD,eAAe,EAAgBykB,EAAWmgB,EAASp0C,OAAS,GAE7E,IAAImkB,EAAYhM,KAShB,OARIxG,EAAMsT,iBAAmBk9C,EAAa5yD,eAEtCgI,GADmB4M,EAAUlgB,MAAQ6Q,IAErCiD,KAEAy0B,GAAiC21B,EADnBxwD,EAAMm0B,oBACoC7R,EAAW9P,EAAWxS,EAAMsT,iBACpF1N,GAAqB,OAElB0c,EAEX,SAASquC,GAAkBpO,EAAWC,GAClC,MAAO,CACH/+B,WAAY,GACZ8+B,UAAWA,GAAaz2C,GACxBw2C,MAAO9iB,GACPgjB,cAAeA,GAAiB,KAChCnpD,MAAO,GAgBf,SAASu3D,GAAsBtuC,EAAW1tB,GACtC,IAAIi8D,EAAY5+C,GAAiBqQ,GAAWpgB,IACxC4uD,EAAWD,EAAUrxD,KAAKnR,OAAS,EACvC01B,GAAsB+sC,EAAUl8D,EAAKi8D,GAAY,GAAI,GAAI,GAGzDvsC,GAAuBusC,EAAW,CAAEx6C,eAAgBy6C,EAAUt6C,aAAcs6C,EAAW;;;;;;;;AA6B3F,SAASC,GAAav8D,GAClB,OAAOrH,OAAOiqB,eAAe5iB,EAAK5G,WAAWD,YAQjD,SAASqjE,GAA2BC,GAEhC,IADA,IAAIC,EAAYH,GAAaE,EAAWz8D,MACjC08D,GAAW,CACd,IAAIC,OAAWl9D,EACf,GAAI+P,GAAeitD,GAEfE,EAAWD,EAAU/5D,MAAQ+5D,EAAU75D,SAEtC,CACD,GAAI65D,EAAU/5D,KACV,MAAM,IAAIxD,MAAM,wCAGpBw9D,EAAWD,EAAU75D,KAEzB,GAAI85D,EAAU,CAGV,IAAIC,EAAeH,EACnBG,EAAatzD,OAASuzD,GAAiBJ,EAAWnzD,QAClDszD,EAAa/zD,eAAiBg0D,GAAiBJ,EAAW5zD,gBAC1D+zD,EAAarzD,QAAUszD,GAAiBJ,EAAWlzD,SAEnD,IAAIuzD,EAAoBH,EAASvzD,aACjC0zD,GAAqBC,GAAoBN,EAAYK,GAErD,IAAIE,EAAiBL,EAAS7xD,UAC1BmyD,EAAsBN,EAAStzD,eACnC2zD,GAAkBE,GAAiBT,EAAYO,GAC/CC,GAAuBE,GAAsBV,EAAYQ,GAEzD79D,EAAeq9D,EAAWnzD,OAAQqzD,EAASrzD,QAC3ClK,EAAeq9D,EAAW5zD,eAAgB8zD,EAAS9zD,gBACnDzJ,EAAeq9D,EAAWlzD,QAASozD,EAASpzD,SAG5CkzD,EAAWzyD,oBACPyyD,EAAWzyD,qBAAuB2yD,EAAS3yD,oBAC/CyyD,EAAW3yD,iBAAmB2yD,EAAW3yD,kBAAoB6yD,EAAS7yD,iBACtE2yD,EAAWryD,iBAAmBqyD,EAAWryD,kBAAoBuyD,EAASvyD,iBACtEqyD,EAAWvyD,cAAgBuyD,EAAWvyD,eAAiByyD,EAASzyD,cAChEuyD,EAAW7yD,QAAU6yD,EAAW7yD,SAAW+yD,EAAS/yD,QACpD6yD,EAAWnyD,UAAYmyD,EAAWnyD,WAAaqyD,EAASryD,UACxDmyD,EAAW/yD,OAAS+yD,EAAW/yD,QAAUizD,EAASjzD,OAElD,IAAIqB,EAAW4xD,EAAS5xD,SACxB,GAAIA,EACA,IAAK,IAAIrR,EAAI,EAAGA,EAAIqR,EAASlR,OAAQH,IAAK,CACtC,IAAIiS,EAAUZ,EAASrR,GACnBiS,GAAWA,EAAQyxD,WACnBzxD,EAAQ8wD,IAKxBC,EAAY/jE,OAAOiqB,eAAe85C,IAG1C,SAASG,GAAiBrhE,GACtB,OAAIA,IAAU+M,GACH,GAEF/M,IAAUgN,GACR,GAGAhN,EAGf,SAAS0hE,GAAiBT,EAAYO,GAClC,IAAIK,EAAgBZ,EAAW3xD,UAE3B2xD,EAAW3xD,UADXuyD,EACuB,SAAU33B,EAAI43B,GACjCN,EAAet3B,EAAI43B,GACnBD,EAAc33B,EAAI43B,IAICN,EAG/B,SAASG,GAAsBV,EAAYQ,GACvC,IAAIM,EAAqBd,EAAWpzD,eAEhCozD,EAAWpzD,eADXk0D,EAC4B,SAAU73B,EAAI43B,EAAK9tC,GAC3CytC,EAAoBv3B,EAAI43B,EAAK9tC,GAC7B+tC,EAAmB73B,EAAI43B,EAAK9tC,IAIJytC,EAGpC,SAASF,GAAoBN,EAAYK,GACrC,IAAIU,EAAmBf,EAAWrzD,aAI9B0zD,IAAsBU,IAElBf,EAAWrzD,aADXo0D,EAC0B,SAAU93B,EAAI43B,EAAKjsD,GACzCyrD,EAAkBp3B,EAAI43B,EAAKjsD,GAC3BmsD,EAAiB93B,EAAI43B,EAAKjsD,IAIJyrD;;;;;;;OAgBtC,IAAIW,GAAwB,CAExB,qBASAC,GAAwB,CAGxB,WACA,QACA,SACA,OACA,SACA,qBAEA,SACA,gBAEA,WAkBJ,SAASC,GAAwBlB,GAC7B,IAAIz0C,EAAKnrB,EAAIyrB,EAAKL,EAEd00C,EADAD,EAAYH,GAAaE,EAAWz8D,MAIpC28D,EAFAntD,GAAeitD,GAEJC,EAAU/5D,KAIV+5D,EAAU75D,KAGzB,IAAI+6D,EAASnB,EACb,IAEI,IAAK,IAAIoB,EAA0B3iE,EAASuiE,IAAwBK,EAA4BD,EAAwBtiE,QAASuiE,EAA0BriE,KAAMqiE,EAA4BD,EAAwBtiE,OAEjNqiE,EADIG,EAAQD,EAA0BtiE,OACtBmhE,EAASoB,GAGjC,MAAO51C,GAASH,EAAM,CAAElsB,MAAOqsB,GAC/B,QACI,IACQ21C,IAA8BA,EAA0BriE,OAASoB,EAAKghE,EAAwBz1C,SAASvrB,EAAG/C,KAAK+jE,GAEvH,QAAU,GAAI71C,EAAK,MAAMA,EAAIlsB,OAEjC,GAAI0T,GAAemtD,GACf,IAEI,IAAK,IAAIqB,EAA0B9iE,EAASwiE,IAAwBO,EAA4BD,EAAwBziE,QAAS0iE,EAA0BxiE,KAAMwiE,EAA4BD,EAAwBziE,OAAQ,CACzN,IAAIwiE,EACJH,EADIG,EAAQE,EAA0BziE,OACtBmhE,EAASoB,IAGjC,MAAOr1C,GAASJ,EAAM,CAAExsB,MAAO4sB,GAC/B,QACI,IACQu1C,IAA8BA,EAA0BxiE,OAASwsB,EAAK+1C,EAAwB51C,SAASH,EAAGnuB,KAAKkkE,GAEvH,QAAU,GAAI11C,EAAK,MAAMA,EAAIxsB;;;;;;;OAqBzC,IAAIoiE,GAA8B,WAC9B,SAASA,EAAaC,EAAeC,EAAcC,GAC/C9lE,KAAK4lE,cAAgBA,EACrB5lE,KAAK6lE,aAAeA,EACpB7lE,KAAK8lE,YAAcA,EAMvB,OADAH,EAAa9kE,UAAUklE,cAAgB,WAAc,OAAO/lE,KAAK8lE,aAC1DH,EAVsB;;;;;;;OA2CjC,SAASK,KAIL,OADAC,GAAuBpB,WAAY,EAC5BoB,GAEX,SAASA,GAAuB/B,GACxBA,EAAWz8D,KAAK5G,UAAUqlE,cAC1BhC,EAAWnxD,SAAWozD,GACtBjC,EAAWhzD,UAGnB,SAASk1D,IACL,OAAO,SAASC,IACZ,IAAIC,EAAqBC,GAAsBvmE,MAC3CuxB,EAAU+0C,GAAsBA,EAAmB/0C,QACvD,GAAIA,EAAS,CACT,IAAInlB,EAAWk6D,EAAmBl6D,SAClC,GAAIA,IAAa4D,GACbs2D,EAAmBl6D,SAAWmlB,OAK9B,IAAK,IAAI3vB,KAAO2vB,EACZnlB,EAASxK,GAAO2vB,EAAQ3vB,GAGhC0kE,EAAmB/0C,QAAU,KAC7BvxB,KAAKkmE,YAAY30C,KApBE60C,IAwB/B,SAASD,GAAoB79C,EAAUrlB,EAAOyR,EAAY+8B,GACtD,IAAI60B,EAAqBC,GAAsBj+C,IAanD,SAASk+C,EAAsBl+C,EAAUiuC,GACrC,OAAOjuC,EAASm+C,IAAwBlQ;;;;;;;OAbpCiQ,CAAsBl+C,EAAU,CAAElc,SAAU4D,GAAWuhB,QAAS,OAChEA,EAAU+0C,EAAmB/0C,UAAY+0C,EAAmB/0C,QAAU,IACtEnlB,EAAWk6D,EAAmBl6D,SAC9BuI,EAAe3U,KAAKsQ,eAAeoE,GACnCgyD,EAAiBt6D,EAASuI,GAC9B4c,EAAQ5c,GAAgB,IAAIgxD,GAAae,GAAkBA,EAAeb,aAAc5iE,EAAOmJ,IAAa4D,IAC5GsY,EAASmpB,GAAexuC,EAE5B,IAAIwjE,GAAuB,sBAC3B,SAASF,GAAsBj+C,GAC3B,OAAOA,EAASm+C,KAAyB,KA6C7C,SAASE,GAAkBlkB,EAAUt5B,EAAcy9C,EAAuBp5B,EAAah2B,GAEnF,GADAirC,EAAWv5C,EAAkBu5C,GACzBliD,MAAM+H,QAAQm6C,GAId,IAAK,IAAIthD,EAAI,EAAGA,EAAIshD,EAASnhD,OAAQH,IACjCwlE,GAAkBlkB,EAASthD,GAAIgoB,EAAcy9C,EAAuBp5B,EAAah2B,OAGpF,CACD,IAAIiB,EAAQD,KACRvF,EAAQwF,EAAMtD,IACdlP,EAAQ2/C,GAAenD,GAAYA,EAAWv5C,EAAkBu5C,EAAS92C,SACzEk7D,EAAkB9gB,GAAkBtD,GACpC3rC,EAAQ2C,KACRqtD,EAAqC,MAAxBhwD,EAAMoS,gBACnBM,EAAW1S,EAAMwS,eACjBC,EAAwBzS,EAAMoS,iBAAmB,GACrD,GA7yMR,SAAS69C,EAAgB9jE,GACrB,QAASA,EAAM0+C,SA4yMPolB,CAAgBtkB,IAAamD,GAAenD,GAAW,CACvD,IACIzwC,GADaywC,EAASd,UAAYc,GAAU5hD,UACpBmR,YACxBA,IACCiB,EAAM4kB,eAAiB5kB,EAAM4kB,aAAe,KAAKv0B,KAAK6lB,EAAa7nB,OAAQ0Q,GAGpF,GAAI4zC,GAAenD,KAAcA,EAASuD,MAAO,CAE7C,IAAI3mD,EAAU,IAAIkY,GAAoBsvD,EAAiBrvD,EAAgBk/C,IACnEsQ,EAAuBn+D,GAAQ5C,EAAOkjB,EAAc3R,EAAiBsvD,EAAaA,EAAav9C,EAAuBC,IAC7F,GAAzBw9C,GACA9/C,GAAmBd,GAA+BtP,EAAO2B,GAAQxF,EAAOhN,GACxEkjB,EAAa7lB,KAAK2C,GAClB6Q,EAAMwS,iBACNxS,EAAM2S,eACFjS,IACAV,EAAMoS,iBAAmB,OAE7B09C,EAAsBtjE,KAAKjE,GAC3BoZ,EAAMnV,KAAKjE,KAGXunE,EAAsBI,GAAwB3nE,EAC9CoZ,EAAMuuD,GAAwB3nE,OAGjC,CAqBD,IAAI4nE,EAAgCp+D,GAAQ5C,EAAOkjB,EAAc29C,EAAav9C,EAAuBC,GACjG09C,EAAoCr+D,GAAQ5C,EAAOkjB,EAAc29C,EAAYA,EAAav9C,GAG1F49C,EAAgCD,GAAqC,GACrEN,EAAsBM,GACtB1vD,IAAmB2vD,IAClB3vD,KAL2ByvD,GAAiC,GAC7DL,EAAsBK,KAMtB//C,GAAmBd,GAA+BtP,EAAO2B,GAAQxF,EAAOhN,GACpE5G,EAwFpB,SAAS+nE,EAAatc,EAAWvlD,EAAOiS,EAAgBg2B,EAAa65B,GACjE,IAAIhoE,EAAU,IAAIkY,GAAoBuzC,EAAWtzC,EAAgBk/C,IAKjE,OAJAr3D,EAAQ2mD,MAAQ,GAChB3mD,EAAQkG,MAAQA,EAChBlG,EAAQioE,mBAAqB,EAC7BC,GAAgBloE,EAASgoE,EAAG75B,IAAgBh2B,GACrCnY,EA9FmB+nE,CAAa5vD,EAAiBgwD,GAAoCC,GAA+Bb,EAAsBtlE,OAAQkW,EAAgBg2B,EAAaq5B,IACrKrvD,GAAkB2vD,IACnBP,EAAsBM,GAAmCL,gBAAkBxnE,GAE/E8pB,EAAa7lB,KAAK2C,GAClB6Q,EAAMwS,iBACNxS,EAAM2S,eACFjS,IACAV,EAAMoS,iBAAmB,OAE7B09C,EAAsBtjE,KAAKjE,GAC3BoZ,EAAMnV,KAAKjE,IAIXkoE,GAAgBX,EAAsBpvD,EAAiB0vD,EAAoCD,GAAgCJ,GAAkBrvD,GAAkBg2B,IAE9Jh2B,GAAkBg2B,GAAe25B,GAClCP,EAAsBM,GAAmCI,uBAQzE,SAASC,GAAgBH,EAAc/nE,EAASqoE,GAC5CN,EAAaphB,MAAM1iD,KAAKjE,GACpBqoE,GACAN,EAAaE,qBAMrB,SAASz+D,GAAQkG,EAAMJ,EAAKu+B,EAAO1V,GAC/B,IAAK,IAAIr2B,EAAI+rC,EAAO/rC,EAAIq2B,EAAKr2B,IACzB,GAAIwN,EAAIxN,KAAO4N,EACX,OAAO5N,EAEf,OAAQ,EAKZ,SAASsmE,GAA8B30D,EAAG0U,EAAOmgD,EAAO7wD,GACpD,OAAO8wD,GAAa5nE,KAAKgmD,MAAO,IAOpC,SAASwhB,GAAkC10D,EAAG0U,EAAOmgD,EAAO7wD,GACxD,IACI4yB,EADAm+B,EAAY7nE,KAAKgmD,MAErB,GAAIhmD,KAAK6mE,gBAAiB,CACtB,IAAIiB,EAAiB9nE,KAAK6mE,gBAAgBS,mBACtCS,EAAiBj/C,GAAkBtB,EAAOmgD,EAAO3nE,KAAK6mE,gBAAgBthE,MAAOuR,GAIjF8wD,GAAaC,EAFbn+B,EAASq+B,EAAe/4D,MAAM,EAAG84D,IAIjC,IAAK,IAAI3mE,EAAI2mE,EAAgB3mE,EAAI4mE,EAAezmE,OAAQH,IACpDuoC,EAAOpmC,KAAKykE,EAAe5mE,SAM/BymE,GAAaC,EAFbn+B,EAAS,IAIb,OAAOA,EAKX,SAASk+B,GAAaC,EAAWn+B,GAC7B,IAAK,IAAIvoC,EAAI,EAAGA,EAAI0mE,EAAUvmE,OAAQH,IAElCuoC,EAAOpmC,MAAKjE,EADEwoE,EAAU1mE,OAG5B,OAAOuoC,EA8CX,SAASs+B,GAAmB1gE,EAAW2gE,GAEnC,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC,SAAU/D,GACbA,EAAW3zD,kBACP,SAAU1I,EAAKqgE,GACX,OAjOhB,SAAS33D,EAAkB1I,EAAKP,EAAW2gE,GACvC,IACIh1D,EADQuF,KACMrD,IAClB,GAAIlC,EAAMsT,gBAAiB,CACvB,IAAIinB,EAAcv2B,GAAepP,GAEjC8+D,GAAkBsB,EAAeh1D,EAAMR,KAAMQ,EAAMyT,UAAW8mB,GAAa,GAE3Em5B,GAAkBr/D,EAAW2L,EAAMR,KAAMQ,EAAMyT,UAAW8mB,GAAa,IAyNxDj9B,CAAkB1I,EACzBqgE,EAAqBA,EAAmB5gE,GAAaA,EACrD2gE;;;;;;;OAmBhB,IAAIE,GACA,SAASA,OAaTC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwB9yC,GAC7B,IAAIhyB,EAAQqD,MAAM,kCAAoCyB,EAAUktB,GAAa,kDAE7E,OADAhyB,EAAM+kE,IAAmB/yC,EAClBhyB,EAEX,IAAI+kE,GAAkB,cAIlBC,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8B1nE,UAAU2nE,wBAA0B,SAAUjzC,GACxE,MAAM8yC,GAAwB9yC,IAE3BgzC,EANuC,GAiB9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBrhB,KAAO,IAAImhB,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCb,EAAWrb,EAASmc,GACzD3oE,KAAKwsD,QAAUA,EACfxsD,KAAK2oE,UAAYA,EACjB3oE,KAAK4oE,WAAa,IAAI3kB,IACtB,IAAK,IAAI9iD,EAAI,EAAGA,EAAI0mE,EAAUvmE,OAAQH,IAAK,CACvC,IAAI9B,EAAUwoE,EAAU1mE,GACxBnB,KAAK4oE,WAAWrjC,IAAIlmC,EAAQwpE,cAAexpE,IAanD,OAVAqpE,EAAgC7nE,UAAU2nE,wBAA0B,SAAUjzC,GAC1E,IAAIl2B,EAAUW,KAAK4oE,WAAWn8D,IAAI8oB,GAIlC,IAHKl2B,GAAWW,KAAKwsD,UACjBntD,EAAUW,KAAKwsD,QAAQgc,wBAAwBjzC,KAE9Cl2B,EACD,MAAMgpE,GAAwB9yC,GAElC,OAAO,IAAIuzC,GAA8BzpE,EAASW,KAAK2oE,YAEpDD,EApByC,GAsBhDI,GAA+C,SAAUt9C,GAEzD,SAASs9C,EAA8BzpE,EAAS88C,GAC5C,IAAIhC,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAQjC,OAPAm6C,EAAM96C,QAAUA,EAChB86C,EAAMgC,SAAWA,EACjBhC,EAAM7gB,SAAWj6B,EAAQi6B,SACzB6gB,EAAM0uB,cAAgBxpE,EAAQwpE,cAC9B1uB,EAAMvpC,mBAAqBvR,EAAQuR,mBACnCupC,EAAMppC,OAAS1R,EAAQ0R,OACvBopC,EAAMnpC,QAAU3R,EAAQ2R,QACjBmpC,EAKX,OAfAz5C,EAAUooE,EAA+Bt9C,GAYzCs9C,EAA8BjoE,UAAUC,OAAS,SAAUkL,EAAU+vC,EAAkBgtB,EAAoB5sB,GACvG,OAAOn8C,KAAKX,QAAQyB,OAAOkL,EAAU+vC,EAAkBgtB,EAAoB5sB,GAAYn8C,KAAKm8C,WAEzF2sB,EAhBuC,CAiBhDV;;;;;;;;AASF,SAASY,KAEL,IADA,IAAIzkE,EAAO,GACFC,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCD,EAAKC,GAAMnD,UAAUmD;;;;;;;OA2B7B,IAiCWykE,GAjCPC,GAA4B,WAC5B,SAASA,EAAWC,GAChBnpE,KAAKmpE,cAAgBA,EAOzB,OADAD,EAAWl+D,kBAAoB,WAAc,OAAOo+D,GAA2BF,IACxEA,EAToB,GAa3BE,GADuCJ,GAgBvCK,IANuB,IAAIp+D,GAAe,wBAO1C,SAASo+D,SAIFJ,GASR3pE,EAAQ2pE,sBAAwB3pE,EAAQ2pE,oBAAsB,KALzCA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAkDIK,GAlDAC,GAA2B,WAC3B,SAASA,KAOT,OADAA,EAAUv+D,kBAAoB,WAAc,OAAOw+D,MAC5CD,EARmB,GAY1BC,GADqCR,GAerCS,GAA2B,WAC3B,SAASA,KAQT,OALAA,EAAUxhE,MAAQlB,EAAmB,CACjCd,MAAOwjE,EACPxiE,WAAY,OACZ5H,QAAS,WAAc,OAAO,QAE3BoqE,EATmB,GAoC1BC,GAAU,IAZVJ,GACA,SAASA,GAAQK,GACb3pE,KAAK2pE,KAAOA,EACZ3pE,KAAK4pE,MAAQD,EAAKt6C,MAAM,KAAK,GAC7BrvB,KAAK6pE,MAAQF,EAAKt6C,MAAM,KAAK,GAC7BrvB,KAAK8pE,MAAQH,EAAKt6C,MAAM,KAAKrgB,MAAM,GAAGxG,KAAK,OAOzB,qBAStBuhE,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6BlpE,UAAUmpE,SAAW,SAAUv8D,GAAO,OAAO2jD,GAAqB3jD,IAC/Fs8D,EAA6BlpE,UAAUC,OAAS,SAAUmpE,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAU5kE,EAAOwJ,GAAQ,OAAOA,GAMlDm7D,GAAuC,WACvC,SAASA,EAAsBD,GAC3BjqE,KAAKsB,OAAS,EAEdtB,KAAKoqE,eAAiB,KAEtBpqE,KAAKqqE,iBAAmB,KACxBrqE,KAAKsqE,gBAAkB,KACvBtqE,KAAKuqE,QAAU,KACfvqE,KAAKwqE,QAAU,KACfxqE,KAAKyqE,eAAiB,KACtBzqE,KAAK0qE,eAAiB,KACtB1qE,KAAK2qE,WAAa,KAClB3qE,KAAK4qE,WAAa,KAClB5qE,KAAK6qE,cAAgB,KACrB7qE,KAAK8qE,cAAgB,KAErB9qE,KAAK+qE,qBAAuB,KAC5B/qE,KAAKgrE,qBAAuB,KAC5BhrE,KAAKirE,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsBrpE,UAAUqqE,YAAc,SAAU9hE,GACpD,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKuqE,QAAoB,OAAX9lB,EAAiBA,EAASA,EAAO0mB,MACzD/hE,EAAGq7C,IAGXylB,EAAsBrpE,UAAUuqE,iBAAmB,SAAUhiE,GAKzD,IAJA,IAAIiiE,EAASrrE,KAAKuqE,QACde,EAAatrE,KAAK6qE,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAI7mB,GAAU6mB,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiBjnB,EAAQ8mB,EAAiBC,GAC7DC,EAAehnB,EAAOgnB,aAE1B,GAAIhnB,IAAW6mB,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxB1mB,EAAOonB,cACPN,QAEC,CAEIC,IACDA,EAAc,IAClB,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAI5qE,EAAI,EAAGA,EAAI2qE,EAAwB3qE,IAAK,CAC7C,IAAI+f,EAAS/f,EAAIqqE,EAAYlqE,OAASkqE,EAAYrqE,GAAMqqE,EAAYrqE,GAAK,EACrEoE,EAAQ2b,EAAS/f,EACjB4qE,GAAqBxmE,GAASA,EAAQumE,IACtCN,EAAYrqE,GAAK+f,EAAS,GAIlCsqD,EADoB/mB,EAAOonB,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrBriE,EAAGq7C,EAAQknB,EAAkBF,KAIzCvB,EAAsBrpE,UAAUmrE,oBAAsB,SAAU5iE,GAC5D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKsqE,gBAA4B,OAAX7lB,EAAiBA,EAASA,EAAOwnB,cACjE7iE,EAAGq7C,IAGXylB,EAAsBrpE,UAAUqrE,iBAAmB,SAAU9iE,GACzD,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKyqE,eAA2B,OAAXhmB,EAAiBA,EAASA,EAAO0nB,WAChE/iE,EAAGq7C,IAGXylB,EAAsBrpE,UAAUurE,iBAAmB,SAAUhjE,GACzD,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAK2qE,WAAuB,OAAXlmB,EAAiBA,EAASA,EAAO4nB,WAC5DjjE,EAAGq7C,IAGXylB,EAAsBrpE,UAAUyrE,mBAAqB,SAAUljE,GAC3D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAK6qE,cAA0B,OAAXpmB,EAAiBA,EAASA,EAAOmnB,aAC/DxiE,EAAGq7C,IAGXylB,EAAsBrpE,UAAU0rE,sBAAwB,SAAUnjE,GAC9D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAK+qE,qBAAiC,OAAXtmB,EAAiBA,EAASA,EAAO+nB,oBACtEpjE,EAAGq7C,IAGXylB,EAAsBrpE,UAAU4rE,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,EAAa,KACZtb,GAAqBsb,GACtB,MAAM,IAAI9lE,MAAM,yBAA2ByB,EAAUqkE,GAAc,4CAEvE,OAAI1sE,KAAK2sE,MAAMD,GACJ1sE,KAGA,MAGfkqE,EAAsBrpE,UAAUkR,UAAY,aAC5Cm4D,EAAsBrpE,UAAU8rE,MAAQ,SAAUD,GAC9C,IAAIvyB,EAAQn6C,KACZA,KAAK4sE,SACL,IAEIrnE,EACAwJ,EACA89D,EAJApoB,EAASzkD,KAAKuqE,QACduC,GAAa,EAIjB,GAAIvsE,MAAM+H,QAAQokE,GAAa,CAC3B1sE,KAAKsB,OAASorE,EAAWprE,OACzB,IAAK,IAAIyrE,EAAU,EAAGA,EAAU/sE,KAAKsB,OAAQyrE,IAEzCF,EAAc7sE,KAAKirE,WAAW8B,EAD9Bh+D,EAAO29D,EAAWK,IAEH,OAAXtoB,GAAoBuM,GAAevM,EAAOuoB,UAAWH,IAKjDC,IAEAroB,EAASzkD,KAAKitE,mBAAmBxoB,EAAQ11C,EAAM89D,EAAaE,IAE3D/b,GAAevM,EAAO11C,KAAMA,IAC7B/O,KAAKktE,mBAAmBzoB,EAAQ11C,KATpC01C,EAASzkD,KAAKmtE,UAAU1oB,EAAQ11C,EAAM89D,EAAaE,GACnDD,GAAa,GAUjBroB,EAASA,EAAO0mB,WAIpB5lE,EAAQ,EApyKpB,SAAS6nE,EAAkB3/D,EAAKrE,GAC5B,GAAI7I,MAAM+H,QAAQmF,GACd,IAAK,IAAItM,EAAI,EAAGA,EAAIsM,EAAInM,OAAQH,IAC5BiI,EAAGqE,EAAItM,SAMX,IAFA,IAAI4B,EAAW0K,EAAIojD,QACf9hD,OAAO,IACDA,EAAOhM,EAASC,QAAY,MAClCoG,EAAG2F,EAAK9L,OA2xKRmqE,CAAkBV,GAAY,SAAU39D,GACpC89D,EAAc1yB,EAAM8wB,WAAW1lE,EAAOwJ,GACvB,OAAX01C,GAAoBuM,GAAevM,EAAOuoB,UAAWH,IAKjDC,IAEAroB,EAAStK,EAAM8yB,mBAAmBxoB,EAAQ11C,EAAM89D,EAAatnE,IAE5DyrD,GAAevM,EAAO11C,KAAMA,IAC7BorC,EAAM+yB,mBAAmBzoB,EAAQ11C,KATrC01C,EAAStK,EAAMgzB,UAAU1oB,EAAQ11C,EAAM89D,EAAatnE,GACpDunE,GAAa,GAUjBroB,EAASA,EAAO0mB,MAChB5lE,OAEJvF,KAAKsB,OAASiE,EAIlB,OAFAvF,KAAKqtE,UAAU5oB,GACfzkD,KAAK0sE,WAAaA,EACX1sE,KAAKstE,SAEhBltE,OAAO+B,eAAe+nE,EAAsBrpE,UAAW,UAAW,CAI9D4L,IAAK,WACD,OAA+B,OAAxBzM,KAAKyqE,gBAA+C,OAApBzqE,KAAK2qE,YACjB,OAAvB3qE,KAAK6qE,eAAwD,OAA9B7qE,KAAK+qE,sBAE5CloC,YAAY,EACZC,cAAc,IAUlBonC,EAAsBrpE,UAAU+rE,OAAS,WACrC,GAAI5sE,KAAKstE,QAAS,CACd,IAAI7oB,OAAS,EACT8oB,OAAa,EACjB,IAAK9oB,EAASzkD,KAAKsqE,gBAAkBtqE,KAAKuqE,QAAoB,OAAX9lB,EAAiBA,EAASA,EAAO0mB,MAChF1mB,EAAOwnB,cAAgBxnB,EAAO0mB,MAElC,IAAK1mB,EAASzkD,KAAKyqE,eAA2B,OAAXhmB,EAAiBA,EAASA,EAAO0nB,WAChE1nB,EAAOonB,cAAgBpnB,EAAOgnB,aAGlC,IADAzrE,KAAKyqE,eAAiBzqE,KAAK0qE,eAAiB,KACvCjmB,EAASzkD,KAAK2qE,WAAuB,OAAXlmB,EAAiBA,EAAS8oB,EACrD9oB,EAAOonB,cAAgBpnB,EAAOgnB,aAC9B8B,EAAa9oB,EAAO4nB,WAExBrsE,KAAK2qE,WAAa3qE,KAAK4qE,WAAa,KACpC5qE,KAAK6qE,cAAgB7qE,KAAK8qE,cAAgB,KAC1C9qE,KAAK+qE,qBAAuB/qE,KAAKgrE,qBAAuB,OAehEd,EAAsBrpE,UAAUssE,UAAY,SAAU1oB,EAAQ11C,EAAM89D,EAAatnE,GAE7E,IAAIioE,EAkCJ,OAjCe,OAAX/oB,EACA+oB,EAAiBxtE,KAAKwqE,SAGtBgD,EAAiB/oB,EAAOgpB,MAExBztE,KAAK0tE,QAAQjpB,IAIF,QADfA,EAAiC,OAAxBzkD,KAAKoqE,eAA0B,KAAOpqE,KAAKoqE,eAAe39D,IAAIogE,EAAatnE,KAI3EyrD,GAAevM,EAAO11C,KAAMA,IAC7B/O,KAAKktE,mBAAmBzoB,EAAQ11C,GACpC/O,KAAK2tE,WAAWlpB,EAAQ+oB,EAAgBjoE,IAKzB,QADfk/C,EAAmC,OAA1BzkD,KAAKqqE,iBAA4B,KAAOrqE,KAAKqqE,iBAAiB59D,IAAIogE,EAAa,QAI/E7b,GAAevM,EAAO11C,KAAMA,IAC7B/O,KAAKktE,mBAAmBzoB,EAAQ11C,GACpC/O,KAAK4tE,eAAenpB,EAAQ+oB,EAAgBjoE,IAI5Ck/C,EACIzkD,KAAK6tE,UAAU,IAAIC,GAAsB/+D,EAAM89D,GAAcW,EAAgBjoE,GAGlFk/C,GA6BXylB,EAAsBrpE,UAAUosE,mBAAqB,SAAUxoB,EAAQ11C,EAAM89D,EAAatnE,GACtF,IAAIwoE,EAA2C,OAA1B/tE,KAAKqqE,iBAA4B,KAAOrqE,KAAKqqE,iBAAiB59D,IAAIogE,EAAa,MAQpG,OAPuB,OAAnBkB,EACAtpB,EAASzkD,KAAK4tE,eAAeG,EAAgBtpB,EAAOgpB,MAAOloE,GAEtDk/C,EAAOgnB,cAAgBlmE,IAC5Bk/C,EAAOgnB,aAAelmE,EACtBvF,KAAKguE,YAAYvpB,EAAQl/C,IAEtBk/C,GASXylB,EAAsBrpE,UAAUwsE,UAAY,SAAU5oB,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAI8oB,EAAa9oB,EAAO0mB,MACxBnrE,KAAKiuE,eAAejuE,KAAKkuE,QAAQzpB,IACjCA,EAAS8oB,EAEiB,OAA1BvtE,KAAKqqE,kBACLrqE,KAAKqqE,iBAAiB3uB,QAEE,OAAxB17C,KAAK0qE,iBACL1qE,KAAK0qE,eAAeyB,WAAa,MAEb,OAApBnsE,KAAK4qE,aACL5qE,KAAK4qE,WAAWyB,WAAa,MAEZ,OAAjBrsE,KAAKwqE,UACLxqE,KAAKwqE,QAAQW,MAAQ,MAEE,OAAvBnrE,KAAK8qE,gBACL9qE,KAAK8qE,cAAcc,aAAe,MAEJ,OAA9B5rE,KAAKgrE,uBACLhrE,KAAKgrE,qBAAqBwB,oBAAsB,OAIxDtC,EAAsBrpE,UAAU+sE,eAAiB,SAAUnpB,EAAQ0pB,EAAY5oE,GAC7C,OAA1BvF,KAAKqqE,kBACLrqE,KAAKqqE,iBAAiBpqC,OAAOwkB,GAEjC,IAAI2pB,EAAO3pB,EAAO4pB,aACdrrE,EAAOyhD,EAAOmnB,aAelB,OAda,OAATwC,EACApuE,KAAK6qE,cAAgB7nE,EAGrBorE,EAAKxC,aAAe5oE,EAEX,OAATA,EACAhD,KAAK8qE,cAAgBsD,EAGrBprE,EAAKqrE,aAAeD,EAExBpuE,KAAKsuE,aAAa7pB,EAAQ0pB,EAAY5oE,GACtCvF,KAAKguE,YAAYvpB,EAAQl/C,GAClBk/C,GAGXylB,EAAsBrpE,UAAU8sE,WAAa,SAAUlpB,EAAQ0pB,EAAY5oE,GAIvE,OAHAvF,KAAKkuE,QAAQzpB,GACbzkD,KAAKsuE,aAAa7pB,EAAQ0pB,EAAY5oE,GACtCvF,KAAKguE,YAAYvpB,EAAQl/C,GAClBk/C,GAGXylB,EAAsBrpE,UAAUgtE,UAAY,SAAUppB,EAAQ0pB,EAAY5oE,GAatE,OAZAvF,KAAKsuE,aAAa7pB,EAAQ0pB,EAAY5oE,GAIlCvF,KAAK0qE,eAHmB,OAAxB1qE,KAAK0qE,eAGiB1qE,KAAKyqE,eAAiBhmB,EAMtBzkD,KAAK0qE,eAAeyB,WAAa1nB,EAEpDA,GAGXylB,EAAsBrpE,UAAUytE,aAAe,SAAU7pB,EAAQ0pB,EAAY5oE,GAKzE,IAAIvC,EAAsB,OAAfmrE,EAAsBnuE,KAAKuqE,QAAU4D,EAAWhD,MAuB3D,OAnBA1mB,EAAO0mB,MAAQnoE,EACfyhD,EAAOgpB,MAAQU,EACF,OAATnrE,EACAhD,KAAKwqE,QAAU/lB,EAGfzhD,EAAKyqE,MAAQhpB,EAEE,OAAf0pB,EACAnuE,KAAKuqE,QAAU9lB,EAGf0pB,EAAWhD,MAAQ1mB,EAEK,OAAxBzkD,KAAKoqE,iBACLpqE,KAAKoqE,eAAiB,IAAImE,IAE9BvuE,KAAKoqE,eAAeoE,IAAI/pB,GACxBA,EAAOgnB,aAAelmE,EACfk/C,GAGXylB,EAAsBrpE,UAAU6sE,QAAU,SAAUjpB,GAChD,OAAOzkD,KAAKiuE,eAAejuE,KAAKkuE,QAAQzpB,KAG5CylB,EAAsBrpE,UAAUqtE,QAAU,SAAUzpB,GACpB,OAAxBzkD,KAAKoqE,gBACLpqE,KAAKoqE,eAAenqC,OAAOwkB,GAE/B,IAAI2pB,EAAO3pB,EAAOgpB,MACdzqE,EAAOyhD,EAAO0mB,MAgBlB,OAZa,OAATiD,EACApuE,KAAKuqE,QAAUvnE,EAGforE,EAAKjD,MAAQnoE,EAEJ,OAATA,EACAhD,KAAKwqE,QAAU4D,EAGfprE,EAAKyqE,MAAQW,EAEV3pB,GAGXylB,EAAsBrpE,UAAUmtE,YAAc,SAAUvpB,EAAQgqB,GAG5D,OAAIhqB,EAAOonB,gBAAkB4C,EAClBhqB,GAKPzkD,KAAK4qE,WAHe,OAApB5qE,KAAK4qE,WAGa5qE,KAAK2qE,WAAalmB,EAKlBzkD,KAAK4qE,WAAWyB,WAAa5nB,EAE5CA,IAEXylB,EAAsBrpE,UAAUotE,eAAiB,SAAUxpB,GAoBvD,OAnB8B,OAA1BzkD,KAAKqqE,mBACLrqE,KAAKqqE,iBAAmB,IAAIkE,IAEhCvuE,KAAKqqE,iBAAiBmE,IAAI/pB,GAC1BA,EAAOgnB,aAAe,KACtBhnB,EAAOmnB,aAAe,KACK,OAAvB5rE,KAAK8qE,eAGL9qE,KAAK8qE,cAAgB9qE,KAAK6qE,cAAgBpmB,EAC1CA,EAAO4pB,aAAe,OAMtB5pB,EAAO4pB,aAAeruE,KAAK8qE,cAC3B9qE,KAAK8qE,cAAgB9qE,KAAK8qE,cAAcc,aAAennB,GAEpDA,GAGXylB,EAAsBrpE,UAAUqsE,mBAAqB,SAAUzoB,EAAQ11C,GAQnE,OAPA01C,EAAO11C,KAAOA,EAEV/O,KAAKgrE,qBADyB,OAA9BhrE,KAAKgrE,qBACuBhrE,KAAK+qE,qBAAuBtmB,EAG5BzkD,KAAKgrE,qBAAqBwB,oBAAsB/nB,EAEzEA,GAEJylB,EA3e+B,GA6etC4D,GACA,SAASA,GAAsB/+D,EAAMi+D,GACjChtE,KAAK+O,KAAOA,EACZ/O,KAAKgtE,UAAYA,EACjBhtE,KAAKyrE,aAAe,KACpBzrE,KAAK6rE,cAAgB,KAErB7rE,KAAKisE,cAAgB,KAErBjsE,KAAKytE,MAAQ,KAEbztE,KAAKmrE,MAAQ,KAEbnrE,KAAK0uE,SAAW,KAEhB1uE,KAAK2uE,SAAW,KAEhB3uE,KAAKquE,aAAe,KAEpBruE,KAAK4rE,aAAe,KAEpB5rE,KAAKmsE,WAAa,KAElBnsE,KAAKqsE,WAAa,KAElBrsE,KAAKwsE,oBAAsB,MAK/BoC,GAA0C,WAC1C,SAASA,IAEL5uE,KAAK6uE,MAAQ,KAEb7uE,KAAK8uE,MAAQ,KAiEjB,OA1DAF,EAAyB/tE,UAAUk/B,IAAM,SAAU0kB,GAC5B,OAAfzkD,KAAK6uE,OACL7uE,KAAK6uE,MAAQ7uE,KAAK8uE,MAAQrqB,EAC1BA,EAAOkqB,SAAW,KAClBlqB,EAAOiqB,SAAW,OAMlB1uE,KAAK8uE,MAAMH,SAAWlqB,EACtBA,EAAOiqB,SAAW1uE,KAAK8uE,MACvBrqB,EAAOkqB,SAAW,KAClB3uE,KAAK8uE,MAAQrqB,IAKrBmqB,EAAyB/tE,UAAU4L,IAAM,SAAUugE,EAAW+B,GAC1D,IAAItqB,EACJ,IAAKA,EAASzkD,KAAK6uE,MAAkB,OAAXpqB,EAAiBA,EAASA,EAAOkqB,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkBtqB,EAAOgnB,eACrDza,GAAevM,EAAOuoB,UAAWA,GACjC,OAAOvoB,EAGf,OAAO,MAOXmqB,EAAyB/tE,UAAUo/B,OAAS,SAAUwkB,GASlD,IAAI2pB,EAAO3pB,EAAOiqB,SACd1rE,EAAOyhD,EAAOkqB,SAalB,OAZa,OAATP,EACApuE,KAAK6uE,MAAQ7rE,EAGborE,EAAKO,SAAW3rE,EAEP,OAATA,EACAhD,KAAK8uE,MAAQV,EAGbprE,EAAK0rE,SAAWN,EAEE,OAAfpuE,KAAK6uE,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACLvuE,KAAKuI,IAAM,IAAI07C,IA2CnB,OAzCAsqB,EAAc1tE,UAAU2tE,IAAM,SAAU/pB,GACpC,IAAI7iD,EAAM6iD,EAAOuoB,UACbgC,EAAahvE,KAAKuI,IAAIkE,IAAI7K,GACzBotE,IACDA,EAAa,IAAIJ,GACjB5uE,KAAKuI,IAAIg9B,IAAI3jC,EAAKotE,IAEtBA,EAAWjvC,IAAI0kB,IASnB8pB,EAAc1tE,UAAU4L,IAAM,SAAUugE,EAAW+B,GAC/C,IACIE,EAAajvE,KAAKuI,IAAIkE,IADhBugE,GAEV,OAAOiC,EAAaA,EAAWxiE,IAAIugE,EAAW+B,GAAkB,MAOpER,EAAc1tE,UAAUo/B,OAAS,SAAUwkB,GACvC,IAAI7iD,EAAM6iD,EAAOuoB,UAMjB,OALiBhtE,KAAKuI,IAAIkE,IAAI7K,GAEfq+B,OAAOwkB,IAClBzkD,KAAKuI,IAAI2nD,OAAOtuD,GAEb6iD,GAEXrkD,OAAO+B,eAAeosE,EAAc1tE,UAAW,UAAW,CACtD4L,IAAK,WAAc,OAAyB,IAAlBzM,KAAKuI,IAAIkH,MACnCozB,YAAY,EACZC,cAAc,IAElByrC,EAAc1tE,UAAU66C,MAAQ,WAAc17C,KAAKuI,IAAImzC,SAChD6yB,EA7CuB,GA+ClC,SAAS7C,GAAiB38D,EAAMw8D,EAAiBC,GAC7C,IAAIK,EAAgB98D,EAAK88D,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAYlqE,SAC3C4tE,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAAIC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6BtuE,UAAUmpE,SAAW,SAAUv8D,GAAO,OAAOA,aAAew2C,KAAOgO,GAAaxkD,IAC7G0hE,EAA6BtuE,UAAUC,OAAS,WAAc,OAAO,IAAIsuE,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACLpvE,KAAKynD,SAAW,IAAIxD,IACpBjkD,KAAKqvE,SAAW,KAEhBrvE,KAAKsvE,aAAe,KACpBtvE,KAAKuvE,iBAAmB,KACxBvvE,KAAKwvE,aAAe,KACpBxvE,KAAKyvE,aAAe,KACpBzvE,KAAKyqE,eAAiB,KACtBzqE,KAAK0qE,eAAiB,KACtB1qE,KAAK6qE,cAAgB,KACrB7qE,KAAK8qE,cAAgB,KA+MzB,OA7MA1qE,OAAO+B,eAAeitE,EAAsBvuE,UAAW,UAAW,CAC9D4L,IAAK,WACD,OAA+B,OAAxBzM,KAAKyqE,gBAAiD,OAAtBzqE,KAAKwvE,cACjB,OAAvBxvE,KAAK6qE,eAEbhoC,YAAY,EACZC,cAAc,IAElBssC,EAAsBvuE,UAAUqqE,YAAc,SAAU9hE,GACpD,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKqvE,SAAqB,OAAX5qB,EAAiBA,EAASA,EAAO0mB,MAC1D/hE,EAAGq7C,IAGX2qB,EAAsBvuE,UAAUmrE,oBAAsB,SAAU5iE,GAC5D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKuvE,iBAA6B,OAAX9qB,EAAiBA,EAASA,EAAOwnB,cAClE7iE,EAAGq7C,IAGX2qB,EAAsBvuE,UAAU6uE,mBAAqB,SAAUtmE,GAC3D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKwvE,aAAyB,OAAX/qB,EAAiBA,EAASA,EAAOkrB,aAC9DvmE,EAAGq7C,IAGX2qB,EAAsBvuE,UAAUqrE,iBAAmB,SAAU9iE,GACzD,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAKyqE,eAA2B,OAAXhmB,EAAiBA,EAASA,EAAO0nB,WAChE/iE,EAAGq7C,IAGX2qB,EAAsBvuE,UAAUyrE,mBAAqB,SAAUljE,GAC3D,IAAIq7C,EACJ,IAAKA,EAASzkD,KAAK6qE,cAA0B,OAAXpmB,EAAiBA,EAASA,EAAOmnB,aAC/DxiE,EAAGq7C,IAGX2qB,EAAsBvuE,UAAU4rE,KAAO,SAAUlkE,GAC7C,GAAKA,GAGA,KAAMA,aAAe07C,KAAOgO,GAAa1pD,IAC1C,MAAM,IAAI3B,MAAM,yBAA2ByB,EAAUE,GAAO,6CAH5DA,EAAM,IAAI07C,IAKd,OAAOjkD,KAAK2sE,MAAMpkE,GAAOvI,KAAO,MAEpCovE,EAAsBvuE,UAAUkR,UAAY,aAK5Cq9D,EAAsBvuE,UAAU8rE,MAAQ,SAAUpkE,GAC9C,IAAI4xC,EAAQn6C,KACZA,KAAK4sE,SACL,IAAIj2B,EAAe32C,KAAKqvE,SAcxB,GAbArvE,KAAKsvE,aAAe,KACpBtvE,KAAK4vE,SAASrnE,GAAK,SAAUtF,EAAOrB,GAChC,GAAI+0C,GAAgBA,EAAa/0C,MAAQA,EACrCu4C,EAAM01B,mBAAmBl5B,EAAc1zC,GACvCk3C,EAAMm1B,aAAe34B,EACrBA,EAAeA,EAAaw0B,UAE3B,CACD,IAAI1mB,EAAStK,EAAM21B,yBAAyBluE,EAAKqB,GACjD0zC,EAAewD,EAAM41B,sBAAsBp5B,EAAc8N,OAI7D9N,EAAc,CACVA,EAAa82B,QACb92B,EAAa82B,MAAMtC,MAAQ,MAE/BnrE,KAAK6qE,cAAgBl0B,EACrB,IAAK,IAAI8N,EAAS9N,EAAyB,OAAX8N,EAAiBA,EAASA,EAAOmnB,aACzDnnB,IAAWzkD,KAAKqvE,WAChBrvE,KAAKqvE,SAAW,MAEpBrvE,KAAKynD,SAASyI,OAAOzL,EAAO7iD,KAC5B6iD,EAAOmnB,aAAennB,EAAO0mB,MAC7B1mB,EAAOmhB,cAAgBnhB,EAAOohB,aAC9BphB,EAAOohB,aAAe,KACtBphB,EAAOgpB,MAAQ,KACfhpB,EAAO0mB,MAAQ,KAQvB,OAJInrE,KAAKyvE,eACLzvE,KAAKyvE,aAAaE,aAAe,MACjC3vE,KAAK0qE,iBACL1qE,KAAK0qE,eAAeyB,WAAa,MAC9BnsE,KAAKstE,SAUhB8B,EAAsBvuE,UAAUkvE,sBAAwB,SAAUC,EAAQvrB,GACtE,GAAIurB,EAAQ,CACR,IAAI5B,EAAO4B,EAAOvC,MAWlB,OAVAhpB,EAAO0mB,MAAQ6E,EACfvrB,EAAOgpB,MAAQW,EACf4B,EAAOvC,MAAQhpB,EACX2pB,IACAA,EAAKjD,MAAQ1mB,GAEburB,IAAWhwE,KAAKqvE,WAChBrvE,KAAKqvE,SAAW5qB,GAEpBzkD,KAAKsvE,aAAeU,EACbA,EAUX,OARIhwE,KAAKsvE,cACLtvE,KAAKsvE,aAAanE,MAAQ1mB,EAC1BA,EAAOgpB,MAAQztE,KAAKsvE,cAGpBtvE,KAAKqvE,SAAW5qB,EAEpBzkD,KAAKsvE,aAAe7qB,EACb,MAEX2qB,EAAsBvuE,UAAUivE,yBAA2B,SAAUluE,EAAKqB,GACtE,GAAIjD,KAAKynD,SAASpB,IAAIzkD,GAAM,CACxB,IAAIquE,EAAWjwE,KAAKynD,SAASh7C,IAAI7K,GACjC5B,KAAK6vE,mBAAmBI,EAAUhtE,GAClC,IAAImrE,EAAO6B,EAASxC,MAChBzqE,EAAOitE,EAAS9E,MASpB,OARIiD,IACAA,EAAKjD,MAAQnoE,GAEbA,IACAA,EAAKyqE,MAAQW,GAEjB6B,EAAS9E,MAAQ,KACjB8E,EAASxC,MAAQ,KACVwC,EAEX,IAAIxrB,EAAS,IAAIyrB,GAAsBtuE,GAIvC,OAHA5B,KAAKynD,SAASliB,IAAI3jC,EAAK6iD,GACvBA,EAAOohB,aAAe5iE,EACtBjD,KAAKmwE,gBAAgB1rB,GACdA,GAGX2qB,EAAsBvuE,UAAU+rE,OAAS,WACrC,GAAI5sE,KAAKstE,QAAS,CACd,IAAI7oB,OAAS,EAGb,IADAzkD,KAAKuvE,iBAAmBvvE,KAAKqvE,SACxB5qB,EAASzkD,KAAKuvE,iBAA6B,OAAX9qB,EAAiBA,EAASA,EAAO0mB,MAClE1mB,EAAOwnB,cAAgBxnB,EAAO0mB,MAIlC,IAAK1mB,EAASzkD,KAAKwvE,aAAyB,OAAX/qB,EAAiBA,EAASA,EAAOkrB,aAC9DlrB,EAAOmhB,cAAgBnhB,EAAOohB,aAElC,IAAKphB,EAASzkD,KAAKyqE,eAA0B,MAAVhmB,EAAgBA,EAASA,EAAO0nB,WAC/D1nB,EAAOmhB,cAAgBnhB,EAAOohB,aAElC7lE,KAAKwvE,aAAexvE,KAAKyvE,aAAe,KACxCzvE,KAAKyqE,eAAiBzqE,KAAK0qE,eAAiB,KAC5C1qE,KAAK6qE,cAAgB,OAI7BuE,EAAsBvuE,UAAUgvE,mBAAqB,SAAUprB,EAAQqU,GAC9D9H,GAAe8H,EAAUrU,EAAOohB,gBACjCphB,EAAOmhB,cAAgBnhB,EAAOohB,aAC9BphB,EAAOohB,aAAe/M,EACtB94D,KAAKowE,cAAc3rB,KAG3B2qB,EAAsBvuE,UAAUsvE,gBAAkB,SAAU1rB,GAC5B,OAAxBzkD,KAAKyqE,eACLzqE,KAAKyqE,eAAiBzqE,KAAK0qE,eAAiBjmB,GAG5CzkD,KAAK0qE,eAAeyB,WAAa1nB,EACjCzkD,KAAK0qE,eAAiBjmB,IAG9B2qB,EAAsBvuE,UAAUuvE,cAAgB,SAAU3rB,GAC5B,OAAtBzkD,KAAKwvE,aACLxvE,KAAKwvE,aAAexvE,KAAKyvE,aAAehrB,GAGxCzkD,KAAKyvE,aAAaE,aAAelrB,EACjCzkD,KAAKyvE,aAAehrB,IAI5B2qB,EAAsBvuE,UAAU+uE,SAAW,SAAUniE,EAAKrE,GAClDqE,aAAew2C,IACfx2C,EAAI0B,QAAQ/F,GAGZhJ,OAAO2iB,KAAKtV,GAAK0B,SAAQ,SAAUs2B,GAAK,OAAOr8B,EAAGqE,EAAIg4B,GAAIA,OAG3D2pC,EA3N+B,GA6NtCc,GACA,SAASA,GAAsBtuE,GAC3B5B,KAAK4B,IAAMA,EACX5B,KAAK4lE,cAAgB,KACrB5lE,KAAK6lE,aAAe,KAEpB7lE,KAAKisE,cAAgB,KAErBjsE,KAAKmrE,MAAQ,KAEbnrE,KAAKytE,MAAQ,KAEbztE,KAAKmsE,WAAa,KAElBnsE,KAAK4rE,aAAe,KAEpB5rE,KAAK2vE,aAAe,MAiBxBU,GAAiC,WACjC,SAASA,EAAgBxI,GACrB7nE,KAAK6nE,UAAYA,EA4DrB,OA1DAwI,EAAgBvvE,OAAS,SAAU+mE,EAAWhsD,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAIy0D,EAASz0D,EAAOgsD,UAAU74D,QAC9B64D,EAAYA,EAAUpkE,OAAO6sE,GAEjC,OAAO,IAAID,EAAgBxI,IAsB/BwI,EAAgBE,OAAS,SAAU1I,GAC/B,MAAO,CACHl8D,QAAS0kE,EACTxuB,WAAY,SAAUhmC,GAClB,IAAKA,EAID,MAAM,IAAIjV,MAAM,2DAEpB,OAAOypE,EAAgBvvE,OAAO+mE,EAAWhsD,IAG7CklC,KAAM,CAAC,CAACsvB,EAAiB,IAAIhqE,EAAY,IAAIF,MAGrDkqE,EAAgBxvE,UAAU2vE,KAAO,SAAUC,GACvC,IAAIpxE,EAAUW,KAAK6nE,UAAU2I,MAAK,SAAUnJ,GAAK,OAAOA,EAAE2C,SAASyG,MACnE,GAAe,MAAXpxE,EACA,OAAOA,EAGP,MAAM,IAAIuH,MAAM,2CAA6C6pE,EAAW,cAWpF,SAASC,EAAwBjpE,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAZkEipE,CAAwBD,GAAY,MAIpIJ,EAAgBpoE,MAAQlB,EAAmB,CACvCd,MAAOoqE,EACPppE,WAAY,OACZ5H,QAAS,WAAc,OAAO,IAAIgxE,EAAgB,CAAC,IAAItG,QAEpDsG,EA9DyB,GAgFhCM,GAAiC,WACjC,SAASA,EAAgB9I,GACrB7nE,KAAK6nE,UAAYA,EAyDrB,OAvDA8I,EAAgB7vE,OAAS,SAAU+mE,EAAWhsD,GAC1C,GAAIA,EAAQ,CACR,IAAIy0D,EAASz0D,EAAOgsD,UAAU74D,QAC9B64D,EAAYA,EAAUpkE,OAAO6sE,GAEjC,OAAO,IAAIK,EAAgB9I,IAsB/B8I,EAAgBJ,OAAS,SAAU1I,GAC/B,MAAO,CACHl8D,QAASglE,EACT9uB,WAAY,SAAUhmC,GAClB,IAAKA,EAGD,MAAM,IAAIjV,MAAM,2DAEpB,OAAO+pE,EAAgB7vE,OAAO+mE,EAAWhsD,IAG7CklC,KAAM,CAAC,CAAC4vB,EAAiB,IAAItqE,EAAY,IAAIF,MAGrDwqE,EAAgB9vE,UAAU2vE,KAAO,SAAUI,GACvC,IAAIvxE,EAAUW,KAAK6nE,UAAU2I,MAAK,SAAUnJ,GAAK,OAAOA,EAAE2C,SAAS4G,MACnE,GAAIvxE,EACA,OAAOA,EAEX,MAAM,IAAIuH,MAAM,2CAA6CgqE,EAAK,MAGtED,EAAgB1oE,MAAQlB,EAAmB,CACvCd,MAAO0qE,EACP1pE,WAAY,OACZ5H,QAAS,WAAc,OAAO,IAAIsxE,EAAgB,CAAC,IAAIxB,QAEpDwB,EA3DyB,GAwEhCE,GAAa,CAAC,IAAI1B,IAKlB2B,GAAyB,IAAIT,GADd,CAAC,IAAItG,KAEpBgH,GAAyB,IAAIJ,GAAgBE,IA2B7CG,GAA6B,WAC7B,SAASA,KAOT,OADAA,EAAYhmE,kBAAoB,WAAc,OAAOimE,GAA4BD,EAAa9H,KACvF8H,EARqB,GAY5BC,GADwCjI,GAyBxCkI,GAAkC,WAClC,SAASA,KAOT,OADAA,EAAiBlmE,kBAAoB,WAAc,OAAOmmE,GAAkCD,EAAkBhI,KACvGgI,EAR0B,GAYjCC,GAD8CnI;;;;;;;;AAUlD,SAASoI,GAA4CxjE,EAASoY,EAAUqrD,EAAWC,GAC/E,IAAI1hE,EAAM,8GAAgHoW,EAAW,sBAAwBqrD,EAAY,KAMzK,OALIC,IACA1hE,GACI,wJAcZ,SAAS2hE,EAAe3hE,EAAKhC,GACzB,IAAI4jE,EAAM,IAAI5qE,MAAMgJ,GAEpB,OADA6hE,GAAiBD,EAAK5jE,GACf4jE,EAdAD,CAAe3hE,EAAKhC,GAgB/B,SAAS6jE,GAAiBD,EAAK5jE,GAC3B4jE,EAAIlnD,IAAuB1c,EAC3B4jE,EAAIhnD,IAAgB5c,EAAQ8jE,SAAShtE,KAAKkJ,GAK9C,SAAS+jE,GAAmBn+B,GACxB,OAAO,IAAI5sC,MAAM,wDAA0D4sC;;;;;;;OAc/E,SAASo+B,GAAejtD,EAAMktD,EAAgBC,GAU1C,IAAIr2C,EAAQ9W,EAAK8W,MACbs2C,EAAoB,KAARt2C,EAChB,OAAIs2C,IAAcF,GACdltD,EAAK8W,OAAiB,KAARA,EAAsCq2C,EACpDntD,EAAKqtD,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4BttD,EAAMotD,EAAWxsE,GAClD,OAAkB,KAAbof,EAAK8W,SAAuCs2C,GAAaptD,EAAKqtD,WAAazsE,IAC5Eof,EAAKqtD,UAAYzsE,EAAQ,GAClB,GAuBf,SAAS2sE,GAAWvtD,EAAMpf,GACtB,OAAOof,EAAKqiB,MAAMzhC,GAKtB,SAAS4sE,GAAcxtD,EAAMpf,GACzB,OAAOof,EAAKqiB,MAAMzhC,GAKtB,SAAS6sE,GAAeztD,EAAMpf,GAC1B,OAAOof,EAAKqiB,MAAMzhC,GAKtB,SAAS8sE,GAAqB1tD,EAAMpf,GAChC,OAAOof,EAAKqiB,MAAMzhC,GAKtB,SAAS+sE,GAAY3tD,EAAMpf,GACvB,OAAOof,EAAKqiB,MAAMzhC,GAEtB,IAAIgtE,GACA,SAASA,OAQTC,GAAW,CACXC,oBAAgBvrE,EAChBwrE,oBAAgBxrE,EAChB4zC,wBAAoB5zC,EACpByrE,yBAAqBzrE,EACrB0rE,uBAAmB1rE,EACnB2rE,sBAAkB3rE,EAClB4rE,2BAAuB5rE,EACvB6rE,oBAAgB7rE,EAChB8rE,wBAAoB9rE,EACpB+rE,wBAAoB/rE,EACpBgsE,iBAAahsE,EACbisE,gBAAYjsE,EACZksE,wBAAoBlsE,EACpBmsE,iBAAansE,EACbosE,sBAAkBpsE,EAClBqsE,oBAAgBrsE,EAChBssE,wBAAoBtsE,GAUpBusE,GAAO,aACPC,GAAiB,IAAIzvB,IACzB,SAAS0vB,GAAS1tE,GACd,IAAIrE,EAAM8xE,GAAejnE,IAAIxG,GAK7B,OAJKrE,IACDA,EAAMyG,EAAUpC,GAAS,IAAMytE,GAAejkE,KAC9CikE,GAAenuC,IAAIt/B,EAAOrE,IAEvBA,EAWX,IAYIgyE,GAAqB,EAkBzB,SAASC,GAAalvD,EAAM9c,EAAKisE,EAAY7wE,GAEzC,UAAkB,EAAb0hB,EAAK8W,QACLu1B,GAFWrsC,EAAKovD,UAESlsE,EAAI0S,aAAeu5D,GAAa7wE,IAKlE,SAAS+wE,GAAsBrvD,EAAM9c,EAAKisE,EAAY7wE,GAClD,QAAI4wE,GAAalvD,EAAM9c,EAAKisE,EAAY7wE,KACpC0hB,EAAKovD,UAAUlsE,EAAI0S,aAAeu5D,GAAc7wE,GACzC,GAIf,SAASgxE,GAAsBtvD,EAAM9c,EAAKisE,EAAY7wE,GAClD,IAAI+iB,EAAWrB,EAAKovD,UAAUlsE,EAAI0S,aAAeu5D,GACjD,GAAkB,EAAbnvD,EAAK8W,QAAsCy1B,GAAelrC,EAAU/iB,GAAQ,CAC7E,IAAIixE,EAAcrsE,EAAIssE,SAASL,GAAYhwE,KAC3C,MAAMstE,GAA4CoB,GAASY,mBAAmBzuD,EAAM9c,EAAIid,WAAYovD,EAAc,KAAOluD,EAAUkuD,EAAc,KAAOjxE,EAAmD,IAA9B,EAAb0hB,EAAK8W,SAG7K,SAAS24C,GAAwBzvD,GAE7B,IADA,IAAI0vD,EAAW1vD,EACR0vD,GACsB,EAArBA,EAASxsE,IAAIyE,QACb+nE,EAAS54C,OAAS,GAEtB44C,EAAWA,EAASC,qBAAuBD,EAASx4D,OAG5D,SAAS04D,GAAsC5vD,EAAM6vD,GAEjD,IADA,IAAIH,EAAW1vD,EACR0vD,GAAYA,IAAaG,GAC5BH,EAAS54C,OAAS,GAClB44C,EAAWA,EAASC,qBAAuBD,EAASx4D,OAG5D,SAAS44D,GAAc9vD,EAAMG,EAAWm3C,EAAWyY,GAC/C,IAMI,OADAN,GAHgC,SADlBzvD,EAAK9c,IAAIm/B,MAAMliB,GACLxY,MACpB6lE,GAAcxtD,EAAMG,GAAWssB,cAC/BzsB,GAEG6tD,GAASa,YAAY1uD,EAAMG,EAAWm3C,EAAWyY,GAE5D,MAAOtxE,GAEHuhB,EAAKgwD,KAAK9hC,aAAa9nB,YAAY3nB,IAG3C,SAASwxE,GAAsBjwD,GAC3B,OAAIA,EAAK9I,OAEEs2D,GADUxtD,EAAK9I,OACW8I,EAAKkwD,cAAc/vD,WAEjD,KAOX,SAASgwD,GAAanwD,GAElB,OADiBA,EAAK9I,OAEX8I,EAAKkwD,cAAch5D,OAGnB,KAGf,SAASk5D,GAAWpwD,EAAM9c,GACtB,OAAoB,UAAZA,EAAIyE,OACR,KAAK,EACD,OAAO6lE,GAAcxtD,EAAM9c,EAAIid,WAAWkwD,cAC9C,KAAK,EACD,OAAO9C,GAAWvtD,EAAM9c,EAAIid,WAAWmwD,YAMnD,SAASC,GAAgBvwD,GACrB,QAASA,EAAK9I,WAAwC,MAA3B8I,EAAKkwD,cAAcvoE,OAElD,SAAS6oE,GAAexwD,GACpB,SAASA,EAAK9I,QAAuC,MAA3B8I,EAAKkwD,cAAcvoE,OAEjD,SAAS8oE,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,EAAiB,GACjBC,EAAkB,EAClBC,EAAa,GAajB,OAZIH,GACAA,EAAkBpmE,SAAQ,SAAU7K,GAChC,IAAIorB,EAAKvsB,EAAOmB,EAAI,GAAI+wE,EAAU3lD,EAAG,GAAIimD,EAAYjmD,EAAG,GACjC,iBAAZ2lD,GACPG,EAAeH,GAAWM,EAC1BF,GAAmBL,GAAcC,IAGjCK,EAAWL,GAAWM,KAI3B,CAAEH,eAAgBA,EAAgBE,WAAYA,EAAYD,gBAAiBA,GAEtF,SAASG,GAAa70B,EAAM80B,GACxB,OAAO90B,EAAKx4C,KAAI,SAAUtF,GACtB,IAAIqB,EACA2B,EACAqG,EAWJ,OAVI/L,MAAM+H,QAAQrF,IACSqJ,GAAvBhI,EAAKnB,EAAOF,EAAO,IAAe,GAAIgD,EAAQ3B,EAAG,KAGjDgI,EAAQ,EACRrG,EAAQhD,GAERgD,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuB4vE,GACvEz1E,OAAO+B,eAAe8D,EAAOwF,GAAQ,CAAExI,MAAO4yE,EAAY/yC,cAAc,IAErE,CAAEx2B,MAAOA,EAAOrG,MAAOA,EAAO0tE,SAAUA,GAAS1tE,OAGhE,SAAS6vE,GAAuBnxD,EAAMoxD,EAAYluE,GAC9C,IAAIqsC,EAAersC,EAAIqsC,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAa5nC,QAC0C,IAAlC,SAArB4nC,EAAa5nC,QACb4nC,EAAa/0B,QAAQ62D,uBAClB9hC,EAAa/0B,QAAQ62D,sBAAsBtjE,gBACvCpT,EAAQ4O,kBAAkBwoC,OAG3By7B,GAAcxtD,EAAM9c,EAAIqsC,aAAapvB,WAAWkwD,mBAP3D,EAWOe,EAGf,IAAIE,GAAmB,IAAIC,QAC3B,SAASC,GAAkB92E,GACvB,IAAI4D,EAAQgzE,GAAiBxpE,IAAIpN,GAMjC,OALK4D,KACDA,EAAQ5D,GAAQ,WAAc,OAAOo0E,OAC/Bp0E,QAAUA,EAChB42E,GAAiB1wC,IAAIlmC,EAAS4D,IAE3BA,EAOX,SAASmzE,GAAqBzxD,EAAM6uB,EAAQzhB,EAAYnD,EAAajtB,GAElD,IAAX6xC,IACAzhB,EAAapN,EAAK1H,SAAS8U,WAAWgjD,GAAWpwD,EAAMA,EAAK9c,IAAIwuE,sBAEpEC,GAAwB3xD,EAAM6uB,EAAQ,EAAG7uB,EAAK9c,IAAIm/B,MAAM1lC,OAAS,EAAGywB,EAAYnD,EAAajtB,GAEjG,SAAS20E,GAAwB3xD,EAAM6uB,EAAQimB,EAAYjwC,EAAUuI,EAAYnD,EAAajtB,GAC1F,IAAK,IAAIR,EAAIs4D,EAAYt4D,GAAKqoB,EAAUroB,IAAK,CACzC,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GACT,GAAhBo1E,EAAQjqE,OACRkqE,GAAgB7xD,EAAM4xD,EAAS/iC,EAAQzhB,EAAYnD,EAAajtB,GAGpER,GAAKo1E,EAAQE,YAGrB,SAASC,GAA0B/xD,EAAMgyD,EAAgBnjC,EAAQzhB,EAAYnD,EAAajtB,GAEtF,IADA,IAAIi1E,EAAWjyD,EACRiyD,IAAa1B,GAAgB0B,IAChCA,EAAWA,EAAS/6D,OAMxB,IAJA,IAAIkJ,EAAW6xD,EAAS/6D,OACpBg7D,EAAY/B,GAAa8B,GAEzBptD,EAAWqtD,EAAU/xD,UAAY+xD,EAAUJ,WACtCt1E,EAFQ01E,EAAU/xD,UAAY,EAEd3jB,GAAKqoB,EAAUroB,IAAK,CACzC,IAAIo1E,EAAUxxD,EAASld,IAAIm/B,MAAM7lC,GAC7Bo1E,EAAQI,iBAAmBA,GAC3BH,GAAgBzxD,EAAUwxD,EAAS/iC,EAAQzhB,EAAYnD,EAAajtB,GAGxER,GAAKo1E,EAAQE,WAEjB,IAAK1xD,EAASlJ,OAAQ,CAElB,IAAIi7D,EAAiBnyD,EAAKgwD,KAAK54B,iBAAiB46B,GAChD,GAAIG,EACA,IAAS31E,EAAI,EAAGA,EAAI21E,EAAex1E,OAAQH,IACvC41E,GAAqBpyD,EAAMmyD,EAAe31E,GAAIqyC,EAAQzhB,EAAYnD,EAAajtB,IAK/F,SAAS60E,GAAgB7xD,EAAM4xD,EAAS/iC,EAAQzhB,EAAYnD,EAAajtB,GACrE,GAAoB,EAAhB40E,EAAQjqE,MACRoqE,GAA0B/xD,EAAM4xD,EAAQS,UAAUzxE,MAAOiuC,EAAQzhB,EAAYnD,EAAajtB,OAEzF,CACD,IAAIs1E,EAAKlC,GAAWpwD,EAAM4xD,GAe1B,GAde,IAAX/iC,GAAmD,SAAhB+iC,EAAQjqE,OACnB,GAAvBiqE,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqBpyD,EAAMsyD,EAAIzjC,EAAQzhB,EAAYnD,EAAajtB,GAEzC,GAAvB40E,EAAQW,cAERH,GADe5E,GAAcxtD,EAAM4xD,EAAQzxD,WAAWssB,cACvB6lC,EAAIzjC,EAAQzhB,EAAYnD,EAAajtB,IAIxEo1E,GAAqBpyD,EAAMsyD,EAAIzjC,EAAQzhB,EAAYnD,EAAajtB,GAEhD,SAAhB40E,EAAQjqE,MAER,IADA,IAAI6qE,EAAgBhF,GAAcxtD,EAAM4xD,EAAQzxD,WAAWsyD,cAAcC,eAChE5xC,EAAI,EAAGA,EAAI0xC,EAAc71E,OAAQmkC,IACtC2wC,GAAqBe,EAAc1xC,GAAI+N,EAAQzhB,EAAYnD,EAAajtB,GAG5D,EAAhB40E,EAAQjqE,QAAgCiqE,EAAQp3D,QAAQrb,MACxDwyE,GAAwB3xD,EAAM6uB,EAAQ+iC,EAAQzxD,UAAY,EAAGyxD,EAAQzxD,UAAYyxD,EAAQE,WAAY1kD,EAAYnD,EAAajtB,IAI1I,SAASo1E,GAAqBpyD,EAAMowD,EAAYvhC,EAAQzhB,EAAYnD,EAAajtB,GAC7E,IAAIsb,EAAW0H,EAAK1H,SACpB,OAAQu2B,GACJ,KAAK,EACDv2B,EAAS4P,YAAYkF,EAAYgjD,GACjC,MACJ,KAAK,EACD93D,EAAS05B,aAAa5kB,EAAYgjD,EAAYnmD,GAC9C,MACJ,KAAK,EACD3R,EAAS6Q,YAAYiE,EAAYgjD,GACjC,MACJ,KAAK,EACDpzE,EAAO2B,KAAKyxE,IAIxB,IAAIuC,GAAe,kBACnB,SAASC,GAAezzE,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAImrB,EAAQnrB,EAAKmrB,MAAMqoD,IACvB,MAAO,CAACroD,EAAM,GAAIA,EAAM,IAE5B,MAAO,CAAC,GAAInrB,GAEhB,SAAS0zE,GAAiBrD,GAEtB,IADA,IAAI7nE,EAAQ,EACHnL,EAAI,EAAGA,EAAIgzE,EAAS7yE,OAAQH,IACjCmL,GAAS6nE,EAAShzE,GAAGmL,MAEzB,OAAOA,EA2CX,SAASmrE,GAAkBx1D,GACvB,OAAY,MAALA,EAAYA,EAAEtZ,WAAa,GAEtC,IAUI+uE,GAAkB,IAAIt3E,OACtBu3E,GAAsBhE,GAASxsB,IAC/BywB,GAAsBjE,GAASxoE,IAC/B0sE,GAAsBlE,GAASplE,IAkDnC,SAASupE,GAAmBrlE,EAAMslE,EAAQnrE,QAChB,IAAlBA,IAA4BA,EAAgBu6C,GAAS/7C,oBACzD,IAAIa,EAASF,GAAmB0G,GAChC,IACI,GAAmB,EAAfslE,EAAOzrE,MACP,OAAOyrE,EAAO9xE,MAKlB,GAHmB,EAAf8xE,EAAOzrE,QACPM,EAAgB,MAED,EAAfmrE,EAAOzrE,MACP,OAAOmG,EAAK+5C,QAAQ//C,IAAIsrE,EAAO9xE,MAAO2G,GAE1C,IAAIorE,EAAaD,EAAOpE,SACxB,OAAQqE,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAOplE,EAEf,IACI5F,EADAorE,EAAcxlE,EAAKylE,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmB3lE,EAAK85C,WAAW0rB,EAAY1yE,OAKnD,YAJyB2B,IAArBkxE,IACAA,EAAmB3lE,EAAK85C,WAAW0rB,EAAY1yE,OAC3C8yE,GAAwB5lE,EAAMwlE,IAE/BG,IAAqBV,QAAkBxwE,EAAYkxE,EAEzD,IAAKvrE,EAAgBrF,EAAiBuwE,EAAO9xE,SAwB1D,SAASqyE,EAAcn8B,EAAUt0C,GAC7B,IAAIZ,EAAaY,EAAIZ,WACrB,OAAqB,MAAdA,IAAsC,QAAfA,GAAwBA,IAAek1C,EAAS+7B,KAAK9jE,OALvF,SAASmkE,EAA0Bp8B,EAAU/nC,GACzC,OAAO+nC,EAAS+7B,KAAKM,QAAQ3vE,QAAQuL,IAAU,EAK3CmkE,CAA0Bp8B,EAAUl1C,IA3ByBqxE,CAAc7lE,EAAM5F,GAAgB,CAC7F,IAAItH,EAAQkN,EAAK85C,WAAWjrD,OAQ5B,OAPAmR,EAAKylE,KAAK5wE,UAAU/B,GAASkN,EAAKylE,KAAKC,eAAeJ,EAAOpE,UAAY,CACrErnE,MAAO,KACPrJ,MAAO4J,EAAcxN,QACrB0hD,KAAM,GAAIx7C,MAAOA,EACjBU,MAAO8xE,EAAO9xE,OAElBwM,EAAK85C,WAAWhnD,GAASmyE,GACjBjlE,EAAK85C,WAAWhnD,GACpB8yE,GAAwB5lE,EAAMA,EAAKylE,KAAKC,eAAeJ,EAAOpE,WAEjE,OAAmB,EAAfoE,EAAOzrE,MACLM,EAEJ6F,EAAK+5C,QAAQ//C,IAAIsrE,EAAO9xE,MAAO2G,GAE1C,QACIb,GAAmBE,IAW3B,SAASosE,GAAwBl8B,EAAU87B,GACvC,IAAIQ,EACJ,OAA4B,UAApBR,EAAY3rE,OAChB,KAAK,IACDmsE,EAsBZ,SAASC,EAAav8B,EAAUp3C,EAAMg8C,GAClC,IAAI2L,EAAM3L,EAAKz/C,OACf,OAAQorD,GACJ,KAAK,EACD,OAAO,IAAI3nD,EACf,KAAK,EACD,OAAO,IAAIA,EAAK+yE,GAAmB37B,EAAU4E,EAAK,KACtD,KAAK,EACD,OAAO,IAAIh8C,EAAK+yE,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIh8C,EAAK+yE,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,KACpI,QAEI,IADA,IAAI43B,EAAY,GACPx3E,EAAI,EAAGA,EAAIurD,EAAKvrD,IACrBw3E,EAAUx3E,GAAK22E,GAAmB37B,EAAU4E,EAAK5/C,IAErD,OAAO,IAAK4D,EAAKL,KAAKlD,MAAMuD,EAAMvB,EAAS,MAAC,GAASm1E,MAtCxCD,CAAav8B,EAAU87B,EAAYh1E,MAAOg1E,EAAYl3B,MACnE,MACJ,KAAK,KACD03B,EAsCZ,SAASG,EAAaz8B,EAAU98C,EAAS0hD,GACrC,IAAI2L,EAAM3L,EAAKz/C,OACf,OAAQorD,GACJ,KAAK,EACD,OAAOrtD,IACX,KAAK,EACD,OAAOA,EAAQy4E,GAAmB37B,EAAU4E,EAAK,KACrD,KAAK,EACD,OAAO1hD,EAAQy4E,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,KAC5F,KAAK,EACD,OAAO1hD,EAAQy4E,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,IAAK+2B,GAAmB37B,EAAU4E,EAAK,KACnI,QAEI,IADA,IAAI43B,EAAY,GACPx3E,EAAI,EAAGA,EAAIurD,EAAKvrD,IACrBw3E,EAAUx3E,GAAK22E,GAAmB37B,EAAU4E,EAAK5/C,IAErD,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASm1E,KAtDzBC,CAAaz8B,EAAU87B,EAAYh1E,MAAOg1E,EAAYl3B,MACnE,MACJ,KAAK,KACD03B,EAAaX,GAAmB37B,EAAU87B,EAAYl3B,KAAK,IAC3D,MACJ,KAAK,IACD03B,EAAaR,EAAYh1E,MAWjC,OAJIw1E,IAAef,IAAkC,OAAfe,GAA6C,iBAAfA,GAC1C,OAApBR,EAAY3rE,OAAqE,mBAA3BmsE,EAAWzmE,cACnEimE,EAAY3rE,OAAS,aAEHpF,IAAfuxE,EAA2Bf,GAAkBe,EAgHxD,SAASI,GAAmBC,EAAa1qC,GACrC,IAAI+oC,EAAgB2B,EAAY1B,cAAcC,eAI9C,IAHiB,MAAbjpC,GAAqBA,GAAa+oC,EAAc71E,UAChD8sC,EAAY+oC,EAAc71E,OAAS,GAEnC8sC,EAAY,EACZ,OAAO,KAEX,IAAIzpB,EAAOwyD,EAAc/oC,GAMzB,OALAzpB,EAAK2vD,oBAAsB,KAC3BhlE,GAAgB6nE,EAAe/oC,GAE/BokC,GAASgB,mBAAmB7uD,GAC5Bo0D,GAAmBp0D,GACZA,EA+BX,SAASq0D,GAAyBF,EAAaG,EAAUt0D,GACrD,IAAIu0D,EAAiBD,EAAWlE,GAAWkE,EAAUA,EAASpxE,IAAIwuE,oBAC9DyC,EAAY9D,cACZjjD,EAAapN,EAAK1H,SAAS8U,WAAWmnD,GACtCtqD,EAAcjK,EAAK1H,SAAS2R,YAAYsqD,GAG5C9C,GAAqBzxD,EAAM,EAAsBoN,EAAYnD,OAAa1nB,GAE9E,SAAS6xE,GAAmBp0D,GACxByxD,GAAqBzxD,EAAM,EAAqB,KAAM,UAAMzd;;;;;;;OAUhE,IAAIiyE,GAAgB,IAAI/4E,OAMxB,SAASg5E,GAAkCt9B,GACvC,OAAOA,EAAiBu9B,eAE5B,IAAIC,GAAmC,SAAU9tD,GAE7C,SAAS8tD,EAAkBhgD,EAAUuvC,EAAewQ,EAAgBE,EAASC,EAAU5oE,GACnF,IAAIupC,EAGJ3uB,EAAOjqB,KAAKvB,OAASA,KAOrB,OANAm6C,EAAM7gB,SAAWA,EACjB6gB,EAAM0uB,cAAgBA,EACtB1uB,EAAMo/B,QAAUA,EAChBp/B,EAAMq/B,SAAWA,EACjBr/B,EAAMvpC,mBAAqBA,EAC3BupC,EAAMk/B,eAAiBA,EAChBl/B,EA2CX,OAvDAz5C,EAAU44E,EAAmB9tD,GAc7BprB,OAAO+B,eAAem3E,EAAkBz4E,UAAW,SAAU,CACzD4L,IAAK,WACD,IAAIgtE,EAAY,GACZ1oE,EAAS/Q,KAAKu5E,QAClB,IAAK,IAAIt0E,KAAY8L,EAEjB0oE,EAAUn2E,KAAK,CAAE2B,SAAUA,EAAUy0E,aADlB3oE,EAAO9L,KAG9B,OAAOw0E,GAEX52C,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAem3E,EAAkBz4E,UAAW,UAAW,CAC1D4L,IAAK,WACD,IAAIktE,EAAa,GACjB,IAAK,IAAI10E,KAAYjF,KAAKw5E,SAEtBG,EAAWr2E,KAAK,CAAE2B,SAAUA,EAAUy0E,aADnB15E,KAAKw5E,SAASv0E,KAGrC,OAAO00E,GAEX92C,YAAY,EACZC,cAAc,IAKlBw2C,EAAkBz4E,UAAUC,OAAS,SAAUkL,EAAU+vC,EAAkBgtB,EAAoB5sB,GAC3F,IAAKA,EACD,MAAM,IAAIv1C,MAAM,+BAEpB,IAAIgzE,EAAUzD,GAAkBn2E,KAAKq5E,gBACjCQ,EAAqBD,EAAQ5yC,MAAM,GAAG7nB,QAAQ26D,kBAAkBh1D,UAChEH,EAAO6tD,GAASE,eAAe1mE,EAAU+vC,GAAoB,GAAIgtB,EAAoB6Q,EAASz9B,EAAUg9B,IACxG5jD,EAAY68C,GAAeztD,EAAMk1D,GAAoBvxD,SAIzD,OAHIygD,GACApkD,EAAK1H,SAASY,aAAas0D,GAAcxtD,EAAM,GAAGqwD,cAAe,aAActL,GAAQC,MAEpF,IAAIoQ,GAAcp1D,EAAM,IAAIq1D,GAASr1D,GAAO4Q,IAEhD+jD,EAxD2B,CAyDpClR,IACE2R,GAA+B,SAAUvuD,GAEzC,SAASuuD,EAAc7/B,EAAO+/B,EAAUC,GACpC,IAAI//B,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAQjC,OAPAm6C,EAAMD,MAAQA,EACdC,EAAM8/B,SAAWA,EACjB9/B,EAAM+/B,WAAaA,EACnB//B,EAAMggC,OAAShgC,EAAMD,MAAMryC,IAAIm/B,MAAM,GACrCmT,EAAMp1B,SAAWk1D,EACjB9/B,EAAMigC,kBAAoBH,EAC1B9/B,EAAM7xB,SAAW4xD,EACV//B,EAqBX,OA/BAz5C,EAAUq5E,EAAevuD,GAYzBprB,OAAO+B,eAAe43E,EAAcl5E,UAAW,WAAY,CACvD4L,IAAK,WACD,OAAO,IAAIy8D,GAAWiJ,GAAcnyE,KAAKk6C,MAAOl6C,KAAKm6E,OAAOr1D,WAAWkwD,gBAE3EnyC,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe43E,EAAcl5E,UAAW,WAAY,CACvD4L,IAAK,WAAc,OAAO,IAAI4tE,GAAUr6E,KAAKk6C,MAAOl6C,KAAKm6E,SACzDt3C,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe43E,EAAcl5E,UAAW,gBAAiB,CAC5D4L,IAAK,WAAc,OAAOzM,KAAKk6E,WAAWt5E,aAC1CiiC,YAAY,EACZC,cAAc,IAElBi3C,EAAcl5E,UAAUy1C,QAAU,WAAct2C,KAAKi6E,SAAS3jC,WAC9DyjC,EAAcl5E,UAAUkR,UAAY,SAAUonC,GAAYn5C,KAAKi6E,SAASloE,UAAUonC,IAC3E4gC,EAhCuB,CAiChC5R,IACF,SAASmS,GAAwB31D,EAAM41D,EAAOC,GAC1C,OAAO,IAAIr/B,GAAkBx2B,EAAM41D,EAAOC,GAE9C,IAAIr/B,GAAmC,WACnC,SAASA,EAAkBjB,EAAOigC,EAAQp1C,GACtC/kC,KAAKk6C,MAAQA,EACbl6C,KAAKm6E,OAASA,EACdn6E,KAAK+kC,MAAQA,EAIb/kC,KAAKq3E,eAAiB,GA4F1B,OA1FAj3E,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,UAAW,CAC1D4L,IAAK,WAAc,OAAO,IAAIy8D,GAAWlpE,KAAK+kC,MAAMiwC,gBACpDnyC,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,WAAY,CAC3D4L,IAAK,WAAc,OAAO,IAAI4tE,GAAUr6E,KAAKk6C,MAAOl6C,KAAKm6E,SACzDt3C,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,iBAAkB,CAEjE4L,IAAK,WAGD,IAFA,IAAIkY,EAAO3kB,KAAKk6C,MACZqgC,EAAQv6E,KAAKm6E,OAAOt+D,QAChB0+D,GAAS51D,GACb41D,EAAQzF,GAAanwD,GACrBA,EAAOA,EAAK9I,OAEhB,OAAO8I,EAAO,IAAI01D,GAAU11D,EAAM41D,GAAS,IAAIF,GAAUr6E,KAAKk6C,MAAO,OAEzErX,YAAY,EACZC,cAAc,IAElBqY,EAAkBt6C,UAAU66C,MAAQ,WAEhC,IADA,IACSv6C,EADCnB,KAAKq3E,eAAe/1E,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAIwjB,EAAOk0D,GAAmB74E,KAAK+kC,MAAO5jC,GAC1CqxE,GAASU,YAAYvuD,KAG7Bw2B,EAAkBt6C,UAAU4L,IAAM,SAAUlH,GACxC,IAAIof,EAAO3kB,KAAKq3E,eAAe9xE,GAC/B,GAAIof,EAAM,CACN,IAAI81D,EAAM,IAAIT,GAASr1D,GAEvB,OADA81D,EAAI9gC,yBAAyB35C,MACtBy6E,EAEX,OAAO,MAEXr6E,OAAO+B,eAAeg5C,EAAkBt6C,UAAW,SAAU,CACzD4L,IAAK,WAAc,OAAOzM,KAAKq3E,eAAe/1E,QAC9CuhC,YAAY,EACZC,cAAc,IAElBqY,EAAkBt6C,UAAUi6C,mBAAqB,SAAUa,EAAa/tC,EAASrI,GAC7E,IAAIy1C,EAAUW,EAAYb,mBAAmBltC,GAAW,IAExD,OADA5N,KAAK47C,OAAOZ,EAASz1C,GACdy1C,GAEXG,EAAkBt6C,UAAUg7C,gBAAkB,SAAUC,EAAkBv2C,EAAOyG,EAAU+vC,EAAkBC,GACzG,IAAIC,EAAkBjwC,GAAYhM,KAAKk8C,eAClCF,GAAiBF,aAA4BgtB,KAC9C9sB,EAAcC,EAAgBxvC,IAAI8B,KAEtC,IAAI6tC,EAAeN,EAAiBh7C,OAAOm7C,EAAiBF,OAAkB70C,EAAW80C,GAEzF,OADAh8C,KAAK47C,OAAOQ,EAAar3B,SAAUxf,GAC5B62C,GAEXjB,EAAkBt6C,UAAU+6C,OAAS,SAAUZ,EAASz1C,GACpD,GAAIy1C,EAAQpS,UACR,MAAM,IAAIhiC,MAAM,sDAEpB,IAAI8zE,EAAW1/B;;;;;;;;AAIf,OArSR,SAAS2/B,EAAmB/7D,EAAYk6D,EAAa1qC,EAAWzpB,GAC5D,IAAIwyD,EAAgB2B,EAAY1B,cAAcC,eAC1CjpC,MAAAA,IACAA,EAAY+oC,EAAc71E,QAE9BqjB,EAAK2vD,oBAAsB11D,EAC3BxP,GAAW+nE,EAAe/oC,EAAWzpB,GAMzC,SAASi2D,EAAoBC,EAAel2D,GACxC,IAAIm2D,EAAiBlG,GAAsBjwD,GAC3C,GAAKm2D,GAAkBA,IAAmBD,KACzB,GAAbl2D,EAAK8W,OADT,CAWA9W,EAAK8W,OAAS,GACd,IAAIs/C,EAAiBD,EAAepqE,SAASsqE,gBACxCD,IACDA,EAAiBD,EAAepqE,SAASsqE,gBAAkB,IAE/DD,EAAez3E,KAAKqhB,GAKxB,SAASs2D,EAA4BrB,EAASrD,GAC1C,KAAoB,EAAhBA,EAAQjqE,OAAZ,CAGAstE,EAAQsB,WAAa,EACrB3E,EAAQjqE,OAAS,EAEjB,IADA,IAAIuoE,EAAgB0B,EAAQ16D,OACrBg5D,GACHA,EAAcsG,YAAc,EAC5BtG,EAAgBA,EAAch5D,QAXlCo/D,CAA4Bt2D,EAAK9I,OAAOhU,IAAK8c,EAAKkwD,gBA1BlD+F,CAAoB9B,EAAan0D,GACjC6tD,GAASgB,mBAAmB7uD,GAE5Bq0D,GAAyBF,EADV1qC,EAAY,EAAI+oC,EAAc/oC,EAAY,GAAK,KACdzpB,GAyR5Cg2D,CAAmB36E,KAAKk6C,MAAOl6C,KAAK+kC,MAAOx/B,EAD5Bm1E,EAASxgC,OAExBwgC,EAAS/gC,yBAAyB35C,MAC3Bg7C,GAEXG,EAAkBt6C,UAAU47C,KAAO,SAAUzB,EAASywB,GAClD,GAAIzwB,EAAQpS,UACR,MAAM,IAAIhiC,MAAM,oDAEpB,IAAIilE,EAAgB7rE,KAAKq3E,eAAexuE,QAAQmyC,EAAQd,OAExD,OAjOR,SAASkhC,EAAiBtC,EAAauC,EAAcC,GACjD,IAAInE,EAAgB2B,EAAY1B,cAAcC,eAC1C1yD,EAAOwyD,EAAckE,GACzB/rE,GAAgB6nE,EAAekE,GACX,MAAhBC,IACAA,EAAenE,EAAc71E,QAEjC8N,GAAW+nE,EAAemE,EAAc32D,GAGxC6tD,GAASgB,mBAAmB7uD,GAC5Bo0D,GAAmBp0D,GAEnBq0D,GAAyBF,EADVwC,EAAe,EAAInE,EAAcmE,EAAe,GAAK,KACpB32D,GAmN5Cy2D,CAAiBp7E,KAAK+kC,MAAO8mC,EAAeJ,GACrCzwB,GAEXG,EAAkBt6C,UAAUgI,QAAU,SAAUmyC,GAC5C,OAAOh7C,KAAKq3E,eAAexuE,QAAQmyC,EAAQd,QAE/CiB,EAAkBt6C,UAAUo/B,OAAS,SAAU16B,GAC3C,IAAIqoC,EAAWirC,GAAmB74E,KAAK+kC,MAAOx/B,GAC1CqoC,GACA4kC,GAASU,YAAYtlC,IAG7BuN,EAAkBt6C,UAAUq4C,OAAS,SAAU3zC,GAC3C,IAAIof,EAAOk0D,GAAmB74E,KAAK+kC,MAAOx/B,GAC1C,OAAOof,EAAO,IAAIq1D,GAASr1D,GAAQ,MAEhCw2B,EApG2B,GAsGtC,SAASogC,GAAwB52D,GAC7B,OAAO,IAAIq1D,GAASr1D,GAExB,IAAIq1D,GAA0B,WAC1B,SAASA,EAAS9/B,GACdl6C,KAAKk6C,MAAQA,EACbl6C,KAAK24C,kBAAoB,KACzB34C,KAAK04C,QAAU,KAmEnB,OAjEAt4C,OAAO+B,eAAe63E,EAASn5E,UAAW,YAAa,CACnD4L,IAAK,WAAc,OAvrB3B,SAAS+uE,EAAgB72D,GACrB,IAAI82D,EAAc,GAElB,OADArF,GAAqBzxD,EAAM,OAAiBzd,OAAWA,EAAWu0E,GAC3DA,EAorBuBD,CAAgBx7E,KAAKk6C,QAC/CrX,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe63E,EAASn5E,UAAW,UAAW,CACjD4L,IAAK,WAAc,OAAOzM,KAAKk6C,MAAMtsC,SACrCi1B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe63E,EAASn5E,UAAW,YAAa,CACnD4L,IAAK,WAAc,OAAoD,IAAzB,IAAnBzM,KAAKk6C,MAAMze,QACtCoH,YAAY,EACZC,cAAc,IAElBk3C,EAASn5E,UAAUy4C,aAAe,WAAc86B,GAAwBp0E,KAAKk6C,QAC7E8/B,EAASn5E,UAAUq4C,OAAS,WAAcl5C,KAAKk6C,MAAMze,QAAS,GAC9Du+C,EAASn5E,UAAU24C,cAAgB,WAC/B,IAAIkiC,EAAK17E,KAAKk6C,MAAMy6B,KAAK5pC,gBACrB2wC,EAAGxuC,OACHwuC,EAAGxuC,QAEP,IACIslC,GAASQ,mBAAmBhzE,KAAKk6C,OAErC,QACQwhC,EAAGlkD,KACHkkD,EAAGlkD,QAIfwiD,EAASn5E,UAAU44C,eAAiB,WAAc+4B,GAASS,mBAAmBjzE,KAAKk6C,QACnF8/B,EAASn5E,UAAU04C,SAAW,WAAcv5C,KAAKk6C,MAAMze,OAAS,GAChEu+C,EAASn5E,UAAUkR,UAAY,SAAUonC,GAChCn5C,KAAKk6C,MAAMyhC,cACZ37E,KAAKk6C,MAAMyhC,YAAc,IAE7B37E,KAAKk6C,MAAMyhC,YAAYr4E,KAAK61C,IAEhC6gC,EAASn5E,UAAUy1C,QAAU,WACrBt2C,KAAK04C,QACL14C,KAAK04C,QAAQxD,WAAWl1C,MAEnBA,KAAK24C,mBACV34C,KAAK24C,kBAAkBO,OAAOl5C,KAAK24C,kBAAkB9vC,QAAQ7I,OAEjEwyE,GAASU,YAAYlzE,KAAKk6C,QAE9B8/B,EAASn5E,UAAUg5C,iBAAmB,WAClC75C,KAAK04C,QAAU,KACfqgC,GAAmB/4E,KAAKk6C,OACxBs4B,GAASgB,mBAAmBxzE,KAAKk6C,QAErC8/B,EAASn5E,UAAUk5C,eAAiB,SAAUC,GAC1C,GAAIh6C,KAAK24C,kBACL,MAAM,IAAI/xC,MAAM,qDAEpB5G,KAAK04C,QAAUsB,GAEnBggC,EAASn5E,UAAU84C,yBAA2B,SAAUC,GACpD,GAAI55C,KAAK04C,QACL,MAAM,IAAI9xC,MAAM,iEAEpB5G,KAAK24C,kBAAoBiB,GAEtBogC,EAvEkB,GAyE7B,SAAS4B,GAAmBj3D,EAAM9c,GAC9B,OAAO,IAAI6yC,GAAa/1B,EAAM9c,GAElC,IAAI6yC,GAA8B,SAAUlvB,GAExC,SAASkvB,EAAamhC,EAAa3D,GAC/B,IAAI/9B,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAGjC,OAFAm6C,EAAM0hC,YAAcA,EACpB1hC,EAAM+9B,KAAOA,EACN/9B,EAYX,OAjBAz5C,EAAUg6C,EAAclvB,GAOxBkvB,EAAa75C,UAAUi6C,mBAAqB,SAAUltC,GAClD,OAAO,IAAIosE,GAASxH,GAAS13B,mBAAmB96C,KAAK67E,YAAa77E,KAAKk4E,KAAMl4E,KAAKk4E,KAAK/4D,QAAQzO,SAAU9C,KAE7GxN,OAAO+B,eAAeu4C,EAAa75C,UAAW,aAAc,CACxD4L,IAAK,WACD,OAAO,IAAIy8D,GAAWiJ,GAAcnyE,KAAK67E,YAAa77E,KAAKk4E,KAAKpzD,WAAWkwD,gBAE/EnyC,YAAY,EACZC,cAAc,IAEX4X,EAlBsB,CAmB/Bs2B,IACF,SAAS8K,GAAiBn3D,EAAM41D,GAC5B,OAAO,IAAIF,GAAU11D,EAAM41D,GAE/B,IAAIF,GAA2B,WAC3B,SAASA,EAAU11D,EAAM41D,GACrBv6E,KAAK2kB,KAAOA,EACZ3kB,KAAKu6E,MAAQA,EAOjB,OALAF,EAAUx5E,UAAU4L,IAAM,SAAUxG,EAAO2G,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBu6C,GAAS/7C,oBAElDonE,GAASW,WAAWnzE,KAAK2kB,KAAM3kB,KAAKu6E,QADhBv6E,KAAKu6E,OAA8D,IAAlC,SAAnBv6E,KAAKu6E,MAAMjuE,OACoB,CAAEA,MAAO,EAAcrG,MAAOA,EAAO0tE,SAAUA,GAAS1tE,IAAU2G,IAEvIytE,EAVmB,GA0B9B,SAASzH,GAAkBmJ,EAAYlgE,EAAQmgE,EAAqBn0E,GAChE,OAAO,IAAIo0E,GAAaF,EAAYlgE,EAAQmgE,EAAqBn0E,GAErE,IAAIo0E,GAA8B,WAC9B,SAASA,EAAaC,EAAa1vB,EAAS2vB,EAAsBjE,GAC9Dl4E,KAAKk8E,YAAcA,EACnBl8E,KAAKwsD,QAAUA,EACfxsD,KAAKm8E,qBAAuBA,EAC5Bn8E,KAAKk4E,KAAOA,EACZl4E,KAAKo8E,kBAAoB,GACzBp8E,KAAKokD,YAAa,EAClBpkD,KAAKgM,SAAWhM,KA1mBxB,SAASq8E,EAAa5pE,GAGlB,IAFA,IAAI5K,EAAM4K,EAAKylE,KACX5wE,EAAYmL,EAAK85C,WAAa/8C,GAAS3H,EAAIP,UAAUhG,QAChDH,EAAI,EAAGA,EAAI0G,EAAIP,UAAUhG,OAAQH,IAAK,CAC3C,IAAIm7E,EAAUz0E,EAAIP,UAAUnG,GACN,KAAhBm7E,EAAQhwE,YAEWpF,IAAjBI,EAAUnG,KACVmG,EAAUnG,GAAKk3E,GAAwB5lE,EAAM6pE,KAmmBrDD,CAAar8E,MAiCjB,OA/BAi8E,EAAap7E,UAAU4L,IAAM,SAAUxG,EAAO2G,EAAe2vE,QACnC,IAAlB3vE,IAA4BA,EAAgBu6C,GAAS/7C,yBACrC,IAAhBmxE,IAA0BA,EAAcj9E,EAAQyG,YAAYwG,SAChE,IAAID,EAAQ,EAOZ,OANIiwE,EAAcj9E,EAAQyG,YAAYM,SAClCiG,GAAS,EAEJiwE,EAAcj9E,EAAQyG,YAAYK,OACvCkG,GAAS,GAENwrE,GAAmB93E,KAAM,CAAEiG,MAAOA,EAAO0tE,SAAUA,GAAS1tE,GAAQqG,MAAOA,GAASM,IAE/FxM,OAAO+B,eAAe85E,EAAap7E,UAAW,WAAY,CACtD4L,IAAK,WAAc,OAAOzM,KAAKyM,IAAIzM,KAAKk8E,cACxCr5C,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe85E,EAAap7E,UAAW,2BAA4B,CACtE4L,IAAK,WAAc,OAAOzM,KAAKyM,IAAIg8D,KACnC5lC,YAAY,EACZC,cAAc,IAElBm5C,EAAap7E,UAAUy1C,QAAU,WAC7B,GAAIt2C,KAAKokD,WACL,MAAM,IAAIx9C,MAAM,iBAAmByB,EAAUrI,KAAKsoB,SAAS1nB,aAAe,gCAE9EZ,KAAKokD,YAAa,EA/f1B,SAASo4B,EAAsBrgC,EAAUsgC,GAGrC,IAFA,IAAI50E,EAAMs0C,EAAS+7B,KACftvC,EAAY,IAAIub,IACXhjD,EAAI,EAAGA,EAAI0G,EAAIP,UAAUhG,OAAQH,IAEtC,GAAoB,OADN0G,EAAIP,UAAUnG,GAChBmL,MAAgC,CACxC,IAAIgc,EAAW6zB,EAASoQ,WAAWprD,GACnC,GAAImnB,GAAYA,IAAaovD,GAAiB,CAC1C,IAAI3lE,EAAYuW,EAAStW,YACA,mBAAdD,GAA6B62B,EAAUyd,IAAI/9B,KAClDvW,EAAUvQ,MAAM8mB,GAChBsgB,EAAU7I,IAAIzX,MAqf1Bk0D,CAAsBx8E,MACtBA,KAAKo8E,kBAAkBjtE,SAAQ,SAAUkzD,GAAY,OAAOA,QAEhE4Z,EAAap7E,UAAUkR,UAAY,SAAUonC,GAAYn5C,KAAKo8E,kBAAkB94E,KAAK61C,IAC9E8iC,EA1CsB,GAoD7BS,GAAoB/I,GAASpK,IAC7BoT,GAAqBhJ,GAASzK,IAC9B0T,GAA2BjJ,GAASzC,IACpC2L,GAAsBlJ,GAAS3C,IAC/B8L,GAA4BnJ,GAASx2B,IACrC4/B,GAAwBpJ,GAASxsB,IACjC61B,GAAwBrJ,GAASxoE;;;;;;;OA+BrC,SAAS+sE,GAAK+E,EAAY3wE,EAAOipE,EAAmBkB,EAAYxwE,EAAOhD,EAAO89C,EAAMozB,EAAUnjE,GAC1F,IAAI1M,EAAKgxE,GAAuBC,GAAoBC,EAAiBlxE,EAAGkxE,eAAgBE,EAAapxE,EAAGoxE,WAAYD,EAAkBnxE,EAAGmxE,gBACpIzkE,IACDA,EAAU,IAETmjE,IACDA,EAAW,IAKflxE,EAAQiG,EAAkBjG,GAC1B,IAAIi6E,EAAUtH,GAAa70B,EAAM14C,EAAUpC,IAC3C,MAAO,CAEH6e,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEdF,WAAYA,EACZ3wE,MAAOA,EACP6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EAAG7H,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EACtGiB,gBAAiB,EAAGF,WAAYA,EAAYtC,SAAUA,EACtD+C,aAAcM,GAAiBrD,GAAWnjE,QAASA,EACnDmO,QAAS,KACTsjC,SAAU,CAAEx8C,MAAOA,EAAOhD,MAAOA,EAAO89C,KAAMm8B,GAC9C1vE,KAAM,KACN8vE,MAAO,KACPtG,UAAW,MAGnB,SAASuG,GAAuB54D,EAAM9c,GAClC,OAAO21E,GAA0B74D,EAAM9c,GAE3C,SAAS41E,GAAmB94D,EAAM9c,GAG9B,IADA,IAAI+uE,EAAWjyD,EACRiyD,EAAS/6D,SAAWq5D,GAAgB0B,IACvCA,EAAWA,EAAS/6D,OAKxB,OAAO6hE,GAAY9G,EAAS/6D,OAAQi5D,GAAa8B,IAFtB,EAEuD/uE,EAAI46C,SAASx/C,MAAO4E,EAAI46C,SAAS1B,MAEvH,SAAS48B,GAAwBh5D,EAAM9c,GAEnC,IAEIygB,EAAWo1D,GAAY/4D,EAAM9c,EAAIgU,QAFG,MAAZhU,EAAIyE,OAAiC,EAEEzE,EAAI46C,SAASx/C,MAAO4E,EAAI46C,SAAS1B,MACpG,GAAIl5C,EAAImJ,QAAQ1P,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI0G,EAAImJ,QAAQ1P,OAAQH,IAAK,CACzC,IAAImiC,EAASz7B,EAAImJ,QAAQ7P,GACrBy8E,EAAmBt1D,EAASgb,EAAOr+B,UACvC,IAAI62D,GAAa8hB,GAKb,MAAM,IAAIh3E,MAAM,WAAa08B,EAAOr+B,SAAW,wBAA0BqjB,EAAS1nB,YAAYkD,KAAO,MAJrG,IAAIu5D,EAAeugB,EAAiB7hB,UAAU8hB,GAAoBl5D,EAAM9c,EAAIgU,OAAOiJ,UAAWwe,EAAO24B,YACrGt3C,EAAKg3D,YAAY9zE,EAAIs1E,YAAch8E,GAAKk8D,EAAahnB,YAAY3xC,KAAK24D,GAOlF,OAAO/0C,EAEX,SAASu1D,GAAoBl5D,EAAMpf,EAAO02D,GACtC,OAAO,SAAUyY,GAAS,OAAOD,GAAc9vD,EAAMpf,EAAO02D,EAAWyY,IAmF3E,SAAS8I,GAA0B74D,EAAM9c,GAErC,IAAIi2E,GAAoC,KAAZj2E,EAAIyE,OAAsC,EAClE2rE,EAAcpwE,EAAI46C,SACtB,OAAoB,UAAZ56C,EAAIyE,OACR,KAAK,IACD,OAAOoxE,GAAY/4D,EAAM9c,EAAIgU,OAAQiiE,EAAsB7F,EAAYh1E,MAAOg1E,EAAYl3B,MAC9F,KAAK,KACD,OA0BZ,SAASg9B,EAAYp5D,EAAM41D,EAAOuD,EAAsBz+E,EAAS0hD,GAC7D,IAAI2L,EAAM3L,EAAKz/C,OACf,OAAQorD,GACJ,KAAK,EACD,OAAOrtD,IACX,KAAK,EACD,OAAOA,EAAQ8zE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KACtE,KAAK,EACD,OAAO1hD,EAAQ8zE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KAC9H,KAAK,EACD,OAAO1hD,EAAQ8zE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KACtL,QAEI,IADA,IAAI43B,EAAY,GACPx3E,EAAI,EAAGA,EAAIurD,EAAKvrD,IACrBw3E,EAAUr1E,KAAK6vE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK5/C,KAEtE,OAAO9B,EAAQmC,WAAM,EAAQgC,EAASm1E,KA1C/BoF,CAAYp5D,EAAM9c,EAAIgU,OAAQiiE,EAAsB7F,EAAYh1E,MAAOg1E,EAAYl3B,MAC9F,KAAK,KACD,OAAOoyB,GAAWxuD,EAAM9c,EAAIgU,OAAQiiE,EAAsB7F,EAAYl3B,KAAK,IAC/E,KAAK,IACD,OAAOk3B,EAAYh1E,OAG/B,SAASy6E,GAAY/4D,EAAM41D,EAAOuD,EAAsB/4E,EAAMg8C,GAC1D,IAAI2L,EAAM3L,EAAKz/C,OACf,OAAQorD,GACJ,KAAK,EACD,OAAO,IAAI3nD,EACf,KAAK,EACD,OAAO,IAAIA,EAAKouE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KACvE,KAAK,EACD,OAAO,IAAIh8C,EAAKouE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIh8C,EAAKouE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,IAAKoyB,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK,KACvL,QAEI,IADA,IAAI43B,EAAY,GACPx3E,EAAI,EAAGA,EAAIurD,EAAKvrD,IACrBw3E,EAAUr1E,KAAK6vE,GAAWxuD,EAAM41D,EAAOuD,EAAsB/8B,EAAK5/C,KAEtE,OAAO,IAAK4D,EAAKL,KAAKlD,MAAMuD,EAAMvB,EAAS,MAAC,GAASm1E,MAuCjE,IAAIqF,GAAwC,GAC5C,SAAS7K,GAAWxuD,EAAM41D,EAAOuD,EAAsB/F,EAAQnrE,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBu6C,GAAS/7C,oBACtC,EAAf2sE,EAAOzrE,MACP,OAAOyrE,EAAO9xE,MAElB,IAAIyY,EAAYiG,EACG,EAAfozD,EAAOzrE,QACPM,EAAgB,MAEpB,IAAI+mE,EAAWoE,EAAOpE,SAClBA,IAAamJ,KAGbgB,KAA0BvD,IAASA,EAAMp7D,QAAQiyB,gBAEjDmpC,GAAyB,EAAfxC,EAAOzrE,QACjBwxE,GAAuB,EACvBvD,EAAQA,EAAM1+D,QAGlB,IADA,IAAIoiE,EAAat5D,EACVs5D,GAAY,CACf,GAAI1D,EACA,OAAQ5G,GACJ,KAAK+I,GAED,OADewB,GAAaD,EAAY1D,EAAOuD,GAC/B7gE,SAEpB,KAAK0/D,GACD,OAAO,IAAIzT,GAAWiJ,GAAc8L,EAAY1D,EAAMz1D,WAAWkwD,eACrE,KAAK4H,GACD,OAAOzK,GAAc8L,EAAY1D,EAAMz1D,WAAWsyD,cACtD,KAAKyF,GACD,GAAItC,EAAMp7D,QAAQzO,SACd,OAAOyhE,GAAc8L,EAAY1D,EAAMz1D,WAAWpU,SAEtD,MAEJ,KAAKosE,GAED,OAAOvB,GADM2C,GAAaD,EAAY1D,EAAOuD,IAGjD,KAAKf,GACL,KAAKC,GACD,OAAOlB,GAAiBmC,EAAY1D,GACxC,QACI,IAAI4D,GAAiBL,EAAuBvD,EAAMp7D,QAAQi/D,aACtD7D,EAAMp7D,QAAQk/D,iBAAiB1K,GACnC,GAAIwK,EAAe,CACf,IAAIG,EAAelM,GAAe6L,EAAYE,EAAcr5D,WAK5D,OAJKw5D,IACDA,EAAe,CAAEh2D,SAAUk1D,GAA0BS,EAAYE,IACjEF,EAAWj3C,MAAMm3C,EAAcr5D,WAAaw5D,GAEzCA,EAAah2D,UAIpCw1D,EAAuB5I,GAAgB+I,GACvC1D,EAAQzF,GAAamJ,GACrBA,EAAaA,EAAWpiE,OACL,EAAfk8D,EAAOzrE,QACP2xE,EAAa,MAGrB,IAAIh7E,EAAQyb,EAAUi2D,KAAK3oE,SAASS,IAAIsrE,EAAO9xE,MAAO+3E,IACtD,OAAI/6E,IAAU+6E,IACVpxE,IAAkBoxE,GAMX/6E,EAEJyb,EAAUi2D,KAAKx4B,SAASnwC,SAASS,IAAIsrE,EAAO9xE,MAAO2G,GAE9D,SAASsxE,GAAav5D,EAAM41D,EAAOuD,GAC/B,IAAIlH,EACJ,GAAIkH,EACAlH,EAAWzE,GAAcxtD,EAAM41D,EAAMz1D,WAAWssB,mBAIhD,IADAwlC,EAAWjyD,EACJiyD,EAAS/6D,SAAWq5D,GAAgB0B,IACvCA,EAAWA,EAAS/6D,OAG5B,OAAO+6D,EAEX,SAAS2H,GAAW55D,EAAM25D,EAAcz2E,EAAKisE,EAAY7wE,EAAOu7E,GAC5D,GAAgB,MAAZ32E,EAAIyE,MAA+B,CACnC,IAAIsqE,EAAWzE,GAAcxtD,EAAM9c,EAAIgU,OAAOiJ,WAAWssB,cAChC,EAArBwlC,EAAS/uE,IAAIyE,QACbsqE,EAASn7C,OAAS,GAS1B,GADA6iD,EAAah2D,SALCzgB,EAAIssE,SAASL,GACJhwE,MAIWb,EAClB,OAAZ4E,EAAIyE,MAAgC,CACpCkyE,EAAUA,GAAW,GACrB,IAAIx4D,EAAW4rC,GAAaG,OAAOptC,EAAKovD,UAAUlsE,EAAI0S,aAAeu5D,IAErE0K,EADgB32E,EAAIssE,SAASL,GACX2K,iBACd,IAAI9Y,GAAa3/C,EAAU/iB,EAA6C,IAAxB,EAAb0hB,EAAK8W,QAGhD,OADA9W,EAAKovD,UAAUlsE,EAAI0S,aAAeu5D,GAAc7wE,EACzCu7E,EA6CX,SAASE,GAAgC/5D,EAAM83D,GAC3C,GAAM93D,EAAK9c,IAAIqzE,UAAYuB,EAK3B,IAFA,IAAIz1C,EAAQriB,EAAK9c,IAAIm/B,MACjBgrC,EAAY,EACP7wE,EAAI,EAAGA,EAAI6lC,EAAM1lC,OAAQH,IAAK,CACnC,IAAIo1E,EAAUvvC,EAAM7lC,GAChBgyB,EAAWojD,EAAQ16D,OASvB,KARKsX,GAAYojD,EAAQjqE,MAAQmwE,GAE7BkC,GAAuBh6D,EAAMxjB,EAAGo1E,EAAQjqE,MAAQmwE,EAAYzK,KAEtB,IAArCuE,EAAQ4E,WAAasB,KAEtBt7E,GAAKo1E,EAAQE,YAEVtjD,GAA8B,EAAjBA,EAAS7mB,OACzBnL,IAAMgyB,EAASrO,UAAYqO,EAASsjD,YAEhCtjD,EAASiqD,iBAAmBX,IAC5BzK,EAAY4M,GAA+Bj6D,EAAMwO,EAAUspD,EAAYzK,IAE3E7+C,EAAWA,EAAStX,QAIhC,SAAS+iE,GAA+Bj6D,EAAM41D,EAAOkC,EAAYzK,GAC7D,IAAK,IAAI7wE,EAAIo5E,EAAMz1D,UAAY,EAAG3jB,GAAKo5E,EAAMz1D,UAAYy1D,EAAM9D,WAAYt1E,IAAK,CAC5E,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GACzBo1E,EAAQjqE,MAAQmwE,GAChBkC,GAAuBh6D,EAAMxjB,EAAGo1E,EAAQjqE,MAAQmwE,EAAYzK,KAGhE7wE,GAAKo1E,EAAQE,WAEjB,OAAOzE,EAEX,SAAS2M,GAAuBh6D,EAAMpf,EAAOk3E,EAAYzK,GACrD,IAAIsM,EAAelM,GAAeztD,EAAMpf,GACxC,GAAK+4E,EAAL,CAGA,IAAI77B,EAAW67B,EAAah2D,SACvBm6B,IAGL+vB,GAASC,eAAe9tD,EAAMpf,GACb,QAAbk3E,GACAxK,GAA4BttD,EAAM,IAA6CqtD,IAC/EvvB,EAASjxC,qBAEI,QAAbirE,GACAh6B,EAAS/wC,wBAEI,QAAb+qE,GACAxK,GAA4BttD,EAAM,IAA0CqtD,IAC5EvvB,EAAS7wC,kBAEI,QAAb6qE,GACAh6B,EAAS3wC,qBAEI,OAAb2qE,GACAh6B,EAASzwC;;;;;;;OAWjB,IAAI6sE,GAA4C,SAAUrzD,GAKtD,SAASi9C,EAAyBtsB,GAC9B,IAAIhC,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAEjC,OADAm6C,EAAMgC,SAAWA,EACVhC,EAOX,OAdAz5C,EAAU+nE,EAA0Bj9C,GASpCi9C,EAAyB5nE,UAAU2nE,wBAA0B,SAAUjzC,GAEnE,IAAIkuC,EAAe9vD,GAAgB4hB,GACnC,OAAO,IAAIupD,GAAmBrb,EAAczjE,KAAKm8C,WAE9CssB,EAfoC,CAgB7CA,IACF,SAASsW,GAAWx2E,GAChB,IAAI0b,EAAQ,GACZ,IAAK,IAAI+6D,KAAez2E,EAChBA,EAAI9H,eAAeu+E,IAEnB/6D,EAAM3gB,KAAK,CAAE2B,SADEsD,EAAIy2E,GACctF,aAAcsF,IAGvD,OAAO/6D,EAMX,IAAIg7D,GAAY,IAAIh0E,GAAe,kBAAmB,CAClDhE,WAAY,OACZ5H,QAAS,WAAc,OAAO0f,MAsB9B+/D,GAAoC,SAAUtzD,GAM9C,SAAS48C,EAAiB3E,EAActnB,GACpC,IAAIhC,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KASjC,OARAm6C,EAAMspB,aAAeA,EACrBtpB,EAAMgC,SAAWA,EACjBhC,EAAM0uB,cAAgBpF,EAAah8D,KAEnC0yC,EAAM7gB,SAAWmqC,EAAanxD,UAAU,GAAG,IAAM,MACjD6nC,EAAMvpC,mBACF6yD,EAAa7yD,mBAAqB6yD,EAAa7yD,mBAAqB,GACxEupC,EAAM+kC,kBAAoB/iC,EACnBhC,EA8EX,OA7FAz5C,EAAU0nE,EAAkB58C,GAiB5BprB,OAAO+B,eAAeimE,EAAiBvnE,UAAW,SAAU,CACxD4L,IAAK,WACD,OAAOsyE,GAAW/+E,KAAKyjE,aAAa1yD,SAExC8xB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAeimE,EAAiBvnE,UAAW,UAAW,CACzD4L,IAAK,WACD,OAAOsyE,GAAW/+E,KAAKyjE,aAAazyD,UAExC6xB,YAAY,EACZC,cAAc,IAElBslC,EAAiBvnE,UAAUC,OAAS,SAAUkL,EAAU+vC,EAAkBgtB,EAAoB5sB,GAE1F,IAAIgjC,GADJhjC,EAAWA,GAAYn8C,KAAKm8C,UArDpC,SAASijC,EAAsBD,EAAkB12D,GAC7C,MAAO,CACHhc,IAAK,SAAUxG,EAAO2G,EAAeN,GACjC,IAAIrJ,EAAQk8E,EAAiB1yE,IAAIxG,EAAO+3E,GAAuC1xE,GAC/E,OAAIrJ,IAAU+6E,IACVpxE,IAAkBoxE,GAMX/6E,EAEJwlB,EAAehc,IAAIxG,EAAO2G,EAAeN,KAyClB8yE,CAAsBpzE,EAAUmwC,EAASnwC,UAAYA,EACnF++B,EAAkBo0C,EAAiB1yE,IAAI48D,GAAkBnsD,IACzDR,EAAYyiE,EAAiB1yE,IAAIg9D,GAAW,MAC5C4V,EAAYtW,EACZv6B,GAAkBzD,EAAiBg+B,GACnCt+B,GAAczqC,KAAKs5B,SAAUyR,EAAgB5tB,eAAe,KAAMnd,KAAKyjE,cAAe,MACtF6b,EAAYt/E,KAAKyjE,aAAaxxD,OAAS,IACvC,IAKAstE,EAA2C,iBAAvBxW,GACpB,kCAAkCxqB,KAAKwqB,GACvC32B,EAAcwxB,KACd3mD,EAAW8tB,EAAgB5tB,eAAekiE,EAAWr/E,KAAKyjE,cAC1DsF,GAAsBsW,IAEtBriE,GAAqBC,GACjBA,EAASY,aAAawhE,EAAW,aAAc3V,GAAQC,MACvD0V,EAAUxhE,aAAa,aAAc6rD,GAAQC,OAGrD,IAQIp0C,EACAiqD,EATA1b,EAAY31B,GAAY,GAAe,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAC9EsxC,EAAY70C,GAAY,KAAMk5B,EAAW1xB,EAAaktC,EAAW,KAAM,KAAMv0C,EAAiB9tB,EAAUP,EAAWyiE,GAMvH7jE,GAAUmkE,EAAW,MAGrB,IACI,IAAIruC,EAAgBmyB,GAAwB8b,EAAWr/E,KAAKyjE,aAAcgc,EAAW10C,EAAiB9tB,GACtGuiE,EAAe96D,GAAS,EAAG+6D,GACvB1jC,IAIAyjC,EAAav3C,WACT8T,EAAiBxzC,KAAI,SAAUm3E,GAAgB,OAAOn/E,MAAMqrD,KAAK8zB,OAKzEnqD,EAAYiuC,GAAoBpyB,EAAepxC,KAAKyjE,aAAcgc,EAAWrtC,EAAa,CAACyxB,KAC3Fv4B,GAAWm0C,EAAW3b,EAAW,MAErC,QACIzoD,KAEJ,IAAI+gC,EAAe,IAAIujC,GAAe3/E,KAAK6oE,cAAetzC,EAAW8kB,GAAiB6uB,GAAYsW,EAAcC,GAAYA,EAAWD,GAMvI,OALKzW,IAAsBwW,IAGvBnjC,EAAar3B,SAAS6zB,WAAWh9B,MAAQ4jE,GAEtCpjC,GAEJgsB,EA9F4B,CA+FrCA,IAC6B,IAAIyW,GAmBnC,IAkLWe,GAlLPD,GAAgC,SAAUn0D,GAE1C,SAAS28C,EAAaU,EAAevgD,EAAU7J,EAAUohE,EAAY71D,GACjE,IAAImwB,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KASjC,OARAm6C,EAAM17B,SAAWA,EACjB07B,EAAM0lC,WAAaA,EACnB1lC,EAAMnwB,OAASA,EACfmwB,EAAM2lC,WAAa,GACnB3lC,EAAM7xB,SAAWA,EACjB6xB,EAAMp1B,SAAWo1B,EAAMigC,kBAAoB,IAAIngC,GAAY4lC,GAC3D1lC,EAAMp1B,SAAS6zB,WAAaxN,GAAuBy0C,EAAW1qE,IAAQ,MAAO,EAAG0qE,GAChF1lC,EAAM0uB,cAAgBA,EACf1uB,EAmBX,OA9BAz5C,EAAUynE,EAAc38C,GAaxBprB,OAAO+B,eAAegmE,EAAatnE,UAAW,WAAY,CACtD4L,IAAK,WAAc,OAAO,IAAIwb,GAAajoB,KAAKgqB,OAAQhqB,KAAK6/E,aAC7Dh9C,YAAY,EACZC,cAAc,IAElBqlC,EAAatnE,UAAUy1C,QAAU,WACzBt2C,KAAK8/E,aACL9/E,KAAK8/E,WAAW3wE,SAAQ,SAAU/F,GAAM,OAAOA,OAC/CpJ,KAAK8/E,WAAa,MACjB9/E,KAAK+kB,SAAS6jB,WAAa5oC,KAAK+kB,SAASuxB,YAGlD6xB,EAAatnE,UAAUkR,UAAY,SAAUonC,GACrCn5C,KAAK8/E,YACL9/E,KAAK8/E,WAAWx8E,KAAK61C,IAGtBgvB,EA/BwB,CAgCjCA,IAmCE4X,QAAI74E,EAOJ84E,GAAW,CACX,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,MAAOD,IAAI,CAAC,CAAC,KAAM,MAAOA,GAAGA,IACvD,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAChF,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACnE,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEzCA,GACA,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC9E,CACI,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAC1E,UAAW,WAAY,aAG/BA,GAAG,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,gBAAiB,gBAAiB,EAAG,CAAC,EAAG,GACxE,CAAC,SAAU,WAAY,YAAa,mBACpC,CAAC,SAAU,YAAa,cAAe,kBAAmB,CAAC,WAAYA,GAAG,eAAkBA,IAC5F,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAC1D,CAAC,YAAa,SAAU,YAAa,OAAQ,IAAK,YAAa,GA1BnE,SAASE,GAAO7+E,GACZ,IAAID,EAAIkjC,KAAKC,MAAMD,KAAK67C,IAAI9+E,IAAK6gB,EAAI7gB,EAAEuH,WAAWoF,QAAQ,YAAa,IAAIzM,OAC3E,OAAU,IAANH,GAAiB,IAAN8gB,EACJ,EACJ,IAmCPk+D,GAAc;;;;;;;OAyBlB,SAASC,GAAeC,GACpB,IAAIC,EAsER,SAASC,EAAgBF,GACrB,OAAOA,EAAOn+D,cAAcnU,QAAQ,KAAM;;;;;;;OAvEnBwyE,CAAgBF,GACnCpxD,EAAQuxD,GAAcF,GAC1B,GAAIrxD,EACA,OAAOA,EAGX,IAAIwxD,EAAeH,EAAiBjxD,MAAM,KAAK,GAE/C,GADAJ,EAAQuxD,GAAcC,GAElB,OAAOxxD,EAEX,GAAqB,OAAjBwxD,EACA,OAAOT,GAEX,MAAM,IAAIp5E,MAAM,uCAA0Cy5E,EAAS,MAUvE,SAASK,GAAoBL,GAEzB,OADWD,GAAeC,GACd/gF,EAAQqhF,iBAAiBC,YAMzC,SAASJ,GAAcF,GAKnB,OAJMA,KAAoBH,KACtBA,GAAYG,GAAoBx2E,EAAQlK,IAAMkK,EAAQlK,GAAGihF,QAAU/2E,EAAQlK,GAAGihF,OAAOC,SACjFh3E,EAAQlK,GAAGihF,OAAOC,QAAQR,IAE3BH,GAAYG,IAQZV,GAqBRtgF,EAAQqhF,mBAAqBrhF,EAAQqhF,iBAAmB,KApBvCf,GAA0B,SAAI,GAAK,WACnDA,GAAgBA,GAAkC,iBAAI,GAAK,mBAC3DA,GAAgBA,GAAsC,qBAAI,GAAK,uBAC/DA,GAAgBA,GAA4B,WAAI,GAAK,aACrDA,GAAgBA,GAAgC,eAAI,GAAK,iBACzDA,GAAgBA,GAA8B,aAAI,GAAK,eACvDA,GAAgBA,GAAkC,iBAAI,GAAK,mBAC3DA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAgC,eAAI,GAAK,iBACzDA,GAAgBA,GAA8B,aAAI,GAAK,eACvDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAAgC,eAAI,IAAM,iBAC1DA,GAAgBA,GAA+B,cAAI,IAAM,gBACzDA,GAAgBA,GAA+B,cAAI,IAAM,gBACzDA,GAAgBA,GAAgC,eAAI,IAAM,iBAC1DA,GAAgBA,GAA8B,aAAI,IAAM,eACxDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAA4B,WAAI,IAAM,aACtDA,GAAgBA,GAA2B,UAAI,IAAM,YAuCzD,IAAImB,GAAoB,QAEpBC,GAAS,IACTC,GAAmB,6CACnBC,GAAqB,qBACrBC,GAAY,yBACZC,GAAiB,iBACjBC,GAAa,6CAEbC,GAAmB,EACnBC,GAAqC,eACrCC,GAAyB,iCACzBC,GAAqB,4CACrBC,GAA6B,kBAC7BC,GAAiB,2BACjBC,GAA2B,OAC3BC,GAAwB,aAU5B,SAASC,GAAaC,GAClB,IAAKA,EACD,MAAO,GAEX,IAMI9yD,EANA+yD,EAAU,EACVC,EAAa,GACbz4C,EAAU,GACV04C,EAAS,QAIb,IAFAA,EAAOC,UAAY,EAEZlzD,EAAQizD,EAAOE,KAAKL,IAAU,CACjC,IAAIM,EAAMpzD,EAAM1pB,MAChB,GAAgB,KAAZ0pB,EAAM,IAEN,GADAgzD,EAAW1yE,MACc,GAArB0yE,EAAW3gF,OAAa,CAExB,IAAIghF,EAAQP,EAAQj5E,UAAUk5E,EAASK,GACnCpB,GAAiB1iC,KAAK+jC,GACtB94C,EAAQlmC,KAAKi/E,GAAcD,IAG3B94C,EAAQlmC,KAAKg/E,GAEjBN,EAAUK,EAAM,OAGnB,CACD,GAAyB,GAArBJ,EAAW3gF,OAAa,CACxB,IAAIkhF,EAAcT,EAAQj5E,UAAUk5E,EAASK,GAC7C74C,EAAQlmC,KAAKk/E,GACbR,EAAUK,EAAM,EAEpBJ,EAAW3+E,KAAK,MAGxB,IAAIwF,EAAYi5E,EAAQj5E,UAAUk5E,GAElC,OADAx4C,EAAQlmC,KAAKwF,GACN0gC,EASX,SAAS+4C,GAAcR,GAiBnB,IAhBA,IAAIU,EAAQ,GACRz9E,EAAS,GACT09E,EAAU,EACVC,EAAc,EAWd90E,EAAQi0E,GAVZC,EAAUA,EAAQh0E,QAAQkzE,IAAkB,SAAUn+D,EAAK6gB,EAASl8B,GAQhE,OANIi7E,EADS,WAATj7E,EACU,EAGA,EAEdk7E,EAAcC,SAASj/C,EAAQh2B,OAAO,GAAI,IACnC,OAIF00E,EAAM,EAAGA,EAAMx0E,EAAMvM,QAAS,CACnC,IAAIM,EAAMiM,EAAMw0E,KAAO/yD,OACP,IAAZozD,IAEA9gF,EAAMA,EAAImM,QAAQ,oBAAqB,OAEvCnM,EAAIN,QACJmhF,EAAMn/E,KAAK1B,GAEf,IAAIihF,EAASf,GAAaj0E,EAAMw0E,MAC5BI,EAAMnhF,OAAS0D,EAAO1D,QACtB0D,EAAO1B,KAAKu/E,GAKpB,OA54qBJ,SAASC,EAAkBnzE,EAAQozE,EAAUnzE,GACrCD,GAAUozE,GACVlzE,GAAWD,GAw4qBfkzE,CAAkBL,EAAM55E,QAAQ,UAAW,EAAG,yCAEvC,CAAEpB,KAAMi7E,EAASC,YAAaA,EAAaF,MAAOA,EAAOz9E,OAAQA,GAK5E,SAASg+E,GAA+B11E,GAMpC,IALA,IAAI2hB,EAIAg0D,EAHAv6E,EAAM,GACNnD,EAAQ,EACR29E,GAAa,EAEqC,QAA9Cj0D,EAAQiyD,GAAmBkB,KAAK90E,KAC/B41E,EAMGj0D,EAAM,KAAO+xD,GAAS,KAAOiC,EAAajC,KAC1Cz7E,EAAQ0pB,EAAM1pB,MACd29E,GAAa,IAPjBx6E,GAAO4E,EAAQxE,UAAUvD,EAAO0pB,EAAM1pB,MAAQ0pB,EAAM,GAAG3tB,QACvD2hF,EAAah0D,EAAM,GACnBi0D,GAAa,GAYrB,OADAx6E,EAAO4E,EAAQK,OAAOpI,GAsC1B,SAAS49E,GAA6BrgE,EAAKsgE,EAAiBzlE,EAAUwsB,QAC/C,IAAfA,IAAyBA,EAAa,MAI1C,IAHA,IAAIk5C,EAAgB,CAAC,KAAM,MACvBC,EAAYxgE,EAAIuM,MAAM+xD,IACtB/5D,EAAO,EACFpa,EAAI,EAAGA,EAAIq2E,EAAUhiF,OAAQ2L,IAAK,CACvC,IAAIs2E,EAAYD,EAAUr2E,GAC1B,GAAQ,EAAJA,EAAO,CAEP,IAAIsN,EAAeqoE,SAASW,EAAW,IACvCF,EAAc//E,MAAM,EAAIiX,GACxB8M,GAAcm8D,GAAUjpE,OAEL,KAAdgpE,GAELF,EAAc//E,KAAKigF,GAU3B,OAPAF,EAAc//E,KAAK8/E,GAAmB,GACjCzlE,EAAW,EAAe,IAC3BA,GACA0lE,EAAc//E,KAAKqa,EAAUwsB,GAEjCk5C,EAAc,GAAKh8D,EACnBg8D,EAAc,GAAKA,EAAc/hF,OAAS,EACnC+hF,EAEX,SAASI,GAAeC,EAAer8D,GAGnC,IAAI4H,OAFS,IAAT5H,IAAmBA,EAAO,GAC9BA,GAAcm8D,GAAUE,EAAcf,aAEtC,IAAK,IAAIxhF,EAAI,EAAGA,EAAIuiF,EAAc1+E,OAAO1D,OAAQH,IAE7C,IADA,IAAIwiF,EAAWD,EAAc1+E,OAAO7D,GAC3B8L,EAAI,EAAGA,EAAI02E,EAASriF,OAAQ2L,IAAK,CACtC,IAAIhK,EAAQ0gF,EAAS12E,GACrB,GAAqB,iBAAVhK,EACP,KAAOgsB,EAAQmyD,GAAegB,KAAKn/E,IAC/BokB,GAAcm8D,GAAUZ,SAAS3zD,EAAM,GAAI,UAI/C5H,EAAOo8D,GAAexgF,EAAOokB,GAIzC,OAAOA,EAEX,IAAIu8D,GAAiB,GACjBC,IAAyB,EAS7B,SAASL,GAAUjpE,GACf,OAAO,GAAK8pB,KAAKy/C,IAAIvpE,EAAc,IAEvC,IA4CIwpE,GA5CAC,GAAmB,GA8BvB,SAASC,GAAY1+E,EAAO+H,EAAS42E,GACjC,IAAIzrE,EAAQD,KACRvF,EAAQwF,EAAMtD,IAElByuE,KAAiBC,IAAyBt+E,EAE1Co5D,IAAmB,GACf1rD,EAAMsT,iBAAyD,OAAtCtT,EAAMR,KAAKlN,EAAQ6Q,KAWpD,SAAS+tE,EAAmB1rE,EAAOxF,EAAO1N,EAAO+H,EAAS42E,GACtD,IAAIzqB,EAAaxmD,EAAMyT,UAAUplB,OAAS8U,GAC1C2tE,GAAgB,EAChB,IAAIrqE,EAAwBD,KACxB+8B,EAAc18B,KAAgBJ,EAAwBA,GAAyBA,EAAsBmC,OACrGgL,EAAc2vB,GAAeA,IAAgB/9B,EAAMjD,IAAUghC,EAAYjxC,MAAQ6Q,GAAgB7Q,EACjG6+E,EAAqB,EACzBJ,GAAiBI,GAAsBv9D,EACvC,IAAIw9D,EAAgB,GAGhB9+E,EAAQ,GAAKmU,IAA0B88B,GAEvC6tC,EAAc/gF,KAAKoW,EAAsBnU,OAAS,EAAoB,GAM1E,IAJA,IAAI89E,EAAgB,GAChBiB,EAAiB,GAEjBC,EAi0BR,SAASC,EAAYvhF,GACjB,OAAOA,EAAM8K,QAAQ02E,GAAqB,KAl0B3BD,CAlJnB,SAASE,EAA0Bp3E,EAAS42E,GACxC,GAAgC,iBAArBA,EAEP,OAAOlB,GAA+B11E,GAItC,IAAI4W,EAAQ5W,EAAQzE,QAAQ,IAAMq7E,EAAmBlD,IAAU,EAAIkD,EAAiBv7E,WAAWrH,OAC3Fk2B,EAAMlqB,EAAQq3E,OAAO,IAAIpxD,OAAOytD,GAAS,cAAgBkD,EAAmBlD,KAChF,OAAOgC,GAA+B11E,EAAQxE,UAAUob,EAAOsT,IAwIzCktD,CAA0Bp3E,EAAS42E,IACb70D,MAAM8xD,IAC7ChgF,EAAI,EAAGA,EAAIojF,EAASjjF,OAAQH,IAAK,CACtC,IAAI8B,EAAQshF,EAASpjF,GACrB,GAAQ,EAAJA,EAEA,GAAwB,MAApB8B,EAAMyK,OAAO,IAEb,GAAwB,MAApBzK,EAAMyK,OAAO,GAA0B,CACvC,IAAIk3E,EAAUhC,SAAS3/E,EAAM0K,OAAO,GAAI,IACxCkZ,EAAcm9D,KAAmBI,GACjCC,EAAc/gF,KAAKshF,GAAW,EAAoB,SAIlDA,EAAUhC,SAAS3/E,EAAM0K,OAAO,GAAI,IAExC02E,EAAc/gF,KAAKshF,GAAW,EAAoB,EAAgB/9D,GAAe,GAAwB,GACjF,MAApB5jB,EAAMyK,OAAO,KACbs2E,KAAmBI,GAAsBv9D,EAAc+9D,QAO/D,IADA,IAAI/2E,EAAQi0E,GAAa7+E,GAChBgK,EAAI,EAAGA,EAAIY,EAAMvM,OAAQ2L,IAC9B,GAAQ,EAAJA,EAAO,CAGP,IAAI43E,EAAeprB,EAAasqB,KAChCM,EAAc/gF,KAAKm9B,GAAoD,GAAIokD,EAAch+D,GAAe,GAAwB,GAEhI,IAAI68D,EAAgB71E,EAAMZ,GACtBoa,EAAOo8D,GAAeC,GAC1BoB,GAASR,EAAgBZ,EAAemB,EAAcA,GAEtD,IAAI56C,EAAYq6C,EAAehjF,OAAS,EACxC+hF,EAAc//E,KAAKkgF,GAAUE,EAAcf,aAC3C,GACC,EAAIe,EAAcf,YAAakC,GAAgB,EAAoB,EAAmB56C,EAAW5iB,EAClG,EACAw9D,GAAgB,EAAoB,EAAmB56C,QAEtD,GAAiB,KAAbp8B,EAAMZ,GAAW,CACtB,IAAIO,EAAOK,EAAMZ,GAEb83E,EAAav3E,EAAKyhB,MAAMmyD,IAExB4D,EAAgBvrB,EAAasqB,KACjCM,EAAc/gF,KAEdyhF,EAAa,GAAKv3E,EAAMw3E,EAAen+D,GAAe,GAAwB,GAC1Ek+D,GACAt2E,GAAc00E,GAA6B31E,EAAMw3E,GAAgB3B,IAMjFU,GAAgB,GAptcxB,SAASkB,EAAatgE,EAAMugE,GAExB,GAAIA,EAAkB,EAAG,CACrB,IAAIjyE,EAAQ0R,EAAKxP,IACjB,GAAIlC,EAAMsT,gBAAiB,CACvB,IAAK,IAAIplB,EAAI,EAAGA,EAAI+jF,EAAiB/jF,IACjC8R,EAAMyT,UAAUpjB,KAAK,MACrB2P,EAAMR,KAAKnP,KAAK,MAChBqhB,EAAKrhB,KAAK,MAIT2P,EAAMm0B,oBAMPn0B,EAAMm0B,oBAAoB9jC,KAAK4hF,GAL/BjyE,EAAMk0B,mBAAqB+9C,IAwscnCD,CAAaxsE,EAAOsrE,IAWxB9wE,EAAMR,KAAKlN,EAAQ6Q,IANP,CACR3F,KAAMszE,GACNjjF,OAAQujF,EACRc,OAAQ9B,EACRv5C,KAAMw6C,EAAehjF,OAASgjF,EAAiB,MAjG/CH,CAAmB1rE,EAAOxF,EAAO1N,EAAO+H,EAAS42E,GAqGzD,SAASkB,GAAetuE,EAAO0/B,EAAa6uC,EAAe5sE,GAEvD,IAAI6Z,EAAWxb,EAAM9T,KAChBqiF,IACDA,EAAgB7uC,GAGhB6uC,IAAkB7uC,GAAe1/B,IAAU0/B,EAAY56B,OACvD9E,EAAM9T,KAAOwzC,EAAY56B,MACzB46B,EAAY56B,MAAQ9E,GAEfuuE,IAAkB7uC,GAAe1/B,IAAUuuE,EAAcriF,MAC9D8T,EAAM9T,KAAOqiF,EAAcriF,KAC3BqiF,EAAcriF,KAAO8T,GAGrBA,EAAM9T,KAAO,KAEbwzC,IAAgB/9B,EAAMjD,MACtBsB,EAAM+E,OAAS26B,GAInB,IADA,IAAI9U,EAAS5qB,EAAM9T,KACZ0+B,GACCA,EAAO1+B,OAAS8T,IAChB4qB,EAAO1+B,KAAOsvB,GAElBoP,EAASA,EAAO1+B,KAGpB,GAAmB,IAAf8T,EAAMrP,KAEN,OADAwwC,GAAgBx/B,EAAO3B,GAChBA,EAEX+V,GAAYrI,GAAiB1N,EAAO2B,GAAQ3B,EAAO2B,GACnD,IAAIuM,EAAYvM,EAAM3B,EAAMvR,OAK5B,OAJmB,IAAfuR,EAAMrP,MAA8BmP,GAAaoO,IAEjD6H,GAAY7H,EAAUxO,IAASM,EAAO2B,GAEnC3B,EAsBX,SAASwuE,GAAkBh4E,EAASi4E,QACX,IAAjBA,IAA2BA,EAAe,IAW9C,IAAI77C,EAASp8B,EACb,GAAIi0E,GAAmChjC,KAAKjxC,GAAU,CAClD,IAAIk4E,EAAY,GACZC,EAAqB,CAACnE,IAC1B53C,EAASA,EAAO37B,QAAQyzE,IAAwB,SAAU3+E,EAAG6iF,EAAKC,GAC9D,IAAItyD,EAAUqyD,GAAOC,EACjBC,EAAeJ,EAAUnyD,IAAY,GAUzC,GATKuyD,EAAatkF,SACd+xB,EAAQhE,MAAM,KAAKlgB,SAAQ,SAAU02E,GACjC,IAAI52D,EAAQ42D,EAAY52D,MAAM4yD,IAC1BiE,EAAa72D,EAAQ2zD,SAAS3zD,EAAM,GAAI,IAAMqyD,GAC9CyE,EAAqBnE,GAAyBrjC,KAAKsnC,GACvDD,EAAatiF,KAAK,CAACwiF,EAAYC,EAAoBF,OAEvDL,EAAUnyD,GAAWuyD,IAEpBA,EAAatkF,OACd,MAAM,IAAIsF,MAAM,6CAA+CysB,GAKnE,IAHA,IAAI2yD,EAAoBP,EAAmBA,EAAmBnkF,OAAS,GACnEg8D,EAAM,EAEDn8D,EAAI,EAAGA,EAAIykF,EAAatkF,OAAQH,IACrC,GAAIykF,EAAazkF,GAAG,KAAO6kF,EAAmB,CAC1C1oB,EAAMn8D,EACN,MAIR,IAAImD,EAAKnB,EAAOyiF,EAAatoB,GAAM,GAAIwoB,EAAaxhF,EAAG,GAAgCuhF,EAAcvhF,EAAG,GASxG,OATgFA,EAAG,GAE/EmhF,EAAmBl2E,MAEdy2E,IAAsBF,GAC3BL,EAAmBniF,KAAKwiF,GAG5BF,EAAav2E,OAAOiuD,EAAK,GAClBuoB,KAIf,OAAKzlF,OAAO2iB,KAAKwiE,GAAcjkF,OAmB/BooC,GAPAA,GANAA,EAASA,EAAO37B,QAAQ0zE,IAAoB,SAAUxyD,EAAO/K,EAAOtiB,EAAKqkF,EAAOC,EAAM1uD,GAClF,OAAO+tD,EAAa9kF,eAAemB,GAAO,GAAKsiB,EAAQqhE,EAAa3jF,GAAO41B,EAAMvI,MAKrElhB,QAAQ2zE,IAA4B,SAAUzyD,EAAOrtB,GACjE,OAAO2jF,EAAa9kF,eAAemB,GAAO2jF,EAAa3jF,GAAOqtB,MAMlDlhB,QAAQ4zE,IAAgB,SAAU1yD,EAAOrtB,GACrD,GAAI2jF,EAAa9kF,eAAemB,GAAM,CAClC,IAAIiN,EAAO02E,EAAa3jF,GACxB,IAAKiN,EAAKvN,OACN,MAAM,IAAIsF,MAAM,qCAAuCqoB,EAAQ,cAAgBrtB,GAEnF,OAAOiN,EAAK8tC,QAEhB,OAAO1tB,KA1BAya,EAoCf,SAASy8C,KACL,IAAI1tE,EAAQD,MAUhB,SAAS4tE,EAAiB3tE,EAAOxF,GAW7B,IATA,IAAIozE,EAAYzC,GAAeC,MAC3ByC,EAAQrzE,EAAMR,KAAK4zE,EAAYjwE,IAG/BmwE,EAAkB9sE,KAElB+sE,EAAeC,GAAkBJ,EAAWC,EAAMxlF,OAAQ2X,GAE1DlT,EAAQ8gF,EAAY,EACjB9gF,GAASghF,EAAgBhhF,MAAQ6Q,IAAe,EACd,IAAjCowE,EAAa39E,QAAQtD,IACrBmhF,GAAWnhF,EAAOkT,GAA4B,GAGlD,IAAI3B,EAAQ4N,GAASnf,EAAOkT,IACxB3B,GAAyB,IAAfA,EAAMrP,MAA2C,IAAfqP,EAAMrP,MAC7B,OAArBqP,EAAM+wB,aAINtiC,GAASuR,EAAM+wB,WAAWvmC,QAAU,GAExCiE,KA/BJ6gF,CAAiB3tE,EAFLA,EAAMtD,KAIlBwpD,IAAmB,GAmCvB,SAASgoB,GAAyBluE,EAAOlT,EAAOkC,EAAM8V,EAAQzZ,GAC1D,IAAI4V,EAAwBD,KAE5BhB,EAAMlT,EAAQ6Q,IAAiBmH,EAC/B,IAAIzG,EAAQk0B,GAAiBvyB,EAAMtD,IAAQsD,EAAMjD,IAASjQ,EAAOkC,EAAM3D,EAAM,MAM7E,OAHI4V,GAAyBA,EAAsB1W,OAAS8T,IACxD4C,EAAsB1W,KAAO,MAE1B8T,EAEX,SAAS2vE,GAAkBlhF,EAAO8+E,EAAe5rE,GAK7C,IAJA,IAAIwE,EAAWxE,EAAM5C,IACjB+wE,EAAe,KACfvB,EAAgB,KAChBmB,EAAe,GACVrlF,EAAI,EAAGA,EAAIkjF,EAAc/iF,OAAQH,IAAK,CAC3C,IAAIsoC,EAAS46C,EAAcljF,GAC3B,GAAqB,iBAAVsoC,EAAoB,CAC3B,IAAIo9C,EAAYxyC,GAAe5K,EAAQxsB,GACnC+nE,EAAgBX,IAAgBljF,GAEpCkkF,EAAgBuB,EAChBA,EACID,GAAyBluE,EAAOusE,EAAe,EAAiB6B,EAAW,MAC/EL,EAAaljF,KAAK0hF,GAClBjrE,UAEC,GAAqB,iBAAV0vB,EACZ,OAAiB,EAATA,GACJ,KAAK,EACD,IAAIq9C,EAAuBr9C,IAAW,GAYtC47C,EAAgBD,GAAewB,EAV3BE,IAAyBvhF,EAGNkT,EAAMjD,IAGNkP,GAASoiE,EAAsBruE,GAIS4sE,EAAe5sE,GAC9E,MACJ,KAAK,EACD,IAAIqM,EAAY2kB,IAAW,EAC3B+8C,EAAaljF,KAAKwhB,GAClBugE,EAAgBuB,GAChBA,EAAeliE,GAASI,EAAWrM,KAE/BkB,GAAyBitE,EAAoC,IAAtBA,EAAan/E,MAExD,MACJ,KAAK,EAED49E,EAAgBuB,EAAeliE,GADZ+kB,IAAW,EACwBhxB,GACtDkB,GAAyBitE,GAAc,GACvC,MACJ,KAAK,EAMDt1C,GALIy1C,EAAmBt9C,IAAW,EACnB46C,IAAgBljF,GACfkjF,IAAgBljF,GAGgCsX,GAChE,MACJ,QACI,MAAM,IAAI7R,MAAM,yDAA4D6iC,EAAS,UAI7F,OAAQA,GACJ,KAAKhJ,GACD,IAAIkJ,EAAe06C,IAAgBljF,GAC/B6lF,EAAmB3C,IAAgBljF,GAEnC8lF,EAAehqE,EAAS4/B,cAAclT,GAE1C07C,EAAgBuB,EAChBA,EAAeD,GAAyBluE,EAAOuuE,EAAkB,EAAsBC,EAAc,MACrGT,EAAaljF,KAAK0jF,GAClB7wD,GAAgB8wD,EAAcxuE,GAC9BmuE,EAAaM,gBAAkB,KAE/BntE,KACA,MACJ,KAAKymB,GACD,IACIumD,EADAI,EAAe9C,IAAgBljF,GAKnCkkF,EAAgBuB,EAChBA,EAAeD,GAAyBluE,EALpCsuE,EAAmB1C,IAAgBljF,GAK0B,EAH9C8b,EAAS2P,cAAcu6D,GAGsDA,GAChGX,EAAaljF,KAAKyjF,GAClB,MACJ,QACI,MAAM,IAAIngF,MAAM,yDAA4D6iC,EAAS,MAKrG,OADA1vB,KACOysE,EAwFX,SAASE,GAAWnhF,EAAOqoC,EAAUw5C,GACjC,IAAIC,EAAiB3iE,GAASnf,EAAOqoC,GACjC05C,EAAiB/iE,GAAiBhf,EAAOqoC,GACzC05C,GACAvzC,GAAiBnG,EAAS/3B,IAAWyxE,GAEzC,IAAItiE,EAAYJ,GAAKgpB,EAAUroC,GAC3BqR,GAAaoO,IAEe,IAAxBqiE,EAAe5/E,MACfssC,GAAiBnG,EAAS/3B,IAFbmP,EAEmCxO,KAGpD4wE,IAEAC,EAAe/6E,OAAS,IA8BhC,SAASi7E,GAAOhiF,EAAO+H,EAAS42E,GAC5BD,GAAY1+E,EAAO+H,EAAS42E,GAC5BiC,KAUJ,SAASqB,GAAiBjiF,EAAOP,GAC7B,IAAIyT,EAAQD,MAQhB,SAASivE,EAAwBhvE,EAAOxF,EAAO1N,EAAOP,GAIlD,IAHA,IACI0iF,EADkBjuE,KACqBlU,MAAQ6Q,GAC/CitE,EAAgB,GACXliF,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,GAAK,EAIpC,IAHA,IAAIwc,EAAW3Y,EAAO7D,GAElB0M,EADU7I,EAAO7D,EAAI,GACLkuB,MAAMgyD,IACjBp0E,EAAI,EAAGA,EAAIY,EAAMvM,OAAQ2L,IAAK,CACnC,IAAIhK,EAAQ4K,EAAMZ,GAClB,GAAQ,EAAJA,EAGA,MAAM,IAAIrG,MAAM,uDAEf,GAAc,KAAV3D,EAGL,GADmBA,EAAMgsB,MAAMmyD,IAEvBnuE,EAAMsT,iBAAyD,OAAtCtT,EAAMR,KAAKlN,EAAQ6Q,KAC5C3H,GAAc00E,GAA6BlgF,EAAOykF,EAAsB/pE,GAAW0lE,OAGtF,CACD,IAAIvsE,EAAQ4N,GAASgjE,EAAsBjvE,GAGxB,IAAf3B,EAAMrP,MACN6pC,GAAyBo2C,EAAsB/pE,EAAU1a,EAAOwV,GAGpE,IAAI22B,EAAYt4B,EAAM/F,QAAU+F,EAAM/F,OAAO4M,GACzCyxB,GACAE,GAAqB72B,EAAO22B,EAAWnsC,IAUvDgQ,EAAMsT,iBAAyD,OAAtCtT,EAAMR,KAAKlN,EAAQ6Q,MAC5CnD,EAAMR,KAAKlN,EAAQ6Q,IAAiBitE,GAjDxCoE,CAAwBhvE,EAFZA,EAAMtD,IAEoB5P,EAAOP,GAoDjD,IAAI2iF,GAAa,EACbC,GAAgB,EAWpB,SAASC,GAAU5kF,GAMf,OAJImvD,GADQ55C,KACciC,KAAoBxX,KAC1C0kF,IAA2B,GAAKC,IAEpCA,KACOC,GAUX,SAASC,GAAYviF,GACjB,GAAIqiF,GAAe,CACf,IAAInvE,EAAQD,KAGR8tE,EAFQ7tE,EAAMtD,IAEA1C,KAAKlN,EAAQ6Q,IAC3BitE,OAAgB,EAChBv5C,EAAO,KACPvpC,MAAM+H,QAAQg+E,GACdjD,EAAgBiD,GAGhBjD,EAAgBiD,EAAMnB,OACtBr7C,EAAOw8C,EAAMx8C,MAhPzB,SAASi+C,EAAkB1E,EAAev5C,EAAMk+C,EAAoBL,EAAY/5C,EAAUq6C,QAC/D,IAAnBA,IAA6BA,GAAiB,GAElD,IADA,IAAIC,GAAc,EACT/mF,EAAI,EAAGA,EAAIkiF,EAAc/hF,OAAQH,IAAK,CAE3C,IAAI4oC,EAAWs5C,EAAcliF,GAEzB6oC,EAAYq5C,IAAgBliF,GAChC,GAAI8mF,GAAmBl+C,EAAW49C,EAG9B,IADA,IAAI1kF,EAAQ,GACHgK,EAAI9L,EAAI,EAAG8L,GAAM9L,EAAI6oC,EAAY/8B,IAAK,CAC3C,IAAIw8B,EAAS45C,EAAcp2E,GAC3B,GAAqB,iBAAVw8B,EACPxmC,GAASwmC,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAETxmC,GAAS4b,GAAgB+uB,EAASo6C,EAAqBv+C,QAEtD,CACD,IAAI3kB,EAAY2kB,IAAW,EAEvBS,OAAO,EACPi+C,OAAW,EACf,OAAiB,EAAT1+C,GACJ,KAAK,EAGDwF,GAAwBrB,EAAU9oB,EAFnBu+D,IAAgBp2E,GAEwBhK,EADtCogF,IAAgBp2E,IAEjC,MACJ,KAAK,EACD6lC,GAAoBlF,EAAU9oB,EAAW7hB,GACzC,MACJ,KAAK,EAKD,GAHAinC,EAAOJ,EADKu5C,IAAgBp2E,IAIK,QAFjCk7E,EAAWzjE,GAASI,EAAW8oB,IAElBs5C,gBAET,IADA,IAAIkB,EAAcl+C,EAAKjK,OAAOkoD,EAASjB,iBAC9BzhD,EAAI,EAAGA,EAAI2iD,EAAY9mF,OAAQmkC,IAAK,CACzC,IAAI4iD,EAAeD,EAAY3iD,GAC/B,OAAuB,EAAf4iD,GACJ,KAAK,EAKD3B,GAJkB2B,IAAiB,EAIXz6C,GAA+B,GACvD,MACJ,KAAK,EACD,IAEI06C,EADiB5jE,GADI0jE,EAAY3iD,EAAI,KAAO,EACEmI,GACjBs5C,gBACb,OAAhBoB,GAGA75E,GADiBq7B,EADKu+C,IAAiB,GAEdpoD,OAAOqoD,GAAcF,IAOlE,IAAIG,EAAYC,GAAat+C,EAAMjnC,GACnCklF,EAASjB,iBAAiC,IAAfqB,EAAmBA,EAAY,KAE1D9B,IAAmB,EAAGv8C,EAAKppC,OAAOynF,GAAY36C,GAC9Cs6C,GAAc,EACd,MACJ,KAAK,EAEDh+C,EAAOJ,EADKu5C,IAAgBp2E,IAE5Bk7E,EAAWzjE,GAASI,EAAW8oB,GAC/Bm6C,EAAkB79C,EAAKi7C,OAAOgD,EAASjB,iBAAkBp9C,EAAMk+C,EAAoBL,EAAY/5C,EAAUs6C,KAOjI/mF,GAAK6oC,GAgKL+9C,CAAkB1E,EAAev5C,EADRxvB,KAAoBstE,GAAgB,EACFD,GAAYlvE,GAEvEkvE,GAAa,EACbC,GAAgB,GASxB,SAASY,GAAa9E,EAAe9/D,GACjC,IAAIre,EAAQm+E,EAAcjB,MAAM55E,QAAQ+a,GACxC,IAAe,IAAXre,EACA,OAAQm+E,EAAcj8E,MAClB,KAAK,EACD,IAAIghF,EAr7BpB,SAASC,EAAczlF,EAAOo9E,GAE1B,OADaK,GAAoBL,EAApBK,CAA4Bz9E,IAErC,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,OACX,QACI,MAAO,SAu6BgBylF,CAAc9kE,EAmOjD,SAAS+kE,IACL,OAAOC;;;;;;;OApOoDD,KAEhC,KADfpjF,EAAQm+E,EAAcjB,MAAM55E,QAAQ4/E,KACC,UAAjBA,IAChBljF,EAAQm+E,EAAcjB,MAAM55E,QAAQ,UAExC,MAEJ,KAAK,EACDtD,EAAQm+E,EAAcjB,MAAM55E,QAAQ,SAKhD,OAAOtD,EAUX,SAASu/E,GAAS+D,EAAOnF,EAAejqB,EAAYtyB,GAMhD,IALA,IAAI2hD,EAAc,GACdV,EAAc,GACdW,EAAc,GACdt4E,EAAO,GACPu4E,EAAY,GACP7nF,EAAI,EAAGA,EAAIuiF,EAAc1+E,OAAO1D,OAAQH,IAAK,CAIlD,IAFA,IAAIwiF,EAAWD,EAAc1+E,OAAO7D,GAChC8nF,EAAa,GACRh8E,EAAI,EAAGA,EAAI02E,EAASriF,OAAQ2L,IAAK,CACtC,IAAIhK,EAAQ0gF,EAAS12E,GACrB,GAAqB,iBAAVhK,EAAoB,CAE3B,IAAIimF,EAAWD,EAAW3lF,KAAKL,GAAS,EAExC0gF,EAAS12E,GAAK,WAAei8E,EAAW,WAGhD,IAAIC,EAAUC,GAAazF,EAASn7E,KAAK,IAAKixD,EAAYwvB,EAAYJ,EAAO1hD,GAC7E2hD,EAAYxlF,KAAK6lF,EAAQroF,QACzBsnF,EAAY9kF,KAAK6lF,EAAQlpD,QACzB8oD,EAAYzlF,KAAK6lF,EAAQhE,QACzB10E,EAAKnN,KAAK6lF,EAAQ14E,MAClBu4E,EAAU1lF,KAAK6lF,EAAQH,WAW3BH,EAAMvlF,KATK,CACPmE,KAAMi8E,EAAcj8E,KACpBgJ,KAAMA,EACNu4E,UAAWA,EACXvG,MAAOiB,EAAcjB,MACrB3hF,OAAQgoF,EACR7oD,OAAQmoD,EACRjD,OAAQ4D,IAIZhF,IAAiB1/C,KAAKM,IAAInjC,MAAM6iC,KAAM7gC,EAASiN,IAYnD,SAAS24E,GAAat2D,EAAYjM,EAAaoiE,EAAYJ,EAAO1hD,GAC9D,IACIza,EADkB,IAAIL,GAAgBvP,MACHkQ,oBAAoB8F,GAC3D,IAAKpG,EACD,MAAM,IAAI9lB,MAAM,yCAEpB,IACIyiF,EAAU,CAAE54E,KAAM,EAAGu4E,UAAW,GAAIloF,OAAQ,GAAIm/B,OAAQ,GAAIklD,OAAQ,IAExE,OAaJ,SAASmE,EAAWC,EAAaJ,EAAStiE,EAAaoiE,EAAYJ,EAAO1hD,GACtE,GAAIoiD,EAAa,CAEb,IADA,IAAIC,EAAqB,GAClBD,GAAa,CAChB,IAAIj3D,EAAWi3D,EAAY36D,YACvB8tB,EAAWvV,KAAsBgiD,EAAQ14E,KAC7C,OAAQ84E,EAAY96D,UAChB,KAAKC,KAAKC,aACN,IAAIxP,EAAUoqE,EACVv3D,EAAU7S,EAAQ6S,QAAQ9P,cAC9B,GAAK0O,GAAenwB,eAAeuxB,GAI9B,CACDm3D,EAAQroF,OAAOwC,KAAKk9B,GAAgBxO,EAAS0qB,EAAU71B,GAAe,GAAwB,GAE9F,IADA,IAAIwH,EAAUlP,EAAQmP,WACbntB,EAAI,EAAGA,EAAIktB,EAAQ/sB,OAAQH,IAAK,CACrC,IAAIw4D,EAAOtrC,EAAQtf,KAAK5N,GACpBsoF,EAAgB9vB,EAAK71D,KAAKoe,cACTy3C,EAAK12D,MAAMgsB,MAAMmyD,IAG9BnwD,GAAYxwB,eAAegpF,IAEvBh7E,GADAoiB,GAAU44D,GACItG,GAA6BxpB,EAAK12D,MAAOy5C,EAAUid,EAAK71D,KAAMirB,IAEvE+B,GAAa24D,GACJtG,GAA6BxpB,EAAK12D,MAAOy5C,EAAUid,EAAK71D,KAAMqrB,IAG9Dg0D,GAA6BxpB,EAAK12D,MAAOy5C,EAAUid,EAAK71D,MANqBqlF,EAAQhE,QAe3GgE,EAAQroF,OAAOwC,KAAKo5C,GAAY,EAAoB,EAAcid,EAAK71D,KAAM61D,EAAK12D,OAI1FqmF,EAAWC,EAAYx7D,WAAYo7D,EAASzsC,EAAUusC,EAAYJ,EAAO1hD,GAEzEgiD,EAAQlpD,OAAO38B,KAAKo5C,GAAY,EAAoB,QAlCpDysC,EAAQ14E,OAoCZ,MACJ,KAAKie,KAAKgD,UACN,IAAIzuB,EAAQsmF,EAAY/iD,aAAe,GACnCu+C,EAAa9hF,EAAMgsB,MAAMmyD,IAC7B+H,EAAQroF,OAAOwC,KAAKyhF,EAAa,GAAK9hF,EAAOy5C,EAAU71B,GAAe,GAAwB,GAC9FsiE,EAAQlpD,OAAO38B,KAAKo5C,GAAY,EAAoB,GAChDqoC,GACAt2E,GAAc00E,GAA6BlgF,EAAOy5C,GAAWysC,EAAQhE,QAEzE,MACJ,KAAKz2D,KAAKg7D,aAEN,IAAIz6D,EAAQ06D,GAAWvH,KAAKmH,EAAY/iD,aAAe,IACvD,GAAIvX,EAAO,CACP,IAAI26D,EAAiBhH,SAAS3zD,EAAM,GAAI,IAGxCk6D,EAAQroF,OAAOwC,KAAKm9B,GAFwC,GAEdic,EAAU71B,GAAe,GAAwB,GAE/F2iE,EAAmBlmF,KAAK,CADpBumF,EAAYZ,EAAWW,GACSltC,SAIpCysC,EAAQ14E,OAEZ,MACJ,QAEI04E,EAAQ14E,OAEhB84E,EAAcj3D,EAElB,IAASnxB,EAAI,EAAGA,EAAIqoF,EAAmBloF,OAAQH,IAAK,CAChD,IAAI0oF,EACAC,EAAqBN,EAAmBroF,GAAG,GAC/C2jF,GAAS+D,EAFLgB,EAAYL,EAAmBroF,GAAG,GAEX2oF,EAAoB3iD,EAAoBgiD,EAAQ14E,MAE3E,IAAIs5E,EAAgBlB,EAAMvnF,OAAS,EACnC6nF,EAAQ14E,MAAQ4zB,KAAKM,IAAInjC,MAAM6iC,KAAM7gC,EAASqlF,EAAMkB,GAAet5E,OACnE04E,EAAQH,UAAU1lF,KAAKymF,GACvB,IAAI1iE,EAAOo8D,GAAeoG,GAC1BV,EAAQhE,OAAO7hF,KAAKkgF,GAAUqG,EAAUlH,aACxC,GACC,EAAIkH,EAAUlH,YAAamH,GAAsB,EAAoB,EAAmBC,EAAe1iE,EACxG,EACAyiE,GAAsB,EAAoB,EAAmBC,GAC7DZ,EAAQlpD,OAAO38B,KAAKymF,GAAiB,EAAoB,EAAyBD,GAAsB,EAAoB,KA5GpIR,EAFcp2D,GAAmBxG,IAAqBA,GAEnCqB,WAAYs7D,EAASxiE,EAAaoiE,EAAYJ,EAAO1hD,GACjEkiD,EAEX,IAAIM,GAAa,UAoHblF,GAAsB,UAStBmE,GAAY7H,GAQhB,SAASiJ,GAAYC,GACjBv6E,GAAcu6E,EAAU,mCACA,iBAAbA,IACPrB,GAAYqB,EAAS/nE,cAAcnU,QAAQ,KAAM,MAwBzD,IAAIyqE,GAAU,IAAIv0B,IAUlB,SAASimC,GAAwBt3E,EAAInL,EAAM0iF,GACvC,GAAI1iF,GAAQA,IAAS0iF,EACjB,MAAM,IAAIvjF,MAAM,mCAAqCgM,EAAK,MAAQvK,EAAUZ,GAAQ,OAASY,EAAUZ,EAAK3D,OAGpH,SAASsmF,GAAqBzkC,GAC1B,GAA6B,OAAzBA,EAAaj7C,KAAKkI,GAAa,CAC/B,IAAIA,EAAK+yC,EAAaj7C,KAAKkI,GAE3Bs3E,GAAwBt3E,EADT4lE,GAAQ/rE,IAAImG,GACW+yC,GACtC6yB,GAAQjzC,IAAI3yB,EAAI+yC,GAEpB,IAAIp+C,EAAUo+C,EAAaj7C,KAAKnD,QAC5BA,aAAmBmY,WACnBnY,EAAUA,KAEVA,GACAA,EAAQ4H,SAAQ,SAAUhO,GAAK,OAAOipF,GAAqBjpF,MAMnE,SAASkpF,GAA0Bz3E,GAC/B,OAAO4lE,GAAQ/rE,IAAImG,IAAOkB,GAAuBlB;;;;;;;OAUrD,IAAI03E,GAA6B,CAC7B3+E,QAAS88D,GACT9mB,SAAUk9B,GACV99B,KAAM,CAACxyC,KAEPg8E,GAA+B,SAAU/+D,GAEzC,SAAS++D,EAAc5kC,EAAc6G,GACjC,IAAIrS,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KACjCm6C,EAAMqS,QAAUA,EAEhBrS,EAAMgiC,qBAAuB,GAC7BhiC,EAAMnuC,SAAWmuC,EACjBA,EAAM2lC,WAAa,GACnB,IAAIzrE,EAAcC,GAAeqxC,GAE7B6kC,EAl8rBZ,SAASC,EAAiBhjF,GACtB,OAAOA,EAAKkD,KAAkB,KAi8rBN8/E,CAAiB9kC,GAcrC,OAbI6kC,GACAR,GAAYQ,GAEhBrwC,EAAMgiC,qBAAuB18D,GAAcpL,EAAYL,WAQvDmmC,EAAMuwC,YAAc9mC,GAAe+B,EAAc6G,EAPvB,CACtB,CACI7gD,QAAS4C,GACT1C,SAAUsuC,GAEdmwC,IAE2EjiF,EAAUs9C,IACzFxL,EAAM7xB,SAAW6xB,EAAM1tC,IAAIk5C,GACpBxL,EA4BX,OApDAz5C,EAAU6pF,EAAe/+D,GA0BzB++D,EAAc1pF,UAAU4L,IAAM,SAAUxG,EAAO2G,EAAe2vE,GAG1D,YAFsB,IAAlB3vE,IAA4BA,EAAgBu6C,GAAS/7C,yBACrC,IAAhBmxE,IAA0BA,EAAcj9E,EAAQyG,YAAYwG,SAC5DtG,IAAUkhD,IAAYlhD,IAAUsI,IAAetI,IAAUkF,GAClDnL,KAEJA,KAAK0qF,YAAYj+E,IAAIxG,EAAO2G,EAAe2vE,IAEtDn8E,OAAO+B,eAAeooF,EAAc1pF,UAAW,2BAA4B,CACvE4L,IAAK,WACD,OAAOzM,KAAKyM,IAAIg8D,KAEpB5lC,YAAY,EACZC,cAAc,IAElBynD,EAAc1pF,UAAUy1C,QAAU,WAE9B,IAAItqC,EAAWhM,KAAK0qF,aACnB1+E,EAAS48B,WAAa58B,EAASsqC,UAChCt2C,KAAK8/E,WAAW3wE,SAAQ,SAAU/F,GAAM,OAAOA,OAC/CpJ,KAAK8/E,WAAa,MAEtByK,EAAc1pF,UAAUkR,UAAY,SAAUonC,GAE1Cn5C,KAAK8/E,WAAWx8E,KAAK61C,IAElBoxC,EArDuB,CAsDhCh8E,IACEo8E,GAAmC,SAAUn/D,GAE7C,SAAShd,EAAgButE,GACrB,IAAI5hC,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KA6BjC,OA5BAm6C,EAAM4hC,WAAaA,EAEC,OADFznE,GAAeynE,IAyB7BqO,GAAqBrO,GAElB5hC,EAKX,OApCAz5C,EAAU8N,EAAiBgd,GAiC3Bhd,EAAgB3N,UAAUC,OAAS,SAAUo7C,GACzC,OAAO,IAAIquC,GAAcvqF,KAAK+7E,WAAY7/B,IAEvC1tC,EArC2B,CAsCpCA;;;;;;;;AA8FF,SAASo8E,GAAgBC,EAAYC,EAAQC,GAEzC,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACZ,OAAO2M,GAAe1M,GAClBy5C,GAAcz5C,EAAO8B,EAAcwwE,EAAUD,EAAOvpF,KAAKwpF,GAAWD,KACpE34B,GAAW15C,EAAO8B,GAc1B,SAASywE,GAAgBH,EAAYC,EAAQG,EAAKF,GAE9C,IAAItyE,EAAQD,KACR+B,EAAeJ,KAAmB0wE,EACtC,OAAOz4B,GAAe35C,EAAO8B,EAAc0wE,GACvC/4B,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EAAUD,EAAOvpF,KAAKwpF,EAASE,GAAOH,EAAOG,IACpF94B,GAAW15C,EAAO8B,EAAe,GAezC,SAAS2wE,GAAgBL,EAAYC,EAAQx4B,EAAMC,EAAMw4B,GAErD,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACZ,OAAO65C,GAAgB55C,EAAO8B,EAAc+3C,EAAMC,GAC9CL,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EAAUD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,GAAQu4B,EAAOx4B,EAAMC,IACjGJ,GAAW15C,EAAO8B,EAAe,GAgBzC,SAAS4wE,GAAgBN,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAMq4B,GAE3D,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACZ,OAAOi6C,GAAgBh6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,GACpDR,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EAAUD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,GAAQo4B,EAAOx4B,EAAMC,EAAMG,IAC7GP,GAAW15C,EAAO8B,EAAe,GAiBzC,SAAS6wE,GAAgBP,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAME,EAAMm4B,GAEjE,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACZ,OAAOm6C,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GAC1DV,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EAAUD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,EAAME,GAAQk4B,EAAOx4B,EAAMC,EAAMG,EAAME,IACzHT,GAAW15C,EAAO8B,EAAe,GAkBzC,SAAS8wE,GAAgBR,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAMP,GAEvE,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACRg6C,EAAYG,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GACvE,OAAOR,GAAe35C,EAAO8B,EAAe,EAAG+wE,IAAS94B,EACpDN,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EAAUD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,EAAME,EAAM04B,GAC1FR,EAAOx4B,EAAMC,EAAMG,EAAME,EAAM04B,IACnCn5B,GAAW15C,EAAO8B,EAAe,GAmBzC,SAASgxE,GAAgBV,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAMT,GAE7E,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACRg6C,EAAYG,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GACvE,OAAOP,GAAgB55C,EAAO8B,EAAe,EAAG+wE,EAAME,IAASh5B,EAC3DN,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EACnCD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,GACnDV,EAAOx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,IACzCr5B,GAAW15C,EAAO8B,EAAe,GAoBzC,SAASkxE,GAAgBZ,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,EAAMX,GAEnF,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACRg6C,EAAYG,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GACvE,OAAOH,GAAgBh6C,EAAO8B,EAAe,EAAG+wE,EAAME,EAAME,IAASl5B,EACjEN,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EACnCD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,GACzDZ,EAAOx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,IAC/Cv5B,GAAW15C,EAAO8B,EAAe,GAqBzC,SAASoxE,GAAgBd,EAAYC,EAAQx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,EAAME,EAAMb,GAEzF,IAAIxwE,EAAeJ,KAAmB0wE,EAClCpyE,EAAQD,KACRg6C,EAAYG,GAAgBl6C,EAAO8B,EAAc+3C,EAAMC,EAAMG,EAAME,GACvE,OAAOD,GAAgBl6C,EAAO8B,EAAe,EAAG+wE,EAAME,EAAME,EAAME,IAASp5B,EACvEN,GAAcz5C,EAAO8B,EAAe,EAAGwwE,EACnCD,EAAOvpF,KAAKwpF,EAASz4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,EAAME,GAC/Dd,EAAOx4B,EAAMC,EAAMG,EAAME,EAAM04B,EAAME,EAAME,EAAME,IACrDz5B,GAAW15C,EAAO8B,EAAe,GAiBzC,SAASsxE,GAAgBhB,EAAYC,EAAQgB,EAAMf,GAK/C,IAHA,IAAIxwE,EAAeJ,KAAmB0wE,EAClCr4B,GAAY,EACZ/5C,EAAQD,KACHrX,EAAI,EAAGA,EAAI2qF,EAAKxqF,OAAQH,IAC7BixD,GAAe35C,EAAO8B,IAAgBuxE,EAAK3qF,MAAQqxD,GAAY,GAEnE,OAAOA,EAAYN,GAAcz5C,EAAO8B,EAAcuwE,EAAOtpF,MAAMupF,EAASe,IACxE35B,GAAW15C,EAAO8B;;;;;;;OAmB1B,SAASwxE,GAAOxmF,EAAOymF,GACnB,IACIl3E,EADA7B,EAAQuF,KAAWrD,IAEnB81B,EAAgB1lC,EAAQ6Q,GACxBnD,EAAMsT,iBACNzR,EAwBR,SAASm3E,EAAanoF,EAAM8rC,GACxB,GAAIA,EACA,IAAK,IAAIzuC,EAAIyuC,EAAStuC,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC3C,IAAI2T,EAAU86B,EAASzuC,GACvB,GAAI2C,IAASgR,EAAQhR,KACjB,OAAOgR,EAInB,MAAM,IAAIlO,MAAM,aAAe9C,EAAO,yBAjCxBmoF,CAAaD,EAAU/4E,EAAMw0B,cACvCx0B,EAAMR,KAAKw4B,GAAiBn2B,EACxBA,EAAQ/C,YACPkB,EAAM4kB,eAAiB5kB,EAAM4kB,aAAe,KAAKv0B,KAAK2nC,EAAen2B,EAAQ/C,YAIlF+C,EAAU7B,EAAMR,KAAKw4B,GAEzB,IACIihD,GADcp3E,EAAQzV,UAAYyV,EAAQzV,QAAU2V,GAAcF,EAAQrN,UAG9E,OADA8uD,GAAMhxD,EAAO2mF,GACNA,EAmCX,SAASC,GAAY5mF,EAAOslF,EAAYx3B,GACpC,IAAI56C,EAAQD,KACR0zE,EAAetnE,GAAKnM,EAAOlT,GAC/B,OAAO6mF,GAAc3zE,EAAO4zE,GAAO5zE,EAAOlT,GACtCylF,GAAgBH,EAAYqB,EAAaI,UAAWj5B,EAAI64B,GACxDA,EAAaI,UAAUj5B,IAe/B,SAASk5B,GAAYhnF,EAAOslF,EAAYx3B,EAAIG,GACxC,IAAI/6C,EAAQD,KACR0zE,EAAetnE,GAAKnM,EAAOlT,GAC/B,OAAO6mF,GAAc3zE,EAAO4zE,GAAO5zE,EAAOlT,GACtC2lF,GAAgBL,EAAYqB,EAAaI,UAAWj5B,EAAIG,EAAI04B,GAC5DA,EAAaI,UAAUj5B,EAAIG,IAgBnC,SAASg5B,GAAYjnF,EAAOslF,EAAYx3B,EAAIG,EAAIG,GAC5C,IAAIl7C,EAAQD,KACR0zE,EAAetnE,GAAKnM,EAAOlT,GAC/B,OAAO6mF,GAAc3zE,EAAO4zE,GAAO5zE,EAAOlT,GACtC4lF,GAAgBN,EAAYqB,EAAaI,UAAWj5B,EAAIG,EAAIG,EAAIu4B,GAChEA,EAAaI,UAAUj5B,EAAIG,EAAIG,IAiBvC,SAAS84B,GAAYlnF,EAAOslF,EAAYx3B,EAAIG,EAAIG,EAAIG,GAChD,IAAIr7C,EAAQD,KACR0zE,EAAetnE,GAAKnM,EAAOlT,GAC/B,OAAO6mF,GAAc3zE,EAAO4zE,GAAO5zE,EAAOlT,GACtC6lF,GAAgBP,EAAYqB,EAAaI,UAAWj5B,EAAIG,EAAIG,EAAIG,EAAIo4B,GACpEA,EAAaI,UAAUj5B,EAAIG,EAAIG,EAAIG,IAc3C,SAAS44B,GAAYnnF,EAAOslF,EAAY7lF,GACpC,IAAIyT,EAAQD,KACR0zE,EAAetnE,GAAKnM,EAAOlT,GAC/B,OAAO6mF,GAAc3zE,EAAO4zE,GAAO5zE,EAAOlT,GACtCsmF,GAAgBhB,EAAYqB,EAAaI,UAAWtnF,EAAQknF,GAC5DA,EAAaI,UAAU9qF,MAAM0qF,EAAclnF,IAEnD,SAASqnF,GAAO5zE,EAAOlT,GACnB,OAAOkT,EAAMtD,IAAO1C,KAAKlN,EAAQ6Q,IAAerB,KASpD,SAASq3E,GAAc3zE,EAAOqgD,GAQ1B,OAPIlH,GAAaI,UAAU8G,KACvBA,EAAWlH,GAAaG,OAAO+G,GAI/BrgD,EAD6B6B,MACGqF,IAE7Bm5C;;;;;;;OA6DX,IAAI6zB,GAA8B,SAAUnhE,GASxC,SAASmhE,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIzyC,EAAQ3uB,EAAOjqB,KAAKvB,OAASA,KAEjC,OADAm6C,EAAM0yC,UAAYD,EACXzyC,EAkDX,OA9DAz5C,EAAUisF,EAAcnhE,GAkBxBmhE,EAAa9rF,UAAUisF,KAAO,SAAU7pF,GAASuoB,EAAO3qB,UAAUmC,KAAKzB,KAAKvB,KAAMiD,IASlF0pF,EAAa9rF,UAAUk7D,UAAY,SAAUgxB,EAAiBxpF,EAAOypF,GACjE,IAAIC,EACAC,EAAU,SAAU1b,GAAO,OAAO,MAClC2b,EAAa,WAAc,OAAO,MAClCJ,GAA8C,iBAApBA,GAC1BE,EAAcjtF,KAAK6sF,UAAY,SAAU5pF,GACrCgc,YAAW,WAAc,OAAO8tE,EAAgB/pF,KAAKC,OACrD,SAAUA,GAAS8pF,EAAgB/pF,KAAKC,IACxC8pF,EAAgBxpF,QAChB2pF,EAAUltF,KAAK6sF,UAAY,SAAUrb,GAAOvyD,YAAW,WAAc,OAAO8tE,EAAgBxpF,MAAMiuE,OAC9F,SAAUA,GAAOub,EAAgBxpF,MAAMiuE,KAE3Cub,EAAgBC,WAChBG,EAAantF,KAAK6sF,UAAY,WAAc5tE,YAAW,WAAc,OAAO8tE,EAAgBC,eACxF,WAAcD,EAAgBC,eAItCC,EAAcjtF,KAAK6sF,UAAY,SAAU5pF,GAASgc,YAAW,WAAc,OAAO8tE,EAAgB9pF,OAC9F,SAAUA,GAAS8pF,EAAgB9pF,IACnCM,IACA2pF,EACIltF,KAAK6sF,UAAY,SAAUrb,GAAOvyD,YAAW,WAAc,OAAO1b,EAAMiuE,OAAc,SAAUA,GAAOjuE,EAAMiuE,KAEjHwb,IACAG,EACIntF,KAAK6sF,UAAY,WAAc5tE,YAAW,WAAc,OAAO+tE,QAAoB,WAAcA,OAG7G,IAAII,EAAO5hE,EAAO3qB,UAAUk7D,UAAUx6D,KAAKvB,KAAMitF,EAAaC,EAASC,GAIvE,OAHIJ,aAA2BjtF,EAAKutF,cAChCN,EAAgBhtD,IAAIqtD,GAEjBA,GAEJT,EA/DsB,CAgE/B7sF,EAAKwtF;;;;;;;OASP,SAASC,KACL,OAAOvtF,KAAKwtF,SAAS38B,QA4BzB,IAAI48B,GAA2B,WAC3B,SAASA,IACLztF,KAAK0oC,OAAQ,EACb1oC,KAAKwtF,SAAW,GAChBxtF,KAAKw+E,QAAU,IAAImO,GACnB3sF,KAAKsB,OAAS,EAKd,IAAIosF,EAAS78B,KACTzmC,EAAQqjE,EAAU5sF,UACjBupB,EAAMsjE,KACPtjE,EAAMsjE,GAAUH,IAsExB,OAhEAE,EAAU5sF,UAAU0H,IAAM,SAAUa,GAAM,OAAOpJ,KAAKwtF,SAASjlF,IAAIa,IAKnEqkF,EAAU5sF,UAAU8sF,OAAS,SAAUvkF,GACnC,OAAOpJ,KAAKwtF,SAASG,OAAOvkF,IAMhCqkF,EAAU5sF,UAAU2vE,KAAO,SAAUpnE,GACjC,OAAOpJ,KAAKwtF,SAAShd,KAAKpnE,IAM9BqkF,EAAU5sF,UAAU+sF,OAAS,SAAUxkF,EAAIykF,GACvC,OAAO7tF,KAAKwtF,SAASI,OAAOxkF,EAAIykF,IAMpCJ,EAAU5sF,UAAUsO,QAAU,SAAU/F,GAAMpJ,KAAKwtF,SAASr+E,QAAQ/F,IAKpEqkF,EAAU5sF,UAAUgrD,KAAO,SAAUziD,GACjC,OAAOpJ,KAAKwtF,SAAS3hC,KAAKziD,IAK9BqkF,EAAU5sF,UAAUitF,QAAU,WAAc,OAAO9tF,KAAKwtF,SAASx+E,SACjEy+E,EAAU5sF,UAAU8H,SAAW,WAAc,OAAO3I,KAAKwtF,SAAS7kF,YAQlE8kF,EAAU5sF,UAAUktF,MAAQ,SAAUC,GAClChuF,KAAKwtF,SAAW5+E,GAAQo/E,GACxBhuF,KAAK0oC,OAAQ,EACb1oC,KAAKsB,OAAStB,KAAKwtF,SAASlsF,OAC5BtB,KAAKiuF,KAAOjuF,KAAKwtF,SAASxtF,KAAKsB,OAAS,GACxCtB,KAAK8tD,MAAQ9tD,KAAKwtF,SAAS,IAK/BC,EAAU5sF,UAAUqtF,gBAAkB,WAAcluF,KAAKw+E,QAAQsO,KAAK9sF,OAEtEytF,EAAU5sF,UAAUstF,SAAW,WAAcnuF,KAAK0oC,OAAQ,GAE1D+kD,EAAU5sF,UAAUy1C,QAAU,WAC1Bt2C,KAAKw+E,QAAQwO,WACbhtF,KAAKw+E,QAAQnoC,eAEVo3C,EAnFmB,GAoH1BW,GAAyB,WACzB,SAASA,EAAQC,GACbruF,KAAKquF,UAAYA,EACjBruF,KAAK6vC,QAAU,KAInB,OAFAu+C,EAAQvtF,UAAUytF,MAAQ,WAAc,OAAO,IAAIF,EAAQpuF,KAAKquF,YAChED,EAAQvtF,UAAUstF,SAAW,WAAcnuF,KAAKquF,UAAUF,YACnDC,EAPiB,GASxBG,GAA2B,WAC3B,SAASA,EAAUrnD,QACC,IAAZA,IAAsBA,EAAU,IACpClnC,KAAKknC,QAAUA,EA6BnB,OA3BAqnD,EAAU1tF,UAAUi6C,mBAAqB,SAAU7nC,GAC/C,IAAIu7E,EAAWv7E,EAAMi0B,QACrB,GAAiB,OAAbsnD,EAAmB,CAOnB,IANA,IAAIC,EAAgD,OAAzBx7E,EAAMnC,eAA0BmC,EAAMnC,eAAe,GAAK09E,EAASltF,OAC1FotF,EAAe,GAKVvtF,EAAI,EAAGA,EAAIstF,EAAsBttF,IAAK,CAC3C,IAAIwtF,EAASH,EAASI,WAAWztF,GAEjCutF,EAAaprF,KADMtD,KAAKknC,QAAQynD,EAAOE,wBACRP,SAEnC,OAAO,IAAIC,EAAUG,GAEzB,OAAO,MAEXH,EAAU1tF,UAAU4zC,WAAa,SAAUxhC,GAASjT,KAAK8uF,wBAAwB77E,IACjFs7E,EAAU1tF,UAAUq0C,WAAa,SAAUjiC,GAASjT,KAAK8uF,wBAAwB77E,IACjFs7E,EAAU1tF,UAAUiuF,wBAA0B,SAAU77E,GACpD,IAAK,IAAI9R,EAAI,EAAGA,EAAInB,KAAKknC,QAAQ5lC,OAAQH,IACD,OAAhC4tF,GAAU97E,EAAO9R,GAAG0uC,SACpB7vC,KAAKknC,QAAQ/lC,GAAGgtF,YAIrBI,EAhCmB,GAkC1BS,GACA,SAASA,GAAgBC,EAAWtgC,EAAaugC,EAAUC,QAC1C,IAATA,IAAmBA,EAAO,MAC9BnvF,KAAKivF,UAAYA,EACjBjvF,KAAK2uD,YAAcA,EACnB3uD,KAAKkvF,SAAWA,EAChBlvF,KAAKmvF,KAAOA,GAIhBC,GAA2B,WAC3B,SAASA,EAAUloD,QACC,IAAZA,IAAsBA,EAAU,IACpClnC,KAAKknC,QAAUA,EA8CnB,OA5CAkoD,EAAUvuF,UAAUu5D,aAAe,SAAUnnD,EAAO6D,GAEhD,IAAK,IAAI3V,EAAI,EAAGA,EAAInB,KAAKknC,QAAQ5lC,OAAQH,IACrCnB,KAAKknC,QAAQ/lC,GAAGi5D,aAAannD,EAAO6D,IAG5Cs4E,EAAUvuF,UAAU05D,WAAa,SAAUzjD,GACvC,IAAK,IAAI3V,EAAI,EAAGA,EAAInB,KAAKknC,QAAQ5lC,OAAQH,IACrCnB,KAAKknC,QAAQ/lC,GAAGo5D,WAAWzjD,IAGnCs4E,EAAUvuF,UAAUqrC,cAAgB,SAAUp1B,GAE1C,IADA,IAAIu4E,EAAwB,KACnBluF,EAAI,EAAGA,EAAInB,KAAKsB,OAAQH,IAAK,CAClC,IAAImuF,EAA4C,OAA1BD,EAAiCA,EAAsB/tF,OAAS,EAClFiuF,EAAcvvF,KAAK4uF,WAAWztF,GAAG+qC,cAAcp1B,EAAOw4E,GACtDC,IACAA,EAAYV,uBAAyB1tF,EACP,OAA1BkuF,EACAA,EAAsB/rF,KAAKisF,GAG3BF,EAAwB,CAACE,IAIrC,OAAiC,OAA1BF,EAAiC,IAAID,EAAUC,GAAyB,MAEnFD,EAAUvuF,UAAU6P,SAAW,SAAUuC,EAAO6D,GAE5C,IAAK,IAAI3V,EAAI,EAAGA,EAAInB,KAAKknC,QAAQ5lC,OAAQH,IACrCnB,KAAKknC,QAAQ/lC,GAAGuP,SAASuC,EAAO6D,IAGxCs4E,EAAUvuF,UAAU+tF,WAAa,SAAUrpF,GAEvC,OAAOvF,KAAKknC,QAAQ3hC,IAExBnF,OAAO+B,eAAeitF,EAAUvuF,UAAW,SAAU,CACjD4L,IAAK,WAAc,OAAOzM,KAAKknC,QAAQ5lC,QACvCuhC,YAAY,EACZC,cAAc,IAElBssD,EAAUvuF,UAAU2uF,MAAQ,SAAUC,GAAUzvF,KAAKknC,QAAQ5jC,KAAKmsF,IAC3DL,EAjDmB,GAmD1BM,GAAyB,WACzB,SAASA,EAAQhtF,EAAUoiB,QACL,IAAdA,IAAwBA,GAAa,GACzC9kB,KAAK0C,SAAWA,EAChB1C,KAAK6vC,QAAU,KACf7vC,KAAK6uF,wBAA0B,EAC/B7uF,KAAK2vF,mBAAoB,EAMzB3vF,KAAK4vF,oBAAqB,EAC1B5vF,KAAK6vF,sBAAwB/qE,EA4EjC,OA1EA4qE,EAAQ7uF,UAAUu5D,aAAe,SAAUnnD,EAAO6D,GAC1C9W,KAAK8vF,iBAAiBh5E,IACtB9W,KAAK+vF,WAAW98E,EAAO6D,IAG/B44E,EAAQ7uF,UAAU05D,WAAa,SAAUzjD,GACjC9W,KAAK6vF,wBAA0B/4E,EAAMvR,QACrCvF,KAAK4vF,oBAAqB,IAGlCF,EAAQ7uF,UAAU6P,SAAW,SAAUuC,EAAO6D,GAAS9W,KAAKo6D,aAAannD,EAAO6D,IAChF44E,EAAQ7uF,UAAUqrC,cAAgB,SAAUp1B,EAAOw4E,GAC/C,OAAItvF,KAAK8vF,iBAAiBh5E,IACtB9W,KAAK2vF,mBAAoB,EAGzB3vF,KAAKgwF,UAAUl5E,EAAMvR,MAAO+pF,GACrB,IAAII,EAAQ1vF,KAAK0C,WAErB,MAEXgtF,EAAQ7uF,UAAUivF,iBAAmB,SAAUh5E,GAC3C,OAAI9W,KAAK4vF,qBAAoD,IAA9B5vF,KAAK0C,SAASisD,YAClC3uD,KAAK6vF,yBAA2B/4E,EAAM+E,OAAS/E,EAAM+E,OAAOtW,OAAS,GAEzEvF,KAAK4vF,oBAEhBF,EAAQ7uF,UAAUkvF,WAAa,SAAU98E,EAAO6D,GAC5C,GAAIvW,MAAM+H,QAAQtI,KAAK0C,SAASusF,WAE5B,IADA,IAAIpnD,EAAa7nC,KAAK0C,SAASusF,UACtB9tF,EAAI,EAAGA,EAAI0mC,EAAWvmC,OAAQH,IACnCnB,KAAKiwF,yBAAyBh9E,EAAO6D,EAAOo5E,GAAyBp5E,EAAO+wB,EAAW1mC,SAG1F,CACD,IAAIgvF,EAAgBnwF,KAAK0C,SAASusF,UAC9BkB,IAAkBnf,GACC,IAAfl6D,EAAMrP,MACNzH,KAAKiwF,yBAAyBh9E,EAAO6D,GAAQ,GAIjD9W,KAAKiwF,yBAAyBh9E,EAAO6D,EAAO+R,GAA0B/R,EAAO7D,EAAOk9E,GAAe,GAAO,MAItHT,EAAQ7uF,UAAUovF,yBAA2B,SAAUh9E,EAAO6D,EAAOs5E,GACjE,GAAqB,OAAjBA,EAAuB,CACvB,IAAIjB,EAAOnvF,KAAK0C,SAASysF,KACzB,GAAa,OAATA,EACA,GAAIA,IAASjmB,IAAcimB,IAASje,IAChCie,IAASne,IAA8B,IAAfl6D,EAAMrP,KAC9BzH,KAAKgwF,SAASl5E,EAAMvR,OAAQ,OAE3B,CACD,IAAI8qF,EAAyBxnE,GAA0B/R,EAAO7D,EAAOk8E,GAAM,GAAO,GACnD,OAA3BkB,GACArwF,KAAKgwF,SAASl5E,EAAMvR,MAAO8qF,QAKnCrwF,KAAKgwF,SAASl5E,EAAMvR,MAAO6qF,KAIvCV,EAAQ7uF,UAAUmvF,SAAW,SAAUpzB,EAAU0zB,GACxB,OAAjBtwF,KAAK6vC,QACL7vC,KAAK6vC,QAAU,CAAC+sB,EAAU0zB,GAG1BtwF,KAAK6vC,QAAQvsC,KAAKs5D,EAAU0zB,IAG7BZ,EAzFiB;;;;;;;OAmG5B,SAASQ,GAAyBp5E,EAAOwiB,GACrC,IAAIuO,EAAa/wB,EAAM+wB,WACvB,GAAmB,OAAfA,EACA,IAAK,IAAI1mC,EAAI,EAAGA,EAAI0mC,EAAWvmC,OAAQH,GAAK,EACxC,GAAI0mC,EAAW1mC,KAAOm4B,EAClB,OAAOuO,EAAW1mC,EAAI,GAIlC,OAAO,KAWX,SAASovF,GAAoB93E,EAAO3B,EAAO05E,EAAarB,GACpD,OAAqB,IAAjBqB,EAVR,SAASC,EAAwB35E,EAAOqF,GACpC,OAAmB,IAAfrF,EAAMrP,MAA2C,IAAfqP,EAAMrP,KACjC4yC,GAAiB6uB,GAAYpyD,EAAOqF,GAEvB,IAAfrF,EAAMrP,KACJ+yC,GAAkBw2B,GAAa9H,GAAYpyD,EAAOqF,GAEtD,KAKIs0E,CAAwB35E,EAAO2B,IAEhB,IAAjB+3E,EASb,SAASE,EAAmBj4E,EAAO3B,EAAOq4E,GACtC,OAAIA,IAASjmB,GACF7uB,GAAiB6uB,GAAYpyD,EAAO2B,GAEtC02E,IAASne,GACPx2B,GAAkBw2B,GAAa9H,GAAYpyD,EAAO2B,GAEpD02E,IAASje,GAEPj2B,GAAmBi2B,GAAkBhI,GAAYpyD,EAAO2B,QAF9D,EAdMi4E,CAAmBj4E,EAAO3B,EAAOq4E,GAIjCrmE,GAAkBrQ,EAAMtD,IAAO1C,KAAMgG,EAAO+3E,EAAa15E,GAwBxE,SAAS65E,GAAuBl4E,EAAOk2E,EAAQiC,GAC3C,IAAIC,EAASp4E,EAAMlD,IAAS2xB,QAAQ0pD,GACpC,GAAuB,OAAnBC,EAAOhhD,QAAkB,CAIzB,IAHA,IAAIihD,EAAYr4E,EAAMtD,IAAO1C,KACzBs+E,EAAgBpC,EAAO9+C,QACvBnG,EAAS,GACJvoC,EAAI,EAAGA,EAAI4vF,EAAczvF,OAAQH,GAAK,EAAG,CAC9C,IAAI6vF,EAAiBD,EAAc5vF,GAK/BuoC,EAAOpmC,KAJP0tF,EAAiB,EAIL,KAKAT,GAAoB93E,EADpBq4E,EAAUE,GACwBD,EAAc5vF,EAAI,GAAIwtF,EAAOjsF,SAASysF,OAG5F0B,EAAOhhD,QAAUnG,EAErB,OAAOmnD,EAAOhhD,QAmDlB,SAASohD,GAAe5C,GACpB,IAAI51E,EAAQD,KACRo4E,EAAa/1E,KACjBE,GAAqB61E,EAAa,GAClC,IAAIjC,EAASI,GAAUt2E,EAAMtD,IAAQy7E,GACrC,GAAIvC,EAAU3lD,OAAUvjB,GAAe1M,KAAWk2E,EAAOjsF,SAASwsF,SAAW,CACzE,GAAuB,OAAnBP,EAAO9+C,QACPw+C,EAAUN,MAAM,QAEf,CACD,IAAIrkD,EAASilD,EAAOgB,kBAvDhC,SAASuB,EAAoBz4E,EAAOm4E,EAAYlnD,GAC5C,IAAIilD,EAASl2E,EAAMtD,IAAO+xB,QAAQ0nD,WAAWgC,GACzCG,EAAgBpC,EAAO9+C,QAC3B,GAAsB,OAAlBkhD,EAEA,IADA,IAAII,EAAeR,GAAuBl4E,EAAOk2E,EAAQiC,GAChDzvF,EAAI,EAAGA,EAAI4vF,EAAczvF,OAAQH,GAAK,EAAG,CAC9C,IAAIy7D,EAAWm0B,EAAc5vF,GAC7B,GAAIy7D,EAAW,EAGXlzB,EAAOpmC,KAFU6tF,EAAahwF,EAAI,QAIjC,CAKD,IAJA,IAAImuF,EAAkByB,EAAc5vF,EAAI,GACpCyzC,EAAwBn8B,GAAOmkD,GAG1BngC,EAAM/lB,GAAyB+lB,EAAMmY,EAAsBtzC,OAAQm7B,IAAO,CAC/E,IAAIwP,EAAgB2I,EAAsBnY,GACtCwP,EAAc/1B,MAA4B+1B,EAAc52B,KACxD67E,EAAoBjlD,EAAeqjD,EAAiB5lD,GAK5D,GAA2C,OAAvCkL,EAAsBr+B,IAEtB,IADA,IAAI66E,EAAiBx8C,EAAsBr+B,IAClC86E,EAAM,EAAGA,EAAMD,EAAe9vF,OAAQ+vF,IAC3CH,EAAoBE,EAAeC,GAAM/B,EAAiB5lD,IAM9E,OAAOA,EAqByCwnD,CAAoBz4E,EAAOm4E,EAAY,IAC3ED,GAAuBl4E,EAAOk2E,EAAQiC,GAC1CvC,EAAUN,MAAMrkD,GAChB2kD,EAAUH,kBAEd,OAAO,EAEX,OAAO,EAWX,SAASoD,GAAkBrC,EAAWsC,EAASpC,GAC3CqC,GAAkBh5E,KAAYy2E,EAAWsC,EAASpC,GAAM,GAW5D,SAASsC,GAAYxC,EAAWsC,EAASpC,GACrCqC,GAAkBh5E,KAAYy2E,EAAWsC,EAASpC,GAAM,GAE5D,SAASqC,GAAkB/4E,EAAOw2E,EAAWsC,EAASpC,EAAMD,GACxD,IAAIj8E,EAAQwF,EAAMtD,IACdlC,EAAMsT,kBACNmrE,GAAaz+E,EAAO,IAAI+7E,GAAgBC,EAAWsC,EAASrC,EAAUC,IAAQ,GAC1ED,IACAj8E,EAAMo0B,mBAAoB,IAGlCsqD,GAAal5E,GAcjB,SAASm5E,GAAe36D,EAAgBg4D,EAAWsC,EAASpC,GACxD0C,GAAqBr5E,KAAYy2E,EAAWsC,EAASpC,GAAM,EAAO11E,KAA4Bwd,GAclG,SAAS66D,GAAqB76D,EAAgBg4D,EAAWsC,EAASpC,GAC9D0C,GAAqBr5E,KAAYy2E,EAAWsC,EAASpC,GAAM,EAAM11E,KAA4Bwd,GAEjG,SAAS46D,GAAqBp5E,EAAOw2E,EAAWsC,EAASpC,EAAMD,EAAUp4E,EAAOmgB,GAC5E,IAAIhkB,EAAQwF,EAAMtD,IACdlC,EAAMsT,kBACNmrE,GAAaz+E,EAAO,IAAI+7E,GAAgBC,EAAWsC,EAASrC,EAAUC,GAAOr4E,EAAMvR,OAkC3F,SAASwsF,EAAkC9+E,EAAOgkB,GAC9C,IAAI+6D,EAAsB/+E,EAAMnC,iBAAmBmC,EAAMnC,eAAiB,IAEtEmmB,KAD0BhkB,EAAMnC,eAAexP,OAAS0wF,EAAoBA,EAAoB1wF,OAAS,IAAM,IAE/G0wF,EAAoB1uF,KAAK2P,EAAMi0B,QAAQ5lC,OAAS,EAAG21B,GArCnD86D,CAAkC9+E,EAAOgkB,GACrCi4D,IACAj8E,EAAMq0B,sBAAuB,IAGrCqqD,GAAal5E,GAOjB,SAASw5E,KACL,OAEJ,SAASC,EAAkBz5E,EAAOm4E,GAI9B,OAAOn4E,EAAMlD,IAAS2xB,QAAQ0pD,GAAYvC,UANnC6D,CAAkB15E,KAAYqC,MAQzC,SAAS82E,GAAal5E,GAClB,IAAI41E,EAAY,IAAIZ,IAj9fxB,SAAS0E,EAAwB15E,EAAO7K,EAASyrC,GAC7C,IAAIpD,EAAWvD,GAAWj6B,GAC1Bw9B,EAAS3yC,KAAKsK,GACV6K,EAAMtD,IAAOoR,iBACbosB,GAAgBl6B,GAAOnV,KAAK+1C,EAAWpD,EAAS30C,OAAS,GA88f7D6wF,CAAwB15E,EAAO41E,EAAWA,EAAU/3C,SAC7B,OAAnB79B,EAAMlD,MACNkD,EAAMlD,IAAW,IAAIg5E,IACzB91E,EAAMlD,IAAS2xB,QAAQ5jC,KAAK,IAAI8qF,GAAQC,IAE5C,SAASqD,GAAaz+E,EAAOvQ,EAAUoiB,GACb,OAAlB7R,EAAMi0B,UACNj0B,EAAMi0B,QAAU,IAAIkoD,IACxBn8E,EAAMi0B,QAAQsoD,MAAM,IAAIE,GAAQhtF,EAAUoiB,IAS9C,SAASiqE,GAAU97E,EAAO1N,GAEtB,OAAO0N,EAAMi0B,QAAQ0nD,WAAWrpF;;;;;;;OAgBpC,SAAS6sF,GAAuBt7E,EAAOqF,GACnC,OAAOq+B,GAAkBw2B,GAAa9H,GAAYpyD,EAAOqF,GAO7D,SAASk2E,GAA8B/lF,QACrB,IAAVA,IAAoBA,EAAQhN,EAAQyG,YAAYwG,SACpD,IAAItJ,EAAQ85C,IAAwB,GACpC,GAAa,MAAT95C,GAAmBqJ,EAAQhN,EAAQyG,YAAYI,SAI/C,OAAOlD,EAHP,MAAM,IAAI2D,MAAM;;;;;;;;;;;;;;OAsBxB,IAwJI0rF,GAxJ4B,CAC5Bz/B,cAAeA,GACf2B,0BAA2BA,GAC3BE,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3B9kD,oBAAqBA,GACrByE,oBAAqBA,GACrB7N,qBAAsBA,EACtBK,mBAAoBA,EACpB2M,mBAAoBA,GACpBc,eAAgBA,GAChB6hD,oBAAqBA,GACrBtoD,iBAAkBA,GAClB+b,wBAAyBA,GACzBzd,WAAYA,GACZiqD,oBAAqBA,GACrBC,mBAAoBA,GACpBy7B,gCAAiCA,GACjCD,yBAA0BA,GAC1BpsB,uBAAwBA,GACxBgC,qBAAsBA,GACtB5C,0BAA2BA,GAC3BnB,6BAA8BA,GAC9BtO,cAAeA,GACfkI,gBAAiBA,GACjB1H,0BAA2BA,GAC3BC,wBAAyBA,GACzB75C,kBAAmBA,GACnBD,oBAAqBA,GACrBD,iBAAkBA,GAClB/D,mBAAoBA,GACpBC,oBAAqBA,GACrB+3C,kBAAmBA,GACnByJ,iBAAkBA,GAClBM,eAAgBA,GAChBI,YAAaA,GACbI,0BAA2BA,GAC3BC,wBAAyBA,GACzBC,qBAAsBA,GACtB6vB,kBAAmBA,GACnBI,kBAAmBA,GACnBE,kBAAmBA,GACnBC,kBAAmBA,GACnBC,kBAAmBA,GACnBC,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBE,kBAAmBA,GACnBjwB,mBAAoBA,GACpBtiD,gBAAiBA,GACjB0iD,aAAcA,GACd4C,eAAgBA,GAChB6C,+BAAgCA,GAChCnF,mCAAoCA,GACpC6vB,cAAeA,GACfI,cAAeA,GACfC,cAAeA,GACfC,cAAeA,GACfC,cAAeA,GACftuB,kBAAmBA,GACnBoD,iBAAkBA,GAClB1C,aAAcA,GACdC,wBAAyBA,GACzBC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BusB,SAAUA,GACVkF,iBAAkBA,GAClBQ,cAAeA,GACfH,oBAAqBA,GACrBQ,uBAAwBA,GACxBG,cAAeA,GACfL,iBAAkBA,GAClBp7B,cAAeA,GACfkE,qBAAsBA,GACtB1C,aAAcA,GACdqI,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BC,yBAA0BA,GAC1BhJ,aAAcA,GACdf,cAAeA,GACfgK,0BAA2BA,GAC3BE,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3BC,0BAA2BA,GAC3B1K,mBAAoBA,GACpBQ,cAAeA,GACf92B,WAAYA,GACZH,YAAaA,GACby1B,aAAcA,GACd4J,SAAUA,GACVE,oBAAqBA,GACrBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBC,qBAAsBA,GACtBpF,sBAAuBA,GACvBU,oBAAqBA,GACrB6rB,SAAUA,GACVC,mBAAoBA,GACpBK,YAAaA,GACb5D,cAAeA,GACfkC,YAAaA,GACb2B,cAAeA,GACfxC,oBAAqBA,GACrBpmE,kBAAmBA,GACnBI,oBAAqBA,GACrBC,gBAAiBA,GACjB7L,sBAAuBA,GACvBS,qBAAsBA,GACtB2f,iBAAkBA,GAClBI,kBAAmBA,GACnBe,0BAA2BA,GAC3BT,wBAAyBA,GACzBG,mBAAoBA,GACpBN,gBAAiBA,GACjBW,6BAA8BA,IAgB9Bu9D,GAAgB,GAChBC,GAAc,GAQdC,IAAsB,EAM1B,SAASC,KACL,IAAKD,GAAqB,CACtBA,IAAsB,EACtB,IACI,IAAK,IAAItxF,EAAIqxF,GAAYlxF,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC9C,IAAImD,EAAKkuF,GAAYrxF,GAAI46E,EAAaz3E,EAAGy3E,WAAY5/B,EAAW73C,EAAG63C,SAC/DA,EAASloC,cAAgBkoC,EAASloC,aAAa0+E,MAAMC,MAErDJ,GAAYnjF,OAAOlO,EAAG,GACtB0xF,GAA6B9W,EAAY5/B,KAIrD,QACIs2C,IAAsB,IASlC,SAASG,GAAsBE,GAC3B,OAAIvyF,MAAM+H,QAAQwqF,GACPA,EAAYH,MAAMC,MAEpB1pF,EAAkB4pF,GAO/B,SAASC,GAAgBhX,EAAY5/B,QAChB,IAAbA,IAAuBA,EAAW,IACtC62C,GAAoBjX,EAAY5/B,GA7CpC,SAAS82C,EAA+BlX,EAAY5/B,GAChDq2C,GAAYlvF,KAAK,CAAEy4E,WAAYA,EAAY5/B,SAAUA,IAiDrD82C,CAA+BlX,EAAY5/B,GAQ/C,SAAS62C,GAAoBjX,EAAY5/B,EAAU+2C,QACN,IAArCA,IAA+CA,GAAmC,GAGtF,IAAIj/E,EAAerF,GAAQutC,EAASloC,cAAgBs+E,IAChDl+E,EAAc,KAClBjU,OAAO+B,eAAe45E,EAAYtxE,GAAY,CAC1Cq4B,cAAc,EACdr2B,IAAK,WAsBD,OArBoB,OAAhB4H,IAMAA,EAActK,IAAoBgpF,gBAAgBT,GAAgB,SAAWvW,EAAWj4E,KAAO,WAAiB,CAC5G2D,KAAMs0E,EACN/nE,UAAWpF,GAAQutC,EAASnoC,WAAau+E,IAAehqF,IAAIW,GAC5D+K,aAAcA,EAAa1L,IAAIW,GAC/B3B,QAASqH,GAAQutC,EAAS50C,SAAWgrF,IAChChqF,IAAIW,GACJX,IAAI4qF,IACT7zF,QAASsP,GAAQutC,EAAS78C,SAAWizF,IAChChqF,IAAIW,GACJX,IAAI4qF,IACTC,YAAY,EACZpgF,QAASmpC,EAASnpC,QAAUpE,GAAQutC,EAASnpC,SAAW,KACxDJ,GAAIupC,EAASvpC,IAAM,QAGpByB,KAGf,IAAIjM,EAAgB,KACpBhI,OAAO+B,eAAe45E,EAAYh0E,EAAY,CAC1C0E,IAAK,WACD,GAAsB,OAAlBrE,EAAwB,CAExB,IAAIvC,EAAO,CACP/B,KAAMi4E,EAAWj4E,KACjB2D,KAAMs0E,EACNh7B,KAAMF,GAAoBk7B,GAC1Bz0E,UAAW60C,EAAS70C,WAAairF,GACjChrF,QAAS,EACJ40C,EAAS50C,SAAWgrF,IAAehqF,IAAIW,IACvCizC,EAAS78C,SAAWizF,IAAehqF,IAAIW,KAGhDd,EAAgB2B,IAAoBspF,gBAAgBf,GAAgB,SAAWvW,EAAWj4E,KAAO,WAAiB+B,GAEtH,OAAOuC,GAGX06B,cAAc,IA+LtB,SAAS+vD,GAA6B9W,EAAY5/B,GAC9C,IAAIloC,EAAerF,GAAQutC,EAASloC,cAAgBs+E,IAChDe,EAAmBC,GAAoBxX,GAC3C9nE,EAAa9E,SAAQ,SAAU2jF,GACvBA,EAAYryF,eAAe0J,IAI3BqpF,GADmB7/E,GADHm/E,GAEyBQ,GAEnCR,EAAYryF,eAAe4J,KAAgByoF,EAAYryF,eAAe8J,MAE5EuoF,EAAYW,gBAAkB1X,MAQ1C,SAASyX,GAA2B/vB,EAAc6vB,GAC9C7vB,EAAarxD,cAAgB,WACzB,OAAO7R,MAAMqrD,KAAK0nC,EAAiBI,YAAYvgF,YAC1C5K,KAAI,SAAUorF,GACf,OAAOA,EAAIlzF,eAAe0J,IAAewJ,GAAgBggF,GAAO//E,GAAgB+/E,MAE/EhG,QAAO,SAAU9lF,GAAO,QAASA,MAE1C47D,EAAapxD,SAAW,WACpB,OAAO9R,MAAMqrD,KAAK0nC,EAAiBI,YAAYpgF,OAAO/K,KAAI,SAAUqrF,GAAQ,OAAO//E,GAAW+/E,OAElGnwB,EAAazwD,QAAUsgF,EAAiBtgF,QAKxCywD,EAAaxwD,MAAQ,KASzB,SAASsgF,GAAoBxX,EAAY8X,GACrC,IAAKC,GAAW/X,GACZ,MAAM,IAAIn1E,MAAMm1E,EAAWj4E,KAAO,+CAEtC,IAAI+D,EAAMyM,GAAeynE,GACzB,GAAoC,OAAhCl0E,EAAIqM,wBACJ,OAAOrM,EAAIqM,wBAEf,IAAI6/E,EAAS,CACT/gF,QAASnL,EAAImL,SAAW,KACxB0gF,YAAa,CACTvgF,WAAY,IAAIgxC,IAChB7wC,MAAO,IAAI6wC,KAEf6vC,SAAU,CACN7gF,WAAY,IAAIgxC,IAChB7wC,MAAO,IAAI6wC,MAsDnB,OAnDA1kC,GAAc5X,EAAIoM,cAAc9E,SAAQ,SAAU8kF,GAE1CpgF,GADmBogF,GAEnBF,EAAOL,YAAYpgF,MAAMysB,IAAIk0D,GAM7BF,EAAOL,YAAYvgF,WAAW4sB,IAAIk0D,MAG1Cx0E,GAAc5X,EAAIN,SAAS4H,SAAQ,SAAUm2C,GACzC,IAAI4uC,EAAe5uC,EACnB,IAAKwuC,GAAWI,GACZ,MAAM,IAAIttF,MAAM,aAAestF,EAAapwF,KAAO,wCAEnD+vF,GACAA,EAAkBK,GAItB,IAAIC,EAAgBZ,GAAoBW,EAAcL,GACtDM,EAAcH,SAAS7gF,WAAWhE,SAAQ,SAAU00B,GAAS,OAAOkwD,EAAOL,YAAYvgF,WAAW4sB,IAAI8D,MACtGswD,EAAcH,SAAS1gF,MAAMnE,SAAQ,SAAU00B,GAAS,OAAOkwD,EAAOL,YAAYpgF,MAAMysB,IAAI8D,SAEhGpkB,GAAc5X,EAAIvI,SAAS6P,SAAQ,SAAU6kF,GACzC,IAAII,EAAeJ,EAGnB,GAAIF,GAAWM,GAAe,CAG1B,IAAIC,EAAgBd,GAAoBa,EAAcP,GACtDQ,EAAcL,SAAS7gF,WAAWhE,SAAQ,SAAU00B,GAChDkwD,EAAOL,YAAYvgF,WAAW4sB,IAAI8D,GAClCkwD,EAAOC,SAAS7gF,WAAW4sB,IAAI8D,MAEnCwwD,EAAcL,SAAS1gF,MAAMnE,SAAQ,SAAU00B,GAC3CkwD,EAAOL,YAAYpgF,MAAMysB,IAAI8D,GAC7BkwD,EAAOC,SAAS1gF,MAAMysB,IAAI8D,WAGzBhwB,GAAWugF,GAChBL,EAAOC,SAAS1gF,MAAMysB,IAAIq0D,GAG1BL,EAAOC,SAAS7gF,WAAW4sB,IAAIq0D,MAGvCvsF,EAAIqM,wBAA0B6/E,EACvBA,EAEX,SAASZ,GAA0BlwF,GAC/B,OAKJ,SAASqxF,EAAsBrxF,GAC3B,YAA0BiE,IAAnBjE,EAAMk5C,SANTm4C,CAAsBrxF,GACfA,EAAMk5C,SAEVl5C,EAKX,SAAS6wF,GAAW7wF,GAChB,QAASqR,GAAerR;;;;;;;OAmB5B,SAASsxF,GAAiB9sF,EAAM/E,GAI5B,IAAI8xF,EAAiB,MAlxXzB,SAASC,EAAyChtF,EAAM/E,GAChD0tD,GAAyB1tD,KACzB8sD,GAAiCjqB,IAAI99B,EAAM/E,GAC3CutD,GAA8BlwB,IAAIt4B,IAixXtCgtF,CAAyChtF,EAAM/E,GAI/CgyF,GAAuBjtF,EAAM/E,GAC7BtC,OAAO+B,eAAesF,EAAM0C,GAAa,CACrCsC,IAAK,WACD,GAAuB,OAAnB+nF,EAAyB,CACzB,IAAIxzC,EAAWj3C,IACf,GAAIqmD,GAAyB1tD,GAAW,CACpC,IAAIa,EAAQ,CAAC,cAAgBkE,EAAK3D,KAAO,sBAQzC,MAPIpB,EAASgtD,aACTnsD,EAAMD,KAAK,mBAAqBZ,EAASgtD,aAEzChtD,EAASitD,WAAajtD,EAASitD,UAAUruD,QACzCiC,EAAMD,KAAK,iBAAmBwK,KAAKzF,UAAU3F,EAASitD,YAE1DpsD,EAAMD,KAAK,2DACL,IAAIsD,MAAMrD,EAAMiF,KAAK,OAE/B,IAAIknD,EAAchtD,EAASgtD,aAAe,SAAWjoD,EAAK3D,KAAO,iBAC7D+B,EAAO9E,EAASA,EAAS,GAAI4zF,GAAkBltF,EAAM/E,IAAY,CAAEkyF,eAAgB5zC,EAAS6zC,sBAAsB,YAAaptF,EAAK3D,KAAM4rD,GAAch/C,SAAUhO,EAASgO,UAAY,GAAIokF,oBAAqBpyF,EAASoyF,sBAAuB,EAAOjiF,OAAQnQ,EAASmQ,QAAU5C,GAAa8kF,WAAYryF,EAASqyF,WAAY5hF,WAAY,GAAIjB,gBAAiBxP,EAASwP,gBAAiBoB,MAAO,IAAI2wC,IAAOvxC,cAAehQ,EAASgQ,eAAiBpT,EAAQ4O,kBAAkByE,SAAUqiF,cAAetyF,EAASsyF,cAAe/sB,cAAevlE,EAASulE,eAAiB,OAe9iB,GAdIpiE,EAAKovF,iBACLC,GAAoCztF,GAExC+sF,EAAiBxzC,EAASuzC,iBAAiBjC,GAAgB5iC,EAAa7pD,GAMxE6sF,KAgBhB,SAASyC,EAAiB5/D,GACtB,YAAqCruB,IAA9BquB,EAAUk+D,gBAZD0B,CAAiB1tF,GAAO,CACxB,IAAIssF,EAASR,GAAoB9rF,EAAKgsF,iBACtCD,GAA2BgB,EAAgBT,IAGnD,OAAOS,GAGX1xD,cAAc,IAatB,SAASsyD,GAAiB3tF,EAAMixB,GAC5B,IAAI28D,EAAiB,KACrBX,GAAuBjtF,EAAMixB,GAAa,IAC1Ct4B,OAAO+B,eAAesF,EAAM4C,GAAY,CACpCoC,IAAK,WACD,GAAuB,OAAnB4oF,EAAyB,CAIzB,IAAIxvF,EAAOyvF,GAAqB7tF,EAAMixB,GAAa,IACnD28D,EACItrF,IAAoBqrF,iBAAiB9C,GAAgBzsF,EAAK0vF,aAAc1vF,EAAKnD,UAErF,OAAO2yF,GAGXvyD,cAAc,IAGtB,SAASwyD,GAAqB7tF,EAAM/E,GAChC,IAAIoB,EAAO2D,GAAQA,EAAK3D,KACpByxF,EAAe,SAAWzxF,EAAO,WACjCk9C,EAAWj3C,IACXyrF,EAASb,GAAkBltF,EAAM/E,GAKrC,OAJA8yF,EAAOZ,eAAiB5zC,EAAS6zC,sBAAsB,YAAa/wF,EAAMyxF,GACtEC,EAAOP,iBACPC,GAAoCztF,GAEjC,CAAE/E,SAAU8yF,EAAQD,aAAcA,GAE7C,SAASb,GAAuBjtF,EAAM/E,GAClC,IAAI+yF,EAAe,KACnBr1F,OAAO+B,eAAesF,EAAMoD,GAAgB,CACxC4B,IAAK,WACD,GAAqB,OAAjBgpF,EAAuB,CACvB,IAAI5vF,EAAOyvF,GAAqB7tF,EAAM/E,GAClCs+C,EAAWj3C,IACf0rF,EAAez0C,EAAS00C,eAAepD,GAAgB,SAAW7qF,EAAK3D,KAAO,WAAiB/C,EAASA,EAAS,GAAI8E,EAAKnD,UAAW,CAAEizF,SAAU,kBAAmBh0F,OAAQq/C,EAAS13C,gBAAgBssF,aAEzM,OAAOH,GAGX3yD,cAAc,IAGtB,SAAS+yD,GAA0BpuF,GAC/B,OAAOrH,OAAOiqB,eAAe5iB,EAAK5G,aAAeT,OAAOS,UAM5D,SAAS8zF,GAAkBltF,EAAM/E,GAE7B,IA0EqBuO,EA1EjBouC,EAAeuB,KAAalB,gBAAgBj4C,GAChD,MAAO,CACH3D,KAAM2D,EAAK3D,KACX2D,KAAMA,EACNw6C,kBAAmB,EACnB3oB,cAAgCpyB,IAAtBxE,EAAS42B,SAAyB52B,EAAS42B,SAAW,KAChEynB,KAAMF,GAAoBp5C,GAC1BojC,KAAMnoC,EAASmoC,MAAQ76B,GACvBqvC,aAAcA,EACdtuC,OAAQrO,EAASqO,QAAUd,GAC3Be,QAAStO,EAASsO,SAAWf,GAC7Bi3B,QAAS4uD,GAAuBruF,EAAM43C,EAAc02C,IACpDC,UAAW,CAAEC,cAAeC,GAAkBzuF,EAAM,gBACpDmtF,eAAgB,KAChBK,iBAAkBY,GAA0BpuF,GAC5CwJ,UA2DiBA,EA3DSvO,EAASuO,cA4DnB/J,IAAb+J,EAAyB,KAAOklF,GAAallF,IA3DhD3J,UAAW5E,EAAS4E,WAAa,KACjC8uF,YAAaN,GAAuBruF,EAAM43C,EAAcqP,KAMhE,SAASwmC,GAAoCztF,GAIzC,IAHA,IAAI4uF,EAAej2F,OAAOS,UACtBgb,EAASzb,OAAOiqB,eAAe5iB,GAE5BoU,GAAUA,IAAWw6E,GAGnBziF,GAAgBiI,IAAYlI,GAAgBkI,KAC7Cy6E,GAA2Bz6E,IAC3Bu5E,GAAiBv5E,EAAQ,MAE7BA,EAASzb,OAAOiqB,eAAexO,GAgBvC,SAASi6E,GAAuBruF,EAAM43C,EAAck3C,GAChD,IAAIC,EAAc,GACdjxC,EAAU,SAAUigB,GACpB,GAAInmB,EAAa5+C,eAAe+kE,GAAQ,CACpC,IAAIixB,EAAgBp3C,EAAammB,GACjCixB,EAActnF,SAAQ,SAAUunF,GAC5B,GAAIH,EAAWG,GAAM,CACjB,IAAKA,EAAIp9D,SACL,MAAM,IAAI1yB,MAAM,8CAAgD4+D,EAAQ,SAC5D1mD,GAAkBrX,GAAQ,+CAE1C,GAAIgvF,EAAc5qC,KAAK8qC,IACnB,MAAM,IAAI/vF,MAAM,0DAEpB4vF,EAAYlzF,KAxBhC,SAASszF,EAAyBC,EAAcH,GAC5C,MAAO,CACHG,aAAcA,EACd5H,WAN2B31D,EAMUo9D,EAAIp9D,SALlB,iBAAbA,EAAwB68D,GAAa78D,GAAYpwB,EAAkBowB,IAM7Eq1B,YAAa+nC,EAAI/nC,YACjBb,MAAO4oC,EAAI5oC,MACXqhC,KAAMuH,EAAIvH,KAAOuH,EAAIvH,KAAO,KAC5B2H,SAAUJ,EAAII,QAVtB,IAAmCx9D,EA2BEs9D,CAAyBpxB,EAAOkxB,UAKjE,IAAK,IAAIlxB,KAASnmB,EACdkG,EAAQigB,GAEZ,OAAOgxB,EAKX,SAAST,GAAe9yF,GACpB,IAAIa,EAAOb,EAAM4B,eACjB,MAAgB,iBAATf,GAAoC,oBAATA,EAEtC,SAAS4qD,GAAYzrD,GACjB,IAAIa,EAAOb,EAAM4B,eACjB,MAAgB,cAATf,GAAiC,iBAATA,EAEnC,SAAS6yF,GAAkB1zF,GACvB,MAAgC,UAAzBA,EAAM4B,eAEjB,SAASsxF,GAAalzF,GAClB,OAAOA,EAAMosB,MAAM,KAAK9mB,KAAI,SAAUwuF,GAAS,OAAOA,EAAMznE,UAEhE,SAAS4mE,GAAkBzuF,EAAM3D,GAC7B,IAAIjD,EAAY4G,EAAK5G,UACrB,OAAOA,GAAaA,EAAUJ,eAAeqD,GAnY7B,IAAImgD,IACD,IAAIA,IAoY3B,IAAI+yC,GAAkB,CAClB,cAAe,WAAY,cAAe,YAAa,kBAAmB,qBAC1E,qBAAsB,yBAE1B,SAASV,GAA2B7uF,GAChC,GAAIuvF,GAAgBnrC,MAAK,SAAUorC,GAAY,OAAOf,GAAkBzuF,EAAMwvF,MAC1E,OAAO,EAEX,IAAI53C,EAAeuB,KAAalB,gBAAgBj4C,GAChD,IAAK,IAAI+9D,KAASnmB,EAEd,IADA,IAAIH,EAAcG,EAAammB,GACtBrkE,EAAI,EAAGA,EAAI+9C,EAAY59C,OAAQH,IAAK,CACzC,IAAIowB,EAAU2tB,EAAY/9C,GACtB+1F,EAAe3lE,EAAQ1sB,eAC3B,GAAI8xF,GAAkBplE,IAAYwkE,GAAexkE,IAAYm9B,GAAYn9B,IACpD,WAAjB2lE,GAA8C,gBAAjBA,GACZ,iBAAjBA,EACA,OAAO,EAInB,OAAO;;;;;;;OAUX,SAASC,GAAY1vF,EAAM5B,GACvB,IAAIuxF,EAAY,KACZ3B,EAAe,KACnBr1F,OAAO+B,eAAesF,EAAMoD,GAAgB,CACxC4B,IAAK,WACD,GAAqB,OAAjBgpF,EAAuB,CACvB,IAAI/yF,EAAW20F,GAAgB5vF,EAAM5B,GACjCm7C,EAAWj3C,IACf0rF,EAAez0C,EAAS00C,eAAepD,GAAgB,SAAW5vF,EAASoB,KAAO,WAAiB/C,EAASA,EAAS,GAAI2B,GAAW,CAAEizF,SAAU,kBAAmBh0F,OAAQq/C,EAAS13C,gBAAgBguF,QAExM,OAAO7B,GAGX3yD,cAAc,IAElB1iC,OAAO+B,eAAesF,EAAM8C,GAAa,CACrCkC,IAAK,WACD,GAAkB,OAAd2qF,EAAoB,CACpB,IAAI10F,EAAW20F,GAAgB5vF,EAAM5B,GACrCuxF,EAAYrtF,IAAoBotF,YAAY7E,GAAgB,SAAW5vF,EAASoB,KAAO,YAAkBpB,GAE7G,OAAO00F,GAGXt0D,cAAc,IAGtB,SAASu0D,GAAgB5vF,EAAM5B,GAC3B,MAAO,CACH4B,KAAMA,EACNw6C,kBAAmB,EACnBn+C,KAAM2D,EAAK3D,KACXi9C,KAAMF,GAAoBp5C,GAC1BukF,SAAUnmF,EAAK/B,KACfiR,UAAoB7N,IAAdrB,EAAKkP,MAAqBlP,EAAKkP;;;;;;;OAW7C,IASI6gF,GAAY/xF,EAAc,aATnB,SAAU8vF,GAEjB,YADY,IAARA,IAAkBA,EAAM,IACrBA,SAOsCzsF,OAAWA,GANlD,SAAUO,EAAM5B,GAAQ,OAAO0xF,GAAyB9vF,EAAM5B,MAiBpE2xF,GAAY3zF,EAAc,aAVnB,SAAU/B,GAEjB,YADU,IAANA,IAAgBA,EAAI,IAChBf,EAAS,CAAEmR,gBAAiB5S,EAAQ0O,wBAAwBzB,SAAWzK,KAQlC8zF,QAAW1uF,GAPlD,SAAUO,EAAM5B,GAAQ,OAAO4xF,GAAyBhwF,EAAM5B,MAapEyxF,GAAOzzF,EAAc,QALhB,SAAUrD,GAAK,OAAQO,EAAS,CAAEgU,MAAM,GAAQvU,UAKpB0G,OAAWA,GALsB,SAAUO,EAAM5B,GAAQ,OAAO6xF,GAAoBjwF,EAAM5B,MAW3H8xF,GAAQlyF,EAAkB,SALrB,SAAUmyF,GAAuB,MAAO,CAAGA,oBAAqBA,MAWrEC,GAASpyF,EAAkB,UALtB,SAAUmyF,GAAuB,MAAO,CAAGA,oBAAqBA,MAWrEE,GAAcryF,EAAkB,eAL3B,SAAUsyF,GAAoB,MAAO,CAAGA,iBAAkBA,MAwC/DC,GAAevyF,EAAkB,gBAlC5B,SAAUw2D,EAAW13D,GAAQ,MAAO,CAAG03D,UAAWA,EAAW13D,KAAMA,MAmCxE0zF,GAAsC1D,GACtC2D,GAAsC9C,GACtC+C,GAAiChB,GAIjCM,GAHqCzuB,GAIrCuuB,GAHqCvuB,GAIrC0uB,GAHgC1uB,GA6BhCovB,GAAWv0F,EAAc,YAjBlB,SAAUs4C,GAAY,OAAOA,SAiBOj1C,OAAWA,GAL1D,SAAUO,EAAM5B,GAAQ,OAAOwyF,GAAwB5wF,EAAM5B,MAiBzDyyF,GAAqCvF,GAErCsF,GAbJ,SAASE,GAAqBxc,EAAYr5E,GACtC,IAAI6E,EAAW7E,GAAYA,EAAS6E,SAAY,GAC5C7E,GAAYA,EAASpD,UACrBiI,EAAU/D,EAAS+D,EAAS,CAAC7E,EAASpD,WAE1Cy8E,EAAW7zE,KAAOd,EAAiB,CAC/B/H,QAASmjD,GAAmCu5B,EAAY,CAAEp6B,SAAUo6B,IACpEz0E,UAAW5E,GAAYA,EAAS4E,UAChCC,QAASA,KA2BbixF,GAAkB,IAAIvtF,GAAe,2BAMrCwtF,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAIv+C,EAAQn6C,KACZA,KAAK04F,SAAWA,EAChB14F,KAAK24F,aAAc,EACnB34F,KAAKkD,MAAO,EACZlD,KAAK44F,YAAc,IAAIvuD,SAAQ,SAAU3hC,EAAKmwF,GAC1C1+C,EAAM7P,QAAU5hC,EAChByxC,EAAM2+C,OAASD,KAiCvB,OA7BAJ,EAAsB53F,UAAUk4F,gBAAkB,WAC9C,IAAI5+C,EAAQn6C,KACZ,IAAIA,KAAK24F,YAAT,CAGA,IAAIK,EAAoB,GACpBhM,EAAW,WACX7yC,EAAMj3C,MAAO,EACbi3C,EAAM7P,WAEV,GAAItqC,KAAK04F,SACL,IAAK,IAAIv3F,EAAI,EAAGA,EAAInB,KAAK04F,SAASp3F,OAAQH,IAAK,CAC3C,IAAI83F,EAAaj5F,KAAK04F,SAASv3F,KAC3B06D,GAAUo9B,IACVD,EAAkB11F,KAAK21F,GAInC5uD,QAAQ0lB,IAAIipC,GAAmB1pC,MAAK,WAAc09B,OAAekM,OAAM,SAAU91F,GAAK+2C,EAAM2+C,OAAO11F,MAClE,IAA7B41F,EAAkB13F,QAClB0rF,IAEJhtF,KAAK24F,aAAc,IAECl3F,EAAW,CAC/ByhD,KACA9gD,EAAQ,EAAG8D,EAAOsyF,KAAmBp2F,EAAQ,EAAG+D,KAChD5D,EAAW,oBAAqB,CAAChC,SAClCk4F,GAxCmC,GA6DtCU,GAAS,IAAIluF,GAAe,SAChC,SAASmuF,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,KAMhD,IAAIC,GAAyB,CACzB3tF,QAASwtF,GACTt3C,WAAYu3C,GACZr4C,KAAM,IAEV,SAASs4C,KACL,OAAOztF,OAAO2tF,aAAa,GAAKl1D,KAAKC,MAAsB,GAAhBD,KAAKm1D,WAMpD,IA2HWC,GA3HPC,GAAuB,IAAIzuF,GAAe,wBAK1C0uF,GAAc,IAAI1uF,GAAe,eASjC2uF,GAAyB,IAAI3uF,GAAe,wBAK5C4uF,GAAmB,IAAI5uF,GAAe,iCAStC6uF,GAAyB,WACzB,SAASA,KAcT,OAZAA,EAAQj5F,UAAUojC,IAAM,SAAU32B,GAE9Bsd,QAAQqZ,IAAI32B,IAGhBwsF,EAAQj5F,UAAUquB,KAAO,SAAU5hB,GAE/Bsd,QAAQsE,KAAK5hB,IAEP7L,EAAW,CACjByhD,MACD42C,GAdqB,GA+CxBC,GAAc,IAAI9uF,GAAe,YAyBjC+uF,GAAe,IAAI/uF,GAAe,gBAsBlCgvF,GAAsB,IAAIhvF,GAAe,uBAClCwuF,GAIRn6F,EAAQm6F,6BAA+Bn6F,EAAQm6F,2BAA6B,KAHhDA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK;;;;;;;;AAU3E,IAEIS,IAD+B,EAe/BC,GACA,SAASA,GAA6BC,EAAiBC,GACnDr6F,KAAKo6F,gBAAkBA,EACvBp6F,KAAKq6F,mBAAqBA,GAIlC,SAASC,KACL,MAAM,IAAI1zF,MAAM,kCAEpB,IAoGI2zF,GACAC,GApGAC,GAAwC,SAAU1e,GAClD,OAAO,IAAI4O,GAAkB5O,IAE7B2e,GAJuCJ,GASvCK,GAJwCL,GAMxCM,GAAwD,SAAU7e,GAClE,IAAIqe,EAAkBK,GAAsC1e,GAExDse,EAAqB56E,GADTnL,GAAeynE,GACkB9nE,cAC5C25E,QAAO,SAAU/lB,EAAWirB,GAC7B,IAAIrvB,EAAe9vD,GAAgBm/E,GAEnC,OADArvB,GAAgBoE,EAAUvkE,KAAK,IAAIw7E,GAAmBrb,IAC/CoE,IACR,IACH,OAAO,IAAIsyB,GAA6BC,EAAiBC,IAEzDQ,GAZuDP,GAiBvDQ,GAJwDR,GAgBxDS,GAA0B,WAC1B,SAASA,IAKL/6F,KAAKg7F,kBAAoBN,GAIzB16F,KAAKi7F,mBAAqBN,GAI1B36F,KAAKk7F,kCAAoCL,GAIzC76F,KAAKm7F,mCAAqCL,GAiB9C,OAZAC,EAASl6F,UAAUu6F,WAAa,aAIhCL,EAASl6F,UAAUw6F,cAAgB,SAAU5zF,KAI7CszF,EAASl6F,UAAUy6F,YAAc,SAAUvf,KAChCt6E,EAAW,CAClByhD,MACD63C,GAlCsB,GA0CzBQ,GAAmB,IAAItwF,GAAe,mBAMtCuwF,GACA,SAASA,OAcb,SAASC,KACL,IAAIC,EAAM5xF,EAA+B,IACzC,SAAI4xF,KACAnB,GAAQmB,EAAW,SAEflB,GAASD,GAAc,OAChB,IAKnB,SAASoB,GAAYtyC,EAAW/8C,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzBkuF,GAAOmB,YAAYtyC,EAAW/8C,GAEzC,SAASsvF,GAAMxnF,EAAOwpD,GAElB,OADA28B,GAAMsB,WAAWznF,EAAOwpD,GACjBA,EAEX,SAASk+B,GAAeC,EAAWvoD,GAC/B,OAAO+mD,GAAMyB,eAAeD,EAAWvoD,GAE3C,SAASyoD,GAAaC,GAClB3B,GAAM0B,aAAaC;;;;;;;OAavB,IAAIC,GAAaV,KACjB,SAASW,GAAUC,EAAMC,GACrB,OAAO,KAiCX,IAAIC,GAAiBJ,GAAaR,GAAc,SAAUtyC,EAAW/8C,GAAS,OAAO8vF,IAWjFI,GAAWL,GAAaP,GAAQ,SAAU16F,EAAGa,GAAK,OAAOA,GAezD06F,GAAoBN,GAAaL,GAAiB,SAAUC,EAAWvoD,GAAU,OAAO,MAQxFkpD,GAAkBP,GAAaF,GAAe,SAAUl6F,GAAK,OAAO,MASpEqtD,GAAgC/kB,QAAQC,QAAQ,GACpD,SAASqyD,GAAkBvzF,GACH,oBAATwzF,KAEPxtC,GAAQE,MAAK,WAAclmD,GAAMA,EAAG5H,MAAM,KAAM,SAGhDo7F,KAAKrrE,QAAQorE,kBAAkB,oBAAqBvzF;;;;;;;;;;;;;;;AA8G5D,IAAIyzF,GAAwB,WACxB,SAASA,EAAOv4F,GACZ,IAAIorB,EAAKprB,EAAGw4F,qBAAsBA,OAA8B,IAAPptE,GAAwBA,EAAIC,EAAKrrB,EAAGy4F,mCAAoCA,OAA4C,IAAPptE,GAAwBA,EA2B9L,GA1BA3vB,KAAKg9F,sBAAuB,EAC5Bh9F,KAAKi9F,sBAAuB,EAI5Bj9F,KAAKk9F,UAAW,EAIhBl9F,KAAKm9F,WAAa,IAAIxQ,IAAa,GAMnC3sF,KAAKo9F,iBAAmB,IAAIzQ,IAAa,GAMzC3sF,KAAKq9F,SAAW,IAAI1Q,IAAa,GAIjC3sF,KAAKs9F,QAAU,IAAI3Q,IAAa,GACb,oBAARiQ,KACP,MAAM,IAAIh2F,MAAM,kDAEpBg2F,KAAKW,oBACMv9F,KACNw9F,SAAW,EADLx9F,KAENy9F,OAFMz9F,KAEQ09F,OAASd,KAAKrrE,QAC7BqrE,KAAkB,cAHX58F,KAIF09F,OAJE19F,KAIY09F,OAAOC,KAAKf,KAAkB,cAEjDA,KAA2B,uBANpB58F,KAOF09F,OAPE19F,KAOY09F,OAAOC,KAAK,IAAIf,KAA2B,uBAE9DE,GAAwBF,KAA6B,yBAT9C58F,KAUF09F,OAVE19F,KAUY09F,OAAOC,KAAKf,KAA6B,yBAVrD58F,KAYN+8F,mCAAqCA,EAZ/B/8F,KAaN49F,6BAA+B,EAbzB59F,KAcN69F,4BAlJb,SAASC,IACL,IAAID,EAA8B/zF,EAA+B,sBAC7Di0F,EAA6Bj0F,EAA8B,qBAC/D,GAAoB,oBAAT8yF,MAAwBiB,GAA+BE,EAA4B,CAG1F,IAAIC,EAAiCH,EAA4BjB,KAAKqB,WAAW,qBAC7ED,IACAH,EAA8BG,GAElC,IAAIE,EAAgCH,EAA2BnB,KAAKqB,WAAW,qBAC3EC,IACAH,EAA6BG,GAGrC,MAAO,CAAEL,4BAA6BA,EAA6BE,2BAA4BA,GAmIxDD,GAAiCD,4BA4G5E,SAASM,EAAiCC,GACtC,IACIC,IAA8BD,EAAKrB,oCACnCqB,EAAKP,6BAFmC,YAZhD,SAASS,EAA8BF,IACO,IAAtCA,EAAKR,8BAGTQ,EAAKR,4BAA8BQ,EAAKP,4BAA4Bt8F,KAAKuI,GAAS,WAC9Es0F,EAAKR,6BAA+B,EACpCW,GAAsBH,GACtBI,GAAYJ,MAEhBG,GAAsBH,IAGoCE,CAA8BF,IAGxFA,EAAKV,OAASU,EAAKV,OAAOC,KAAK,CAC3B75F,KAAM,UACN26F,WAAY,CAAEC,eAAiB,EAAML,0BAA6BA,GAClEM,aAAc,SAAUC,EAAUrtE,EAAS5vB,EAAQk9F,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQZ,GACDQ,EAASK,WAAWt9F,EAAQk9F,EAAMC,EAAWC,GAExD,QACQV,GAA2C,cAAdQ,EAAKp3F,MAClC42F,IAEJa,GAAQd,KAGhBe,SAAU,SAAUP,EAAUrtE,EAAS5vB,EAAQw3C,EAAU2lD,EAAWC,EAAWj4F,GAC3E,IAEI,OADAk4F,GAAQZ,GACDQ,EAASQ,OAAOz9F,EAAQw3C,EAAU2lD,EAAWC,EAAWj4F,GAEnE,QACIo4F,GAAQd,KAGhBiB,UAAW,SAAUT,EAAUrtE,EAAS5vB,EAAQ29F,GAC5CV,EAASW,QAAQ59F,EAAQ29F,GACrB/tE,IAAY5vB,IAGe,aAAvB29F,EAAaE,QACbpB,EAAKqB,sBAAwBH,EAAaI,UAC1CnB,GAAsBH,GACtBI,GAAYJ,IAEgB,aAAvBkB,EAAaE,SAClBpB,EAAKpB,qBAAuBsC,EAAaK,aAIrDC,cAAe,SAAUhB,EAAUrtE,EAAS5vB,EAAQ4B,GAGhD,OAFAq7F,EAAS7zE,YAAYppB,EAAQ4B,GAC7B66F,EAAKyB,mBAAkB,WAAc,OAAOzB,EAAKd,QAAQxQ,KAAKvpF,OACvD,KAzJX46F,CAfWn+F,MAwFf,OAvEA68F,EAAOiD,gBAAkB,WAAc,OAA6C,IAAtClD,KAAKrrE,QAAQ9kB,IAAI,kBAC/DowF,EAAOkD,oBAAsB,WACzB,IAAKlD,EAAOiD,kBACR,MAAM,IAAIl5F,MAAM,mDAGxBi2F,EAAOmD,uBAAyB,WAC5B,GAAInD,EAAOiD,kBACP,MAAM,IAAIl5F,MAAM,mDAexBi2F,EAAOh8F,UAAUo/F,IAAM,SAAU72F,EAAI01F,EAAWC,GAC5C,OAAO/+F,KAAK09F,OAAOuC,IAAI72F,EAAI01F,EAAWC,IAc1ClC,EAAOh8F,UAAUq/F,QAAU,SAAU92F,EAAI01F,EAAWC,EAAWj7F,GAC3D,IAAIs6F,EAAOp+F,KAAK09F,OACZmB,EAAOT,EAAK+B,kBAAkB,gBAAkBr8F,EAAMsF,EAAIg3F,GAAeC,GAAQA,IACrF,IACI,OAAOjC,EAAK8B,QAAQrB,EAAMC,EAAWC,GAEzC,QACIX,EAAKkC,WAAWzB,KAOxBhC,EAAOh8F,UAAU0/F,WAAa,SAAUn3F,EAAI01F,EAAWC,GACnD,OAAO/+F,KAAK09F,OAAO6C,WAAWn3F,EAAI01F,EAAWC,IAejDlC,EAAOh8F,UAAUg/F,kBAAoB,SAAUz2F,GAC3C,OAAOpJ,KAAKy9F,OAAOwC,IAAI72F,IAEpByzF,EAzHgB,GA2H3B,SAASwD,MACT,IAAID,GAAgB,GACpB,SAAS5B,GAAYJ,GACjB,GAAqB,GAAjBA,EAAKZ,WAAkBY,EAAKnB,uBAAyBmB,EAAKlB,SAC1D,IACIkB,EAAKZ,WACLY,EAAKhB,iBAAiBtQ,KAAK,MAE/B,QAEI,GADAsR,EAAKZ,YACAY,EAAKnB,qBACN,IACImB,EAAKyB,mBAAkB,WAAc,OAAOzB,EAAKf,SAASvQ,KAAK,SAEnE,QACIsR,EAAKlB,UAAW,IAmEpC,SAASqB,GAAsBH,GAGvBA,EAAKnB,wBAFLmB,EAAKqB,uBACJrB,EAAKrB,qCAA4E,IAAtCqB,EAAKR,6BAOzD,SAASoB,GAAQZ,GACbA,EAAKZ,WACDY,EAAKlB,WACLkB,EAAKlB,UAAW,EAChBkB,EAAKjB,WAAWrQ,KAAK,OAG7B,SAASoS,GAAQd,GACbA,EAAKZ,WACLgB,GAAYJ,GAMhB,IAuRIoC,GAvRAC,GAA4B,WAC5B,SAASA,IACLzgG,KAAKi9F,sBAAuB,EAC5Bj9F,KAAKg9F,sBAAuB,EAC5Bh9F,KAAKk9F,UAAW,EAChBl9F,KAAKm9F,WAAa,IAAIxQ,GACtB3sF,KAAKo9F,iBAAmB,IAAIzQ,GAC5B3sF,KAAKq9F,SAAW,IAAI1Q,GACpB3sF,KAAKs9F,QAAU,IAAI3Q,GAYvB,OAVA8T,EAAW5/F,UAAUo/F,IAAM,SAAU72F,EAAI01F,EAAWC,GAChD,OAAO31F,EAAG5H,MAAMs9F,EAAWC,IAE/B0B,EAAW5/F,UAAU0/F,WAAa,SAAUn3F,EAAI01F,EAAWC,GACvD,OAAO31F,EAAG5H,MAAMs9F,EAAWC,IAE/B0B,EAAW5/F,UAAUg/F,kBAAoB,SAAUz2F,GAAM,OAAOA,KAChEq3F,EAAW5/F,UAAUq/F,QAAU,SAAU92F,EAAI01F,EAAWC,EAAWj7F,GAC/D,OAAOsF,EAAG5H,MAAMs9F,EAAWC,IAExB0B,EApBoB,GAoC3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAIxmD,EAAQn6C,KACZA,KAAK2gG,QAAUA,EACf3gG,KAAK4gG,cAAgB,EACrB5gG,KAAK6gG,eAAgB,EAOrB7gG,KAAK8gG,UAAW,EAChB9gG,KAAK+gG,WAAa,GAClB/gG,KAAKghG,iBAAmB,KACxBhhG,KAAKihG,sBACLN,EAAQV,KAAI,WACR9lD,EAAM6mD,iBACa,oBAARpE,KAAsB,KAAOA,KAAKrrE,QAAQ9kB,IAAI,uBA8IjE,OA3IAi0F,EAAY7/F,UAAUogG,oBAAsB,WACxC,IAAI9mD,EAAQn6C,KACZA,KAAK2gG,QAAQxD,WAAWphC,UAAU,CAC9B/4D,KAAM,WACFm3C,EAAM2mD,UAAW,EACjB3mD,EAAM0mD,eAAgB,KAG9B7gG,KAAK2gG,QAAQd,mBAAkB,WAC3B1lD,EAAMwmD,QAAQtD,SAASthC,UAAU,CAC7B/4D,KAAM,WACF65F,GAAOmD,yBACPrD,IAAkB,WACdxiD,EAAM0mD,eAAgB,EACtB1mD,EAAM+mD,iCAU1BR,EAAY7/F,UAAUsgG,4BAA8B,WAGhD,OAFAnhG,KAAK4gG,eAAiB,EACtB5gG,KAAK8gG,UAAW,EACT9gG,KAAK4gG,eAMhBF,EAAY7/F,UAAUugG,4BAA8B,WAEhD,GADAphG,KAAK4gG,eAAiB,EAClB5gG,KAAK4gG,cAAgB,EACrB,MAAM,IAAIh6F,MAAM,qCAGpB,OADA5G,KAAKkhG,uBACElhG,KAAK4gG,eAKhBF,EAAY7/F,UAAUq8F,SAAW,WAC7B,OAAOl9F,KAAK6gG,eAAwC,IAAvB7gG,KAAK4gG,gBAAwB5gG,KAAK2gG,QAAQ3D,sBAE3E0D,EAAY7/F,UAAUqgG,qBAAuB,WACzC,IAAI/mD,EAAQn6C,KACZ,GAAIA,KAAKk9F,WAELP,IAAkB,WACd,KAAmC,IAA5BxiD,EAAM4mD,WAAWz/F,QAAc,CAClC,IAAI+/F,EAAKlnD,EAAM4mD,WAAWxxF,MAC1B+xF,aAAaD,EAAGE,WAChBF,EAAGG,OAAOrnD,EAAM2mD,UAEpB3mD,EAAM2mD,UAAW,SAGpB,CAED,IAAIW,EAAYzhG,KAAK0hG,kBACrB1hG,KAAK+gG,WAAa/gG,KAAK+gG,WAAWpT,QAAO,SAAU0T,GAC/C,OAAIA,EAAGM,WAAYN,EAAGM,SAASF,KAC3BH,aAAaD,EAAGE,YACT,MAIfvhG,KAAK8gG,UAAW,IAGxBJ,EAAY7/F,UAAU6gG,gBAAkB,WACpC,OAAK1hG,KAAKghG,iBAIHhhG,KAAKghG,iBAAiBY,WAAWr5F,KAAI,SAAUtH,GAClD,MAAO,CACH6F,OAAQ7F,EAAE6F,OAGV+6F,iBAAkB5gG,EAAE4gG,iBACpBpvF,KAAMxR,EAAEwR,SATL,IAafiuF,EAAY7/F,UAAUihG,YAAc,SAAUT,EAAIU,EAASJ,GACvD,IAAIxnD,EAAQn6C,KACRuhG,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYtiF,YAAW,WACnBk7B,EAAM4mD,WAAa5mD,EAAM4mD,WAAWpT,QAAO,SAAU0T,GAAM,OAAOA,EAAGE,YAAcA,KACnFF,EAAGlnD,EAAM2mD,SAAU3mD,EAAMunD,qBAC1BK,IAEP/hG,KAAK+gG,WAAWz9F,KAAK,CAAEk+F,OAAQH,EAAIE,UAAWA,EAAWI,SAAUA,KAcvEjB,EAAY7/F,UAAUmhG,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAa3hG,KAAKghG,iBAClB,MAAM,IAAIp6F,MAAM,8HAIpB5G,KAAK8hG,YAAYN,EAAQO,EAASJ,GAClC3hG,KAAKkhG,wBAMTR,EAAY7/F,UAAUohG,uBAAyB,WAAc,OAAOjiG,KAAK4gG,eAOzEF,EAAY7/F,UAAUqhG,cAAgB,SAAUC,EAAO1/C,EAAU2/C,GAE7D,MAAO,IAEG3gG,EAAW,CACrByhD,KACA3gD,EAAW,oBAAqB,CAACs6F,MAClC6D,GA/JyB,GAsK5B2B,GAAqC,WACrC,SAASA,IAELriG,KAAKsiG,cAAgB,IAAIr+C,IACzBs+C,GAAmBC,YAAYxiG,MA8CnC,OAvCAqiG,EAAoBxhG,UAAU4hG,oBAAsB,SAAUx8F,EAAOy8F,GACjE1iG,KAAKsiG,cAAc/8D,IAAIt/B,EAAOy8F,IAMlCL,EAAoBxhG,UAAU8hG,sBAAwB,SAAU18F,GAASjG,KAAKsiG,cAAcpyC,OAAOjqD,IAInGo8F,EAAoBxhG,UAAU+hG,0BAA4B,WAAc5iG,KAAKsiG,cAAc5mD,SAK3F2mD,EAAoBxhG,UAAUgiG,eAAiB,SAAUC,GAAQ,OAAO9iG,KAAKsiG,cAAc71F,IAAIq2F,IAAS,MAIxGT,EAAoBxhG,UAAUkiG,oBAAsB,WAAc,OAAOxiG,MAAMqrD,KAAK5rD,KAAKsiG,cAAct9F,WAIvGq9F,EAAoBxhG,UAAUmiG,mBAAqB,WAAc,OAAOziG,MAAMqrD,KAAK5rD,KAAKsiG,cAAcv/E,SAOtGs/E,EAAoBxhG,UAAUoiG,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsBjjG,KAAM8iG,EAAMI,IAE1CzhG,EAAW,CAC7ByhD,KACA3gD,EAAW,oBAAqB,KACjC8/F,GAjDiC,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASY,KAMT,OAJAA,EAAoBtiG,UAAU2hG,YAAc,SAAU5yD,KACtDuzD,EAAoBtiG,UAAUoiG,sBAAwB,SAAUrzD,EAAUkzD,EAAMI,GAC5E,OAAO,MAEJC,EAP6B,IA8DpCC,GAJJ,SAASC,OAYLC,GAA2B,IAAIr4F,GAAe,sBAM9Cs4F,GACA,SAASA,GAAaz/F,EAAMmC,GACxBjG,KAAK8D,KAAOA,EACZ9D,KAAKiG,MAAQA;;;;;;;OAUrB,SAASu9F,GAAex3F,GACpB,GAAIw0F,KAAcA,GAAU53D,YACvB43D,GAAUx0F,SAASS,IAAI62F,IAA0B,GAClD,MAAM,IAAI18F,MAAM,iFAEpBw8F,KACA5C,GAAYx0F,EAASS,IAAIg3F,IACzB,IAAIC,EAAQ13F,EAASS,IAAIitF,GAAsB,MAG/C,OAFIgK,GACAA,EAAMv0F,SAAQ,SAAU0+E,GAAQ,OAAOA,OACpC2S,GAOX,SAASmD,GAAsBC,EAAuB9/F,EAAMwD,QACtC,IAAdA,IAAwBA,EAAY,IACxC,IAAIzF,EAAO,aAAeiC,EACtBoa,EAAS,IAAIjT,GAAepJ,GAChC,OAAO,SAAUgiG,QACU,IAAnBA,IAA6BA,EAAiB,IAClD,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAAS93F,SAASS,IAAI62F,IAA0B,GAC7D,GAAIM,EACAA,EAAsBt8F,EAAU7D,OAAOogG,GAAgBpgG,OAAO,CAAEkI,QAASuS,EAAQrS,UAAU,SAE1F,CACD,IAAIm4F,EAAoB18F,EAAU7D,OAAOogG,GAAgBpgG,OAAO,CAAEkI,QAASuS,EAAQrS,UAAU,GAAQ,CACjGF,QAAS23C,GACTz3C,SAAU,aAEd23F,GAAer8C,GAASrmD,OAAO,CAAEwG,UAAW08F,EAAmBlgG,KAAMjC,KAG7E,OAAOoiG,GAAe/lF,IAQ9B,SAAS+lF,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAIl9F,MAAM,uBAEpB,IAAKk9F,EAAS93F,SAASS,IAAIy3F,EAAe,MACtC,MAAM,IAAIt9F,MAAM,wFAEpB,OAAOk9F,EAiBX,SAASC,KACL,OAAOvD,KAAcA,GAAU53D,UAAY43D,GAAY,KAY3D,IAAIiD,GAA6B,WAE7B,SAASA,EAAYU,GACjBnkG,KAAKmkG,UAAYA,EACjBnkG,KAAKokG,SAAW,GAChBpkG,KAAKo8E,kBAAoB,GACzBp8E,KAAKokD,YAAa,EAkItB,OA1GAq/C,EAAY5iG,UAAUwjG,uBAAyB,SAAUC,EAAej9F,GACpE,IAAI8yC,EAAQn6C,KAORukG,EAoGZ,SAASC,EAAUC,EAAcC,GAW7B,MATqB,SAAjBD,EACS,IAAIhE,IAGc,YAAjBgE,OAA6Bv9F,EAAYu9F,IAAiB,IAAI5H,GAAO,CAC3EC,qBAAsB1wE,KACtB2wE,mCAAoC2H,IA5G3BF,CAFMn9F,EAAUA,EAAQk9F,YAASr9F,EACjBG,GAAWA,EAAQq9F,wBAA0B,GAEtEp9F,EAAY,CAAC,CAAEqE,QAASkxF,GAAQhxF,SAAU04F,IAG9C,OAAOA,EAAOtE,KAAI,WACd,IAAI0E,EAAiBx9C,GAASrmD,OAAO,CAAEwG,UAAWA,EAAWuU,OAAQs+B,EAAMnuC,SAAUlI,KAAMwgG,EAAcvoB,WAAWj4E,OAChH8gG,EAAYN,EAAcxjG,OAAO6jG,GACjCE,EAAmBD,EAAU54F,SAASS,IAAIoe,GAAc,MAC5D,IAAKg6E,EACD,MAAM,IAAIj+F,MAAM,iEASpB,OANIszF,IAEAlQ,GADe4a,EAAU54F,SAASS,IAAIstF,GAAahZ,KAC3BA,IAE5B6jB,EAAU7yF,WAAU,WAAc,OAAOkuB,GAAOka,EAAMiqD,SAAUQ,MAChEL,EAAO1E,mBAAkB,WAAc,OAAO0E,EAAOjH,QAAQvhC,UAAU,CAAE/4D,KAAM,SAAUO,GAASshG,EAAiB95E,YAAYxnB,SAgG3I,SAASuhG,EAA6BjyD,EAAc0xD,EAAQprD,GACxD,IACI,IAAIzP,EAASyP,IACb,OAAI0iB,GAAUnyB,GACHA,EAAOwvD,OAAM,SAAU91F,GAG1B,MAFAmhG,EAAO1E,mBAAkB,WAAc,OAAOhtD,EAAa9nB,YAAY3nB,MAEjEA,KAGPsmC,EAEX,MAAOtmC,GAGH,MAFAmhG,EAAO1E,mBAAkB,WAAc,OAAOhtD,EAAa9nB,YAAY3nB,MAEjEA,GA9GK0hG,CAA6BD,EAAkBN,GAAQ,WAC1D,IAAIQ,EAAaH,EAAU54F,SAASS,IAAIgsF,IAExC,OADAsM,EAAWhM,kBACJgM,EAAWnM,YAAYtpC,MAAK,WAE/B,OADAnV,EAAM6qD,mBAAmBJ,GAClBA,YAqBvBnB,EAAY5iG,UAAUokG,gBAAkB,SAAUlpB,EAAYmpB,GAC1D,IAAI/qD,EAAQn6C,UACY,IAApBklG,IAA8BA,EAAkB,IACpD,IAAI79F,EAAU89F,GAAe,GAAID,GACjC,OAtOR,SAASE,EAAiCp5F,EAAU3E,EAAS00E,GAGzD,OAFsB/vE,EAASS,IAAI+uF,IACJ6J,eAAe,CAACh+F,IAC/B4zF,mBAAmBlf,GAmOxBupB,CAAuBtlG,KAAKgM,SAAU3E,EAAS00E,GACjDzsB,MAAK,SAAUg1C,GAAiB,OAAOnqD,EAAMkqD,uBAAuBC,EAAej9F,OAE5Fo8F,EAAY5iG,UAAUmkG,mBAAqB,SAAUJ,GACjD,IAAI5qD,EAAS4qD,EAAU54F,SAASS,IAAI84F,IACpC,GAAIX,EAAUzoB,qBAAqB76E,OAAS,EACxCsjG,EAAUzoB,qBAAqBhtE,SAAQ,SAAUk4D,GAAK,OAAOrtB,EAAOhmC,UAAUqzD,UAE7E,CAAA,IAAIu9B,EAAUt8E,SAASk9E,cAIxB,MAAM,IAAI5+F,MAAM,cAAgByB,EAAUu8F,EAAUt8E,SAAS1nB,aAAe,yIAH5EgkG,EAAUt8E,SAASk9E,cAAcxrD,GAMrCh6C,KAAKokG,SAAS9gG,KAAKshG,IAKvBnB,EAAY5iG,UAAUkR,UAAY,SAAUonC,GAAYn5C,KAAKo8E,kBAAkB94E,KAAK61C,IACpF/4C,OAAO+B,eAAeshG,EAAY5iG,UAAW,WAAY,CAKrD4L,IAAK,WAAc,OAAOzM,KAAKmkG,WAC/BthE,YAAY,EACZC,cAAc,IAKlB2gE,EAAY5iG,UAAUy1C,QAAU,WAC5B,GAAIt2C,KAAKokD,WACL,MAAM,IAAIx9C,MAAM,4CAEpB5G,KAAKokG,SAASp1F,QAAQG,SAAQ,SAAU5P,GAAU,OAAOA,EAAO+2C,aAChEt2C,KAAKo8E,kBAAkBjtE,SAAQ,SAAUkzD,GAAY,OAAOA,OAC5DriE,KAAKokD,YAAa,GAEtBhkD,OAAO+B,eAAeshG,EAAY5iG,UAAW,YAAa,CACtD4L,IAAK,WAAc,OAAOzM,KAAKokD,YAC/BvhB,YAAY,EACZC,cAAc,IAEJrhC,EAAW,CACrByhD,KACA3gD,EAAW,oBAAqB,CAAC4kD,MAClCs8C,GAvIyB,GAyKhC,SAAS0B,GAAer2F,EAAK89C,GAOzB,OANIrsD,MAAM+H,QAAQskD,GACRA,EAAKghC,OAAOuX,GAAgBr2F,GAG5B/N,EAASA,EAAS,GAAI+N,GAAM89C,GAiG1C,IAAI24C,GAAgC,WAEhC,SAASA,EAAeE,EAAO36E,EAAUq5E,EAAWuB,EAAmBC,EAA2BC,GAC9F,IAAIzrD,EAAQn6C,KACZA,KAAKylG,MAAQA,EACbzlG,KAAK8qB,SAAWA,EAChB9qB,KAAKmkG,UAAYA,EACjBnkG,KAAK0lG,kBAAoBA,EACzB1lG,KAAK2lG,0BAA4BA,EACjC3lG,KAAK4lG,YAAcA,EACnB5lG,KAAK6lG,oBAAsB,GAC3B7lG,KAAK8lG,OAAS,GACd9lG,KAAK+lG,cAAe,EACpB/lG,KAAKgmG,sBAAuB,EAC5BhmG,KAAKimG,SAAU,EAKfjmG,KAAKkmG,eAAiB,GAItBlmG,KAAK02B,WAAa,GAClB12B,KAAKgmG,qBAAuB55E,KAC5BpsB,KAAKylG,MAAMrI,iBAAiBrhC,UAAU,CAAE/4D,KAAM,WAAcm3C,EAAMsrD,MAAMxF,KAAI,WAAc9lD,EAAMgsD,aAChG,IAAIC,EAAoB,IAAItmG,EAAKumG,YAAW,SAAUC,GAClDnsD,EAAM8rD,QAAU9rD,EAAMsrD,MAAMvI,WAAa/iD,EAAMsrD,MAAMzI,uBAChD7iD,EAAMsrD,MAAMxI,qBACjB9iD,EAAMsrD,MAAM5F,mBAAkB,WAC1ByG,EAAStjG,KAAKm3C,EAAM8rD,SACpBK,EAAStZ,iBAGbkQ,EAAW,IAAIp9F,EAAKumG,YAAW,SAAUC,GAGzC,IAAIC,EACJpsD,EAAMsrD,MAAM5F,mBAAkB,WAC1B0G,EAAYpsD,EAAMsrD,MAAMpI,SAASthC,WAAU,WACvC8gC,GAAOmD,yBAGPrD,IAAkB,WACTxiD,EAAM8rD,SAAY9rD,EAAMsrD,MAAMzI,sBAC9B7iD,EAAMsrD,MAAMxI,uBACb9iD,EAAM8rD,SAAU,EAChBK,EAAStjG,MAAK,aAK9B,IAAIwjG,EAAcrsD,EAAMsrD,MAAMtI,WAAWphC,WAAU,WAC/C8gC,GAAOkD,sBACH5lD,EAAM8rD,UACN9rD,EAAM8rD,SAAU,EAChB9rD,EAAMsrD,MAAM5F,mBAAkB,WAAcyG,EAAStjG,MAAK,UAGlE,OAAO,WACHujG,EAAUlwD,cACVmwD,EAAYnwD,kBAGpBr2C,KAAKk9F,SACDp9F,EAAKgwB,MAAMs2E,EAAmBlJ,EAAStJ,KAAK7zF,EAAU0mG,UAqJ9D,IAAIC,EAUJ,OA7JAA,EAAmBnB,EAiBnBA,EAAe1kG,UAAUmT,UAAY,SAAU2yF,EAAoB59B,GAC/D,IAIIjtB,EAJA3B,EAAQn6C,KACZ,IAAKA,KAAK4lG,YAAY1iG,KAClB,MAAM,IAAI0D,MAAM,iJAIhBk1C,EADA6qD,aAA8Bv+B,GACXu+B,EAIf3mG,KAAK2lG,0BAA0Bn9B,wBAAwBm+B,GAE/D3mG,KAAKkmG,eAAe5iG,KAAKw4C,EAAiB+sB,eAE1C,IAAI1sB,EA7dZ,SAASyqD,EAA0BC,GAC/B,OAAOA,aAAc/9B,GA4dFoW,CAAgBpjC,QAAoB50C,EAAYlH,KAAKmkG,UAAU13F,IAAI8B,IAE9Eu4F,EAAUhrD,EAAiBh7C,OAAOqmD,GAASC,KAAM,GADhC2hB,GAAsBjtB,EAAiBxiB,SACa6iB,GACzE2qD,EAAQ/0F,WAAU,WAAcooC,EAAM4sD,iBAAiBD,MACvD,IAAIpE,EAAcoE,EAAQ96F,SAASS,IAAIi0F,GAAa,MASpD,OARIgC,GACAoE,EAAQ96F,SAASS,IAAI41F,IAChBI,oBAAoBqE,EAAQroF,SAAS0qD,cAAeu5B,GAE7D1iG,KAAKgnG,eAAeF,GAChB16E,MACApsB,KAAK8qB,SAASmZ,IAAI,oGAEf6iE,GAYXvB,EAAe1kG,UAAUslG,KAAO,WAC5B,IAAI12E,EAAKnrB,EAAIyrB,EAAKL,EACdyqB,EAAQn6C,KACZ,GAAIA,KAAK+lG,aACL,MAAM,IAAIn/F,MAAM,6CAEpB,IAAIwN,EAAQsyF,EAAiBO,aAC7B,IACIjnG,KAAK+lG,cAAe,EACpB,IACI,IAAK,IAAIp2E,EAAKhtB,EAAS3C,KAAK8lG,QAASoB,EAAKv3E,EAAG3sB,QAASkkG,EAAGhkG,KAAMgkG,EAAKv3E,EAAG3sB,OACxDkkG,EAAGjkG,MACTu2C,gBAGb,MAAO5pB,GAASH,EAAM,CAAElsB,MAAOqsB,GAC/B,QACI,IACQs3E,IAAOA,EAAGhkG,OAASoB,EAAKqrB,EAAGE,SAASvrB,EAAG/C,KAAKouB,GAEpD,QAAU,GAAIF,EAAK,MAAMA,EAAIlsB,OAEjC,GAAIvD,KAAKgmG,qBACL,IACI,IAAK,IAAImB,EAAKxkG,EAAS3C,KAAK8lG,QAASsB,EAAKD,EAAGnkG,QAASokG,EAAGlkG,KAAMkkG,EAAKD,EAAGnkG,OACxDokG,EAAGnkG,MACTw2C,iBAGb,MAAOtpB,GAASJ,EAAM,CAAExsB,MAAO4sB,GAC/B,QACI,IACQi3E,IAAOA,EAAGlkG,OAASwsB,EAAKy3E,EAAGt3E,SAASH,EAAGnuB,KAAK4lG,GAEpD,QAAU,GAAIp3E,EAAK,MAAMA,EAAIxsB,QAIzC,MAAOH,GAEHpD,KAAKylG,MAAM5F,mBAAkB,WAAc,OAAO1lD,EAAMurD,kBAAkB36E,YAAY3nB,MAE1F,QACIpD,KAAK+lG,cAAe,EACpBvJ,GAASpoF,KAQjBmxF,EAAe1kG,UAAUwmG,WAAa,SAAUrsD,GAC5C,IAAIr2B,EAAOq2B,EACXh7C,KAAK8lG,OAAOxiG,KAAKqhB,GACjBA,EAAKo1B,eAAe/5C,OAKxBulG,EAAe1kG,UAAUq0C,WAAa,SAAU8F,GAC5C,IAAIr2B,EAAOq2B,EACX/a,GAAOjgC,KAAK8lG,OAAQnhF,GACpBA,EAAKk1B,oBAET0rD,EAAe1kG,UAAUmmG,eAAiB,SAAU5qD,GAChDp8C,KAAKqnG,WAAWjrD,EAAar3B,UAC7B/kB,KAAKmmG,OACLnmG,KAAK02B,WAAWpzB,KAAK84C,GAELp8C,KAAKmkG,UAAU13F,IAAImtF,GAAwB,IAAIn2F,OAAOzD,KAAK6lG,qBACjE12F,SAAQ,SAAUkzD,GAAY,OAAOA,EAASjmB,OAE5DmpD,EAAe1kG,UAAUkmG,iBAAmB,SAAU3qD,GAClDp8C,KAAKk1C,WAAWkH,EAAar3B,UAC7Bkb,GAAOjgC,KAAK02B,WAAY0lB,IAG5BmpD,EAAe1kG,UAAUmR,YAAc,WAEnChS,KAAK8lG,OAAO92F,QAAQG,SAAQ,SAAUwV,GAAQ,OAAOA,EAAK2xB,cAE9Dl2C,OAAO+B,eAAeojG,EAAe1kG,UAAW,YAAa,CAIzD4L,IAAK,WAAc,OAAOzM,KAAK8lG,OAAOxkG,QACtCuhC,YAAY,EACZC,cAAc,IAIlByiE,EAAe0B,WAAa1K,GAAe,yBAC1BmK,EAAmBjlG,EAAW,CAC3CyhD,KACA3gD,EAAW,oBAAqB,CAACs6F,GAAQ/C,GAAS3yC,GAC9Ct8B,GACA49C,GACAgwB,MACL8M,GA/N4B,GAkOnC,SAAStlE,GAAOpxB,EAAMuf,GAClB,IAAI7oB,EAAQsJ,EAAKhG,QAAQulB,GACrB7oB,GAAS,GACTsJ,EAAKQ,OAAO9J,EAAO;;;;;;;;;;;;;;;;;;;;;;AAuC3B,IAAI+hG,GACA,SAASA,OAIb,SAASC,GAA2B30F,GAChC,IAAIvT,EAAUgrF,GAA0Bz3E,GACxC,IAAKvT,EACD,MAAMmoG,GAAc50F,GACxB,OAAOvT,EAcX,IAAIooG,GAAmBF,GACvB,SAASC,GAAc50F,GACnB,OAAO,IAAIhM,MAAM,qBAAuBgM,EAAK;;;;;;;OAUjD,IAUI80F,GACA,SAASA,OAITC,GAAiB,CACjBC,kBAAmB,GACnBC,kBAAmB,cAQnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAW5iE,GACvCnlC,KAAK+nG,UAAYA,EACjB/nG,KAAKgoG,QAAU7iE,GAAUwiE,GAiC7B,OA/BAG,EAAuBjnG,UAAU+jB,KAAO,SAAUqjF,GAE9C,OADyB/N,IAAcl6F,KAAK+nG,qBAAqBhN,GACtC/6F,KAAKkoG,YAAYD,GAAQjoG,KAAKmoG,eAAeF,IAE5EH,EAAuBjnG,UAAUsnG,eAAiB,SAAUF,GACxD,IAAI9tD,EAAQn6C,KACRsE,EAAKnB,EAAO8kG,EAAK54E,MApCZ,KAoC+B,GAAI9vB,EAAS+E,EAAG,GAAI8jG,EAAa9jG,EAAG,GAI5E,YAHmB4C,IAAfkhG,IACAA,EAAa,WAEVC,OAAOC,OAAO/oG,GAChB+vD,MAAK,SAAU/vD,GAAU,OAAOA,EAAO6oG,MACvC94C,MAAK,SAAU7nD,GAAQ,OAAO8gG,GAAc9gG,EAAMlI,EAAQ6oG,MAC1D94C,MAAK,SAAU7nD,GAAQ,OAAO0yC,EAAM4tD,UAAU9M,mBAAmBxzF,OAE1EqgG,EAAuBjnG,UAAUqnG,YAAc,SAAUD,GACrD,IAAI3jG,EAAKnB,EAAO8kG,EAAK54E,MA9CZ,KA8C+B,GAAI9vB,EAAS+E,EAAG,GAAI8jG,EAAa9jG,EAAG,GACxEkkG,EA9Ce,YAmDnB,YAJmBthG,IAAfkhG,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAOtoG,KAAKgoG,QAAQJ,kBAAoBroG,EAASS,KAAKgoG,QAAQH,mBACvEv4C,MAAK,SAAU/vD,GAAU,OAAOA,EAAO6oG,EAAaI,MACpDl5C,MAAK,SAAUjwD,GAAW,OAAOkpG,GAAclpG,EAASE,EAAQ6oG,OAEhD3mG,EAAW,CAChCyhD,KACA9gD,EAAQ,EAAG+D,KACX5D,EAAW,oBAAqB,CAACw4F,GAAU2M,MAC5CI,GAnCoC,GAsC3C,SAASS,GAActlG,EAAOwlG,EAAYL,GACtC,IAAKnlG,EACD,MAAM,IAAI2D,MAAM,gBAAkBwhG,EAAa,SAAWK,EAAa,KAE3E,OAAOxlG;;;;;;;OAoBX,IAAIylG,GAA2B,SAAUl9E,GAErC,SAASgtB,IACL,OAAkB,OAAXhtB,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAU83C,EAAShtB,GAIZgtB,EALmB,CAM5B2E,IAsDEwrD,GAAiC,SAAUn9E,GAE3C,SAASm9E,IACL,OAAkB,OAAXn9E,GAAmBA,EAAOhqB,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUioG,EAAiBn9E,GAIpBm9E,EALyB,CAMlCD,IAoBEE,GACA,SAASA,GAAmB9kG,EAAMq1C,GAC9Bn5C,KAAK8D,KAAOA,EACZ9D,KAAKm5C,SAAWA,GAIpB0vD,GAAqC,WACrC,SAASA,EAAoBC,EAAYjtF,EAAQopB,GAC7CjlC,KAAKwiE,UAAY,GACjBxiE,KAAK6b,OAAS,KACd7b,KAAKilC,cAAgBA,EACrBjlC,KAAK8oG,WAAaA,EACdjtF,GAAUA,aAAkBktF,IAC5BltF,EAAOmtF,SAAShpG,MA4BxB,OAzBAI,OAAO+B,eAAe0mG,EAAoBhoG,UAAW,WAAY,CAC7D4L,IAAK,WAAc,OAAOzM,KAAKilC,cAAcj5B,UAC7C62B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe0mG,EAAoBhoG,UAAW,oBAAqB,CACtE4L,IAAK,WAAc,OAAOzM,KAAKilC,cAAc1P,WAC7CsN,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe0mG,EAAoBhoG,UAAW,UAAW,CAC5D4L,IAAK,WAAc,OAAOzM,KAAKilC,cAAcr3B,SAC7Ci1B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe0mG,EAAoBhoG,UAAW,aAAc,CAC/D4L,IAAK,WAAc,OAAOzM,KAAKilC,cAAcywC,YAC7C7yC,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe0mG,EAAoBhoG,UAAW,iBAAkB,CACnE4L,IAAK,WAAc,OAAOzM,KAAKilC,cAAcgkE,gBAC7CpmE,YAAY,EACZC,cAAc,IAEX+lE,EAnC6B,GAqCpCE,GAAwC,SAAUv9E,GAElD,SAASu9E,EAAuBD,EAAYjtF,EAAQopB,GAChD,IAAIkV,EAAQ3uB,EAAOjqB,KAAKvB,KAAM8oG,EAAYjtF,EAAQopB,IAAkBjlC,KAOpE,OANAm6C,EAAMskD,WAAa,GACnBtkD,EAAM7rB,WAAa,GACnB6rB,EAAMxyB,QAAU,GAChBwyB,EAAMtnC,OAAS,GACfsnC,EAAM+uD,WAAa,GACnB/uD,EAAMgvB,cAAgB2/B,EACf3uD,EAwEX,OAjFAz5C,EAAUqoG,EAAwBv9E,GAWlCu9E,EAAuBloG,UAAUmoG,SAAW,SAAUptF,GAC9CA,IACA5b,KAAKkpG,WAAW5lG,KAAKsY,GACrBA,EAAMC,OAAS7b,OAGvB+oG,EAAuBloG,UAAUitB,YAAc,SAAUlS,GACrD,IAAIutF,EAAanpG,KAAKkpG,WAAWrgG,QAAQ+S,IACrB,IAAhButF,IACAvtF,EAAMC,OAAS,KACf7b,KAAKkpG,WAAW75F,OAAO85F,EAAY,KAG3CJ,EAAuBloG,UAAUuoG,oBAAsB,SAAUxtF,EAAOytF,GACpE,IAAI/kG,EACA61C,EAAQn6C,KACRspG,EAAetpG,KAAKkpG,WAAWrgG,QAAQ+S,IACrB,IAAlB0tF,KACChlG,EAAKtE,KAAKkpG,YAAY75F,OAAO7N,MAAM8C,EAAId,EAAS,CAAC8lG,EAAe,EAAG,GAAID,IACxEA,EAAYl6F,SAAQ,SAAUrN,GACtBA,EAAE+Z,QACF/Z,EAAE+Z,OAAOiS,YAAYhsB,GAEzB8Z,EAAMC,OAASs+B,OAI3B4uD,EAAuBloG,UAAU81C,aAAe,SAAU4yD,EAAUC,GAChE,IAAIC,EAAWzpG,KAAKkpG,WAAWrgG,QAAQ0gG,IACrB,IAAdE,EACAzpG,KAAKgpG,SAASQ,IAGVA,EAAS3tF,QACT2tF,EAAS3tF,OAAOiS,YAAY07E,GAEhCA,EAAS3tF,OAAS7b,KAClBA,KAAKkpG,WAAW75F,OAAOo6F,EAAU,EAAGD,KAG5CT,EAAuBloG,UAAUy8E,MAAQ,SAAU2R,GAE/C,OADcjvF,KAAK0pG,SAASza,GACb,IAAM,MAEzB8Z,EAAuBloG,UAAU6oG,SAAW,SAAUza,GAClD,IAAIp/C,EAAU,GAEd,OADA85D,GAAsB3pG,KAAMivF,EAAWp/C,GAChCA,GAEXk5D,EAAuBloG,UAAU+oG,cAAgB,SAAU3a,GACvD,IAAIp/C,EAAU,GAEd,OADAg6D,GAAmB7pG,KAAMivF,EAAWp/C,GAC7BA,GAEXzvC,OAAO+B,eAAe4mG,EAAuBloG,UAAW,WAAY,CAChE4L,IAAK,WACD,OAAOzM,KACFkpG,WACAvb,QAAO,SAAUt7D,GAAQ,OAAOA,aAAgB02E,MAEzDlmE,YAAY,EACZC,cAAc,IAElBimE,EAAuBloG,UAAUipG,oBAAsB,SAAU7tC,EAAW8tC,GACxE/pG,KAAKwiE,UAAUrzD,SAAQ,SAAUkzD,GACzBA,EAASv+D,MAAQm4D,GACjBoG,EAASlpB,SAAS4wD,OAIvBhB,EAlFgC,CAmFzCF,IAOF,SAASc,GAAsBxqF,EAAS8vE,EAAWp/C,GAC/C1wB,EAAQ+pF,WAAW/5F,SAAQ,SAAUkjB,GAC7BA,aAAgB02E,KACZ9Z,EAAU58D,IACVwd,EAAQvsC,KAAK+uB,GAEjBs3E,GAAsBt3E,EAAM48D,EAAWp/C,OAInD,SAASg6D,GAAmB93E,EAAYk9D,EAAWp/C,GAC3C9d,aAAsBg3E,IACtBh3E,EAAWm3E,WAAW/5F,SAAQ,SAAUkjB,GAChC48D,EAAU58D,IACVwd,EAAQvsC,KAAK+uB,GAEbA,aAAgB02E,IAChBc,GAAmBx3E,EAAM48D,EAAWp/C,MAKpD,IAAIm6D,GAAsC,WACtC,SAASA,EAAqBlB,GAC1B9oG,KAAK8oG,WAAaA,EAgDtB,OA9CA1oG,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,SAAU,CAC5D4L,IAAK,WACD,IAAIoP,EAAS7b,KAAK8oG,WAAW/2E,WAC7B,OAAOlW,EAAS,IAAIouF,GAAwBpuF,GAAU,MAE1DgnB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,WAAY,CAC9D4L,IAAK,WAAc,OAAOu1D,GAAYhiE,KAAK8oG,aAC3CjmE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,oBAAqB,CACvE4L,IAAK,WACD,IAAI08D,EAAgBnpE,KAAK8oG,WACzB,OAAO3/B,IACFzH,GAAayH,IAAkBrH,GAAiBqH,KAEzDtmC,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,UAAW,CAC7D4L,IAAK,WACD,OAAOi1D,GAAa1hE,KAAK8oG,aAAejnC,GAAa7hE,KAAK8oG,aAE9DjmE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,YAAa,CAC/D4L,IAAK,WACD,OAAO61D,GAAatiE,KAAK8oG,YAAYnb,OAAOvrB,KAEhDv/B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,aAAc,CAChE4L,IAAK,WAAc,OA1qU3B,SAASy9F,EAAavoG,GAClB,IAAIiM,EAAU+zD,GAAahgE,GAAQ,GACnC,OAAgB,OAAZiM,EACO,SACe1G,IAAtB0G,EAAQ0oB,YACR1oB,EAAQ0oB,UAnoZhB,SAAS6zE,EAAkB1xF,EAAOqM,GAC9B,IAAIhO,EAAQ2B,EAAMtD,IAAO1C,KAAKqS,GAC9B,GAAIhO,GAASA,EAAM+wB,WAAY,CAG3B,IAFA,IAAI6B,EAAS,GACTuE,EAAan3B,EAAMvR,MAAQ,EACtBpE,EAAI,EAAGA,EAAI2V,EAAM+wB,WAAWvmC,OAAQH,GAAK,EAC9CuoC,EAAO5yB,EAAM+wB,WAAW1mC,IAAMsX,EAAMw1B,GACpCA,IAEJ,OAAOvE,EAEX,OAAO,KAwnZiBygE,CAAkBv8F,EAAQ6K,MAAO7K,EAAQkX,YAE1DlX,EAAQ0oB,WAAa,IAmqUE4zE,CAAalqG,KAAK8oG,aAC5CjmE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe6nG,EAAqBnpG,UAAW,iBAAkB,CACpE4L,IAAK,WAAc,OAtuU3B,SAAS29F,EAAmBjrF,GACxB,IAAIvR,EAAU+zD,GAAaxiD,GAAS,GACpC,GAAgB,OAAZvR,EACA,MAAO,GAOX,IANA,IAkKwBH,EAjKpBwF,EADQrF,EAAQ6K,MACFtD,IACd2B,EAAQ7D,EAAMR,KAAK7E,EAAQkX,WAC3BmkF,EAAiB,GAEjBz/E,EAAW1S,EAAM2S,aACZtoB,EAFgC,MAAxB2V,EAAMoS,gBAEE/nB,EAAIqoB,EAAUroB,IAAK,CACxC,IAAI8B,EAAQgQ,EAAMR,KAAKtR,QA4JP+F,KADIuG,EA1JGxK,GA2JhBwE,WAAuCP,IAAjBuG,EAAIiD,eAAiDxJ,IAAvBuG,EAAI6C,iBAtJ3DrN,EAAQA,EAAMwE,MAElBwhG,EAAe3lG,KAAKL,GAExB,OAAOgmG,EAitUuBmB,CAAmBpqG,KAAK8oG,aAClDjmE,YAAY,EACZC,cAAc,IAEXknE,EAlD8B,GAoDrCC,GAAyC,SAAUz+E,GAEnD,SAASy+E,EAAwBnB,GAI7B,OADQt9E,EAAOjqB,KAAKvB,KAAM8oG,IAAe9oG,KAsN7C,OA1NAU,EAAUupG,EAAyBz+E,GAOnCprB,OAAO+B,eAAe8nG,EAAwBppG,UAAW,gBAAiB,CACtE4L,IAAK,WACD,OAAOzM,KAAK8oG,WAAWr6E,UAAYC,KAAKC,aAAe3uB,KAAK8oG,WAAa,MAE7EjmE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,OAAQ,CAC7D4L,IAAK,WACD,IACI,IAAImB,EAAU+zD,GAAa3hE,KAAK8oG,YAIhC,OAHYl7F,EAAQ6K,MACFtD,IAAO1C,KACP7E,EAAQkX,WACbkN,QAEjB,MAAO5uB,GACH,OAAOpD,KAAK8oG,WAAW72E,WAG/B4Q,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,aAAc,CAanE4L,IAAK,WACD,IAAImB,EAAU+zD,GAAa3hE,KAAK8oG,YAAY,GAC5C,GAAe,MAAXl7F,EACA,MAAO,GAEX,IAAI6K,EAAQ7K,EAAQ6K,MAChB+O,EAAQ/O,EAAMtD,IAAO1C,KAErBgsF,EA0VhB,SAAS4L,EAAwBvzF,EAAO2B,EAAO+O,GAC3C,IAAIi3E,EAAa,GACb6L,EAAiBxzF,EAAM8wB,iBAC3B,GAAuB,OAAnB0iE,EACA,IAAK,IAAInpG,EAAI,EAAGA,EAAImpG,EAAehpG,OAAQH,IAAK,CAC5C,IAAIoZ,EAAe+vF,EAAenpG,GAE9BopG,EADe/iF,EAAMjN,GACQ8U,MAvzzBf,KAwzzBdwnE,EAAe0T,EAAc,GACjC,GAAIA,EAAcjpG,OAAS,EAAG,CAE1B,IADA,IAAI2B,EAAQsnG,EAAc,GACjBt9F,EAAI,EAAGA,EAAIs9F,EAAcjpG,OAAS,EAAG2L,IAC1ChK,GAAS4b,GAAgBpG,EAAM8B,EAAetN,EAAI,IAAMs9F,EAAct9F,EAAI,GAE9EwxF,EAAW5H,GAAgB5zF,OAG3Bw7F,EAAW5H,GAAgBp+E,EAAM8B,GAI7C,OAAOkkF,EA/WkB4L,CADL7iF,EAAM5Z,EAAQkX,WACsBrM,EAAO+O,GACnDoY,EAgXhB,SAAS4qE,EAAkBC,GACvB,IAAI16E,EAAKzrB,EACLqjB,EAAU8iF,EAAa9iF,QACvB2b,EAAS,GACb,IACI,IAAK,IAAI5T,EAAK/sB,EAASvC,OAAO2iB,KAAK4E,IAAWgI,EAAKD,EAAG1sB,QAAS2sB,EAAGzsB,KAAMysB,EAAKD,EAAG1sB,OAAQ,CACpF,IAAI48B,EAAYjQ,EAAG1sB,MACf0kB,EAAQiY,KACR0D,EAASA,EAASA,EAAU,IAAM1D,EAAaA,IAI3D,MAAOzP,GAASJ,EAAM,CAAExsB,MAAO4sB,GAC/B,QACI,IACQR,IAAOA,EAAGzsB,OAASoB,EAAKorB,EAAGG,SAASvrB,EAAG/C,KAAKmuB,GAEpD,QAAU,GAAIK,EAAK,MAAMA,EAAIxsB,OAEjC,OAAO+/B,EAnYiBknE,CAAkBxqG,MAKlC,OAJI4/B,IACA6+D,EAAsB,UAClBA,EAAsB,UAAIA,EAAsB,UAAK,IAAM7+D,EAAaA,GAEzE6+D,GAEX57D,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,aAAc,CACnE4L,IAAK,WACD,IAAI6hB,EAAa,GACbnP,EAAUnf,KAAKmpE,cACnB,IAAKhqD,EACD,OAAOmP,EAEX,IAAI1gB,EAAU+zD,GAAaxiD,GAAS,GACpC,GAAe,MAAXvR,EACA,MAAO,GAEX,IACI4iC,EADQ5iC,EAAQ6K,MACGtD,IAAO1C,KAAK7E,EAAQkX,WAAWtH,MAClDktF,EAAsB,GAQ1B,GAAIl6D,EAEA,IADA,IAAIrvC,EAAI,EACDA,EAAIqvC,EAAWlvC,QAAQ,CAC1B,IAAIqc,EAAW6yB,EAAWrvC,GAG1B,GAAwB,iBAAbwc,EACP,MAEJ2Q,EAAW3Q,GADK6yB,EAAWrvC,EAAI,GAE/BupG,EAAoBpnG,KAAKqa,EAASuE,eAClC/gB,GAAK,EAGb,IAAIwpG,EAASxrF,EAAQmP,WACrB,IAASntB,EAAI,EAAGA,EAAIwpG,EAAOrpG,OAAQH,IAAK,CACpC,IAAIw4D,EAAOgxC,EAAOxpG,IAG8B,IAA5CupG,EAAoB7hG,QAAQ8wD,EAAK71D,QACjCwqB,EAAWqrC,EAAK71D,MAAQ61D,EAAK12D,OAGrC,OAAOqrB,GAEXuU,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,SAAU,CAC/D4L,IAAK,WACD,OAAIzM,KAAKmpE,eAAiBnpE,KAAKmpE,cAAc3pC,MAClCx/B,KAAKmpE,cAAc3pC,MAEvB,IAEXqD,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,UAAW,CAChE4L,IAAK,WACD,IAAKzM,KAAK4qG,cAAe,CACrB,IAAIC,EAAY7qG,KAAKmpE,cAMrBnpE,KAAK4qG,cAAgBlqE,GAAY,CAC7Bj0B,IAAK,SAAU9K,EAAQqhB,GACnB,QAAO6nF,GAAYA,EAAUhrE,UAAUirE,SAAS9nF,IAEpDuiB,IAAK,SAAU5jC,EAAQqhB,EAAM/f,GACzB,QAAO4nG,GAAYA,EAAUhrE,UAAUkrE,OAAO/nF,IAAQ/f,IAE1DuiC,QAAS,WAAc,OAAOqlE,EAAYtqG,MAAMqrD,KAAKi/C,EAAUhrE,WAAW+D,OAAS,IACnF5hC,yBAA0B,SAAUyjC,GAGhC,MAAO,CACH5C,YAAY,EACZC,cAAc,MAK9B,OAAO9iC,KAAK4qG,eAEhB/nE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,aAAc,CACnE4L,IAAK,WAGD,IAFA,IAAIy8F,EAAalpG,KAAK8oG,WAAWI,WAC7B8B,EAAW,GACN7pG,EAAI,EAAGA,EAAI+nG,EAAW5nG,OAAQH,IAEnC6pG,EAAS1nG,KAAK2nG,GADA/B,EAAW/nG,KAG7B,OAAO6pG,GAEXnoE,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAe8nG,EAAwBppG,UAAW,WAAY,CACjE4L,IAAK,WACD,IAAI08D,EAAgBnpE,KAAKmpE,cACzB,IAAKA,EACD,MAAO,GAGX,IAFA,IAAI+/B,EAAa//B,EAAc6hC,SAC3BA,EAAW,GACN7pG,EAAI,EAAGA,EAAI+nG,EAAW5nG,OAAQH,IAEnC6pG,EAAS1nG,KAAK2nG,GADA/B,EAAW/nG,KAG7B,OAAO6pG,GAEXnoE,YAAY,EACZC,cAAc,IAElBmnE,EAAwBppG,UAAUy8E,MAAQ,SAAU2R,GAEhD,OADcjvF,KAAK0pG,SAASza,GACb,IAAM,MAEzBgb,EAAwBppG,UAAU6oG,SAAW,SAAUza,GACnD,IAAIp/C,EAAU,GAEd,OADAq7D,GAAYlrG,KAAMivF,EAAWp/C,GAAS,GAC/BA,GAEXo6D,EAAwBppG,UAAU+oG,cAAgB,SAAU3a,GACxD,IAAIp/C,EAAU,GAEd,OADAq7D,GAAYlrG,KAAMivF,EAAWp/C,GAAS,GAC/BA,GAEXo6D,EAAwBppG,UAAUipG,oBAAsB,SAAU7tC,EAAW8tC,GACzE,IAAI13E,EAAOryB,KAAK8oG,WACZqC,EAAmB,GACvBnrG,KAAKwiE,UAAUrzD,SAAQ,SAAUkzD,GAC7B,GAAIA,EAASv+D,OAASm4D,EAAW,CAC7B,IAAI9iB,EAAWkpB,EAASlpB,SACxBA,EAAS4wD,GACToB,EAAiB7nG,KAAK61C,OAKK,mBAAxB9mB,EAAK+4E,gBAIZ/4E,EAAK+4E,eAAenvC,GAAW9sD,SAAQ,SAAUkzD,GAC7C,IAAIgpC,EAAoBhpC,EAAS3iD,UACjC,OAAwD,IAAjDyrF,EAAiBtiG,QAAQwiG,IAA6BA,EAAkBtB,OAIpFE,EA3NiC,CA4N1CD,IACF,SAASkB,GAAYI,EAAerc,EAAWp/C,EAAS07D,GACpD,IAAI39F,EAAU+zD,GAAa2pC,EAAcxC,YAEzC0C,GADkB59F,EAAQ6K,MAAMtD,IAAO1C,KAAK7E,EAAQkX,WAClBlX,EAAQ6K,MAAOw2E,EAAWp/C,EAAS07D,EAAcD,EAAcxC,YAYrG,SAAS0C,GAAqB10F,EAAO2B,EAAOw2E,EAAWp/C,EAAS07D,EAAcE,GAC1E,IAAIh8E,EAAKnrB,EACLwkG,EAAarkF,GAAuB3N,EAAO2B,GAE/C,GAAmB,IAAf3B,EAAMrP,MAA2C,IAAfqP,EAAMrP,KAAmC,CAG3EikG,GAAiB5C,EAAY7Z,EAAWp/C,EAAS07D,EAAcE,GAC3D10F,GAAgBD,IAGZs6B,EAAgBvsB,GAAyB/N,EAAMvR,MAAOkT,KACrC24B,EAAcj8B,IAAO4Y,YACtCy9E,GAAqBp6D,EAAcj8B,IAAO4Y,WAAYqjB,EAAe69C,EAAWp/C,EAAS07D,EAAcE,IAIvG30F,EAAM8E,OAEN4vF,GAAqB10F,EAAM8E,MAAOnD,EAAOw2E,EAAWp/C,EAAS07D,EAAcE,GAU/E3C,GA6GZ,SAAS6C,EAA4B55E,EAAYk9D,EAAWp/C,EAAS07D,GAGjE,IAFA,IAAIvkE,EAAQjV,EAAWm3E,WACnB5nG,EAAS0lC,EAAM1lC,OACVH,EAAI,EAAGA,EAAIG,EAAQH,IAAK,CAC7B,IAAIkxB,EAAO2U,EAAM7lC,GACb6hE,EAAY4oC,GAAev5E,GAC3B2wC,IACIuoC,GAAgBvoC,aAAqBinC,IAA2Bhb,EAAUjsB,KAC1C,IAAhCnzB,EAAQhnC,QAAQm6D,GAChBnzB,EAAQvsC,KAAK0/D,IAEPuoC,GAAgBtc,EAAUjsB,KACA,IAAhCnzB,EAAQhnC,QAAQm6D,IAChBnzB,EAAQvsC,KAAK0/D,GAEjB2oC,EAA4Bt5E,EAAM48D,EAAWp/C,EAAS07D,KA5HxCI,CAA4B7C,EAAY7Z,EAAWp/C,EAAS07D,IAI9E,IAAIM,EAAkBpzF,EAAM3B,EAAMvR,OAC9BqR,GAAai1F,IACbC,GAAgCD,EAAiB5c,EAAWp/C,EAAS07D,EAAcE,QAGtF,GAAmB,IAAf30F,EAAMrP,KAA4B,CAGvC,IAAIksC,EAAal7B,EAAM3B,EAAMvR,OAC7BmmG,GAAiB/3D,EAAWn9B,IAASy4E,EAAWp/C,EAAS07D,EAAcE,GAEvEK,GAAgCn4D,EAAYs7C,EAAWp/C,EAAS07D,EAAcE,QAE7E,GAAmB,IAAf30F,EAAMrP,KAA6B,CAGxC,IAAI2pC,EAEA26D,GAFA36D,EAAgB7rB,GAAkB9M,IACJjD,IACTyyB,WAAWnxB,EAAMmxB,YAC1C,GAAI1nC,MAAM+H,QAAQyjG,GACd,IACI,IAAK,IAAIC,EAASrpG,EAASopG,GAAOE,EAAWD,EAAOhpG,QAASipG,EAAS/oG,KAAM+oG,EAAWD,EAAOhpG,OAE1F0oG,GADmBO,EAAShpG,MACGgsF,EAAWp/C,EAAS07D,EAAcE,GAGzE,MAAO77E,GAASH,EAAM,CAAElsB,MAAOqsB,GAC/B,QACI,IACQq8E,IAAaA,EAAS/oG,OAASoB,EAAK0nG,EAAOn8E,SAASvrB,EAAG/C,KAAKyqG,GAEpE,QAAU,GAAIv8E,EAAK,MAAMA,EAAIlsB,YAGhC,GAAIwoG,EAAM,CACX,IACIG,EADAC,EAAY/6D,EAAc/7B,IAE9Bm2F,GADIU,EAAYC,EAAUh3F,IAAO1C,KAAKs5F,EAAKxmG,OACX4mG,EAAWld,EAAWp/C,EAAS07D,EAAcE,SAG5E30F,EAAM8E,OAEX4vF,GAAqB10F,EAAM8E,MAAOnD,EAAOw2E,EAAWp/C,EAAS07D,EAAcE,GAG3EA,IAAmB3C,IAGfoD,EAA2B,EAAdp1F,EAAMxK,MAA+BwK,EAAMkxB,eAAiBlxB,EAAM9T,OAE/EwoG,GAAqBU,EAAWzzF,EAAOw2E,EAAWp/C,EAAS07D,EAAcE,GAarF,SAASK,GAAgCn4D,EAAYs7C,EAAWp/C,EAAS07D,EAAcE,GACnF,IAAK,IAAItqG,EAAIuV,GAAyBvV,EAAIwyC,EAAWryC,OAAQH,IAAK,CAC9D,IAAIirG,EAAYz4D,EAAWxyC,GAC3BqqG,GAAqBY,EAAUj3F,IAAOkd,KAAM+5E,EAAWnd,EAAWp/C,EAAS07D,EAAcE,IAYjG,SAASC,GAAiB5C,EAAY7Z,EAAWp/C,EAAS07D,EAAcE,GACpE,GAAIA,IAAmB3C,EAAY,CAC/B,IAAI9lC,EAAY4oC,GAAe9C,GAC/B,IAAK9lC,EACD,OAKAuoC,GAAgBvoC,aAAqBinC,IAA2Bhb,EAAUjsB,KAC1C,IAAhCnzB,EAAQhnC,QAAQm6D,GAChBnzB,EAAQvsC,KAAK0/D,IAEPuoC,GAAgBtc,EAAUjsB,KACA,IAAhCnzB,EAAQhnC,QAAQm6D,IAChBnzB,EAAQvsC,KAAK0/D,IAiFzB,IAAIqpC,GAAyB,IAAIpoD,IAI7BqoD,GAAoB,eACxB,SAASrB,GAAwBnC,GAC7B,OAAIA,aAAsBp6E,MAChBo6E,EAAWroG,eAAe6rG,MAC5BxD,EAAWwD,IAAqBxD,EAAWr6E,UAAYC,KAAKC,aACxD,IAAIs7E,GAAwBnB,GAC5B,IAAIkB,GAAqBlB,IAE1BA,EAAWwD,KAEf,KAKX,IAAIV,GAlBJ,SAASW,GAAuBzD,GAC5B,OAAOuD,GAAuB5/F,IAAIq8F,IAAe,MAqBrD,SAAS0D,GAAen6E,GACpBg6E,GAAuB9mE,IAAIlT,EAAKy2E,WAAYz2E,GAQhD,IAAIo6E,GAAY5D,GAIZ6D,GAAe3D,GA6Bf4D,GAAehJ,GAAsB,KAAM,OAZhB,CAE3B,CAAEh4F,QAASguF,GAAa9tF,SAAU,WAClC,CAAEF,QAAS83F,GAAa1iD,KAAM,CAACoG,KAC/B,CAAEx7C,QAAS02F,GAAqBthD,KAAM,IACtC,CAAEp1C,QAASmuF,GAAS/4C,KAAM;;;;;;;;AAgB9B,SAAS6rD,KACL,OAAO97B,GAEX,SAAS+7B,KACL,OAAO97B,GAEX,SAAS+7B,GAAezsB,GAKpB,OAJAA,EAASA,GAYb,SAAS0sB,IAiBD,OAAQ7S,IAAmC,oBAAd8S,WAA6BA,UAAU3sB,QAChEU,GA9BWgsB,GACf7S,IACAlQ,GAAY3J,GAETA,EAiCX,IAAI4sB,GAA+B,CAC/B,CACIthG,QAAS45F,GACT5jD,SAAU4jD,GACVxkD,KAAM,CAAC87C,GAAQ/C,GAAS3yC,GAAUt8B,GAAc49C,GAA0BgwB,KAE9E,CAAE9sF,QAASszE,GAAWl+B,KAAM,CAAC87C,IAASh7C,WAAYqrD,IAClD,CACIvhG,QAAS8sF,GACT92C,SAAU82C,GACV13C,KAAM,CAAC,CAAC,IAAI56C,EAAYqyF,MAE5B,CAAE7sF,QAASovF,GAAUp5C,SAAUo5C,GAAUh6C,KAAM,IAC/Cu4C,GACA,CAAE3tF,QAAS0kE,GAAiBxuB,WAAY+qD,GAAyB7rD,KAAM,IACvE,CAAEp1C,QAASglE,GAAiB9uB,WAAYgrD,GAAyB9rD,KAAM,IACvE,CACIp1C,QAASouF,GACTl4C,WAAYirD,GACZ/rD,KAAM,CAAC,CAAC,IAAI76C,EAAO6zF,IAAc,IAAI5zF,EAAY,IAAIE,MAY7D,SAAS6mG,GAAqB3I,GAC1B,IAAI4I,EAAQ,GAMZ,OALA5I,EAAOlH,SAASthC,WAAU,WACtB,KAAOoxC,EAAM7rG,QACT6rG,EAAM59F,KAAN49F,MAGD,SAAU/jG,GAAM+jG,EAAM7pG,KAAK8F,IAYtC,IAg0CIgkG,GAh0CAC,GAIoB5rG,EAAW,CAC3B22F,GAAS,CAAE9wF,UAAW2lG,KACtB1qG,EAAW,oBAAqB,CAACgjG,OAJrC,SAAS8H,GAAkBrzD;;;;;;;OA4I/B,SAASptB,GAAcjI,EAAMoxD,EAAYluE,GACrC,IAGIumB,EAHAmsD,EAAQ1yE,EAAIsX,QACZ4pD,EAAqBpkD,EAAKgwD,KAAK24B,eAC/BrwF,EAAW0H,EAAK1H,SAEpB,GAAI0H,EAAK9I,SAAWktD,EAAoB,CAEhC36C,EADAmsD,EAAMz2E,KACDmZ,EAAS2P,cAAc2tD,EAAMz2E,KAAMy2E,EAAMgzB,IAGzCtwF,EAAS4/B,cAAc,IAEhC,IAAI2wD,EAAW13B,GAAuBnxD,EAAMoxD,EAAYluE,GACpD2lG,GACAvwF,EAAS4P,YAAY2gF,EAAUp/E,QAOnCA,EAAKnR,EAAS0xB,kBAAkBo6B,IAFPwR,EAAMvE,uBAC3BuE,EAAMvE,sBAAsBtjE,gBAAkBpT,EAAQ4O,kBAAkBuoC,WAGhF,GAAI8jC,EAAM/8D,MACN,IAAK,IAAIrc,EAAI,EAAGA,EAAIo5E,EAAM/8D,MAAMlc,OAAQH,IAAK,CACzC,IAAImD,EAAKnB,EAAOo3E,EAAM/8D,MAAMrc,GAAI,GAChC8b,EAASY,aAAauQ,EADmC9pB,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO8pB,EAEX,SAASq/E,GAAuB9oF,EAAMiyD,EAAU/uE,EAAKumB,GACjD,IAAK,IAAIjtB,EAAI,EAAGA,EAAI0G,EAAImJ,QAAQ1P,OAAQH,IAAK,CACzC,IAAImiC,EAASz7B,EAAImJ,QAAQ7P,GACrBusG,EAAqBC,GAA0BhpF,EAAM9c,EAAIid,WA7xQ/BhhB,EA6xQ8Ew/B,EAAO24B,WA7xQ7Ft6D,EA6xQuE2hC,EAAO3hC,QA5xQxFA,EAAS,IAAMmC,EAAOA,IA6xQ9B8pG,EAAetqE,EAAO3hC,OACtBksG,EAAelpF,EACG,cAAlB2e,EAAO3hC,SACPisG,EAAe,KACfC,EAAej3B,GAEnB,IAAIk3B,EAAaD,EAAa5wF,SAASigD,OAAO0wC,GAAgBx/E,EAAIkV,EAAO24B,UAAWyxC,GACpF/oF,EAAKg3D,YAAY9zE,EAAIs1E,YAAch8E,GAAK2sG,EAryQhD,IAA8BnsG,EAAQmC,EAwyQtC,SAAS6pG,GAA0BhpF,EAAMpf,EAAO02D,GAC5C,OAAO,SAAUyY,GAAS,OAAOD,GAAc9vD,EAAMpf,EAAO02D,EAAWyY,IAmC3E,SAASq5B,GAA2BppF,EAAM9c,EAAKisE,EAAY7wE,GACvD,IAAK+wE,GAAsBrvD,EAAM9c,EAAKisE,EAAY7wE,GAC9C,OAAO,EAEX,IAAI0gC,EAAU97B,EAAIssE,SAASL,GACvB0G,EAASrI,GAAcxtD,EAAM9c,EAAIid,WACjCiwD,EAAayF,EAAOxF,cACpBlxE,EAAO6/B,EAAQ7/B,KACnB,OAAwB,GAAhB6/B,EAAQr3B,OACZ,KAAK,GAmBb,SAAS0hG,EAAoBrpF,EAAMgf,EAASoxC,EAAYw4B,EAAIzpG,EAAMb,GAC9D,IAAIgrG,EAAkBtqE,EAAQsqE,gBAC1BC,EAAcD,EAAkBtpF,EAAKgwD,KAAKj4D,UAAUsX,SAASi6E,EAAiBhrG,GAASA,EAC3FirG,EAA6B,MAAfA,EAAsBA,EAAYvlG,WAAa,KAC7D,IAAIsU,EAAW0H,EAAK1H,SACP,MAATha,EACAga,EAASY,aAAak3D,EAAYjxE,EAAMoqG,EAAaX,GAGrDtwF,EAASsR,gBAAgBwmD,EAAYjxE,EAAMypG,GA3BvCS,CAAoBrpF,EAAMgf,EAASoxC,EAAYpxC,EAAQ4pE,GAAIzpG,EAAMb,GACjE,MACJ,KAAK,GA4Bb,SAASkrG,EAAgBxpF,EAAMowD,EAAYjxE,EAAMb,GAC7C,IAAIga,EAAW0H,EAAK1H,SAChBha,EACAga,EAAS6iB,SAASi1C,EAAYjxE,GAG9BmZ,EAAS+iB,YAAY+0C,EAAYjxE,GAjC7BqqG,CAAgBxpF,EAAMowD,EAAYjxE,EAAMb,GACxC,MACJ,KAAK,GAkCb,SAASmrG,EAAgBzpF,EAAMgf,EAASoxC,EAAYjxE,EAAMb,GACtD,IAAIirG,EAAcvpF,EAAKgwD,KAAKj4D,UAAUsX,SAAS10B,EAAQ+wB,gBAAgB+D,MAAOnxB,GAC9E,GAAmB,MAAfirG,EAAqB,CACrBA,EAAcA,EAAYvlG,WAC1B,IAAI0lG,EAAO1qE,EAAQuvB,OACP,MAARm7C,IACAH,GAA4BG,QAIhCH,EAAc,KAElB,IAAIjxF,EAAW0H,EAAK1H,SACD,MAAfixF,EACAjxF,EAASoiB,SAAS01C,EAAYjxE,EAAMoqG,GAGpCjxF,EAASwiB,YAAYs1C,EAAYjxE,GAlD7BsqG,CAAgBzpF,EAAMgf,EAASoxC,EAAYjxE,EAAMb,GACjD,MACJ,KAAK,GAmDb,SAASqrG,EAAmB3pF,EAAMgf,EAASoxC,EAAYjxE,EAAMb,GACzD,IAAIgrG,EAAkBtqE,EAAQsqE,gBAC1BC,EAAcD,EAAkBtpF,EAAKgwD,KAAKj4D,UAAUsX,SAASi6E,EAAiBhrG,GAASA,EAC3F0hB,EAAK1H,SAASe,YAAY+2D,EAAYjxE,EAAMoqG;;;;;;;OAjDpCI,CAJ4B,SAAZzmG,EAAIyE,OACA,GAAhBq3B,EAAQr3B,MACRkuE,EAAOppC,cACPzsB,EACyBgf,EAASoxC,EAAYjxE,EAAMb,GAGhE,OAAO,EA6FX,SAASuwE,GAAmB7uD,GAExB,IADA,IAAI4pF,EAAW5pF,EAAK9c,IAAI2mG,mBACjB7pF,EAAK9I,QAAUs5D,GAAexwD,IAAO,CACxC,IAAI8pF,EAAS9pF,EAAKkwD,cAClBlwD,EAAOA,EAAK9I,OAGZ,IADA,IAAI2b,EAAMi3E,EAAO3pF,UAAY2pF,EAAOh4B,WAC3Bt1E,EAAI,EAAGA,GAAKq2B,EAAKr2B,IAED,UADjBo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,IAChBmL,OACQ,UAAhBiqE,EAAQjqE,QACRiqE,EAAQ+G,MAAMoxB,SAAWH,KAAch4B,EAAQ+G,MAAMoxB,UACtDp8B,GAAY3tD,EAAMxjB,GAAGgtF,aAEJ,EAAhB5X,EAAQjqE,OAA+BnL,EAAIo1E,EAAQE,WAAag4B,EAAO3pF,YACjD,SAArByxD,EAAQ4E,YACa,UAArB5E,EAAQ4E,aAEVh6E,GAAKo1E,EAAQE,YAKzB,GAAyB,UAArB9xD,EAAK9c,IAAIqzE,UACT,IAAS/5E,EAAI,EAAGA,EAAIwjB,EAAK9c,IAAIm/B,MAAM1lC,OAAQH,IAAK,CAC5C,IAAIo1E,EACiB,WADjBA,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,IAChBmL,OAA2D,UAAhBiqE,EAAQjqE,OAC5DgmE,GAAY3tD,EAAMxjB,GAAGgtF,WAGzBhtF,GAAKo1E,EAAQE,YAIzB,SAASk4B,GAAoBhqF,EAAM4xD,GAC/B,IAAI8X,EAAY/b,GAAY3tD,EAAM4xD,EAAQzxD,WAC1C,GAAKupE,EAAU3lD,MAAf,CAGA,IAAI9S,EACA/R,OAAY3c,EAChB,GAAoB,SAAhBqvE,EAAQjqE,MAAyC,CACjD,IAAIsiG,EAAar4B,EAAQ16D,OAAOA,OAChCgI,EAAYgrF,GAAgBlqF,EAAMiqF,EAAW9pF,UAAW8pF,EAAW9pF,UAAY8pF,EAAWn4B,WAAYF,EAAQ+G,MAAO,IACrH1nD,EAAoBw8C,GAAeztD,EAAM4xD,EAAQ16D,OAAOiJ,WAAWwD,cAE9C,UAAhBiuD,EAAQjqE,QACbuX,EAAYgrF,GAAgBlqF,EAAM,EAAGA,EAAK9c,IAAIm/B,MAAM1lC,OAAS,EAAGi1E,EAAQ+G,MAAO,IAC/E1nD,EAAoBjR,EAAK4Q,WAE7B84D,EAAUN,MAAMlqE,GAGhB,IAFA,IAAIswD,EAAWoC,EAAQ+G,MAAMnJ,SACzB26B,GAAS,EACJ3tG,EAAI,EAAGA,EAAIgzE,EAAS7yE,OAAQH,IAAK,CACtC,IAAIwiC,EAAUwwC,EAAShzE,GACnB4tG,OAAa,EACjB,OAAQprE,EAAQqrE,aACZ,KAAK,EACDD,EAAa1gB,EAAUvgC,MACvB,MACJ,KAAK,EACDihD,EAAa1gB,EACbygB,GAAS,EAGjBl5E,EAAkB+N,EAAQ1+B,UAAY8pG,EAEtCD,GACAzgB,EAAUH,mBAGlB,SAAS2gB,GAAgBlqF,EAAM80C,EAAYjwC,EAAUylF,EAAUjqG,GAC3D,IAAK,IAAI7D,EAAIs4D,EAAYt4D,GAAKqoB,EAAUroB,IAAK,CACzC,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GACzBw0E,EAAYY,EAAQf,eAAey5B,EAASr8F,IAIhD,GAHiB,MAAb+iE,GACA3wE,EAAO1B,KAAK4rG,GAAcvqF,EAAM4xD,EAASZ,IAEzB,EAAhBY,EAAQjqE,OAA+BiqE,EAAQp3D,QAAQzO,WACtD6lE,EAAQp3D,QAAQzO,SAAS89F,mBAAqBS,EAASP,YACpDO,EAASP,SAAU,CACvB,IAAI51B,EAAc3G,GAAcxtD,EAAMxjB,GAOtC,IAJKo1E,EAAQ8G,oBAAsB4xB,EAASP,YAAcO,EAASP,WAC/DG,GAAgBlqF,EAAMxjB,EAAI,EAAGA,EAAIo1E,EAAQE,WAAYw4B,EAAUjqG,GAC/D7D,GAAKo1E,EAAQE,YAEG,SAAhBF,EAAQjqE,MAER,IADA,IAAI6qE,EAAgB2B,EAAY1B,cAAcC,eACrC5xC,EAAI,EAAGA,EAAI0xC,EAAc71E,OAAQmkC,IAAK,CAC3C,IAAIyN,EAAeikC,EAAc1xC,GAC7B0pE,EAAMv6B,GAAsB1hC,GAC5Bi8D,GAAOA,IAAQr2B,GACf+1B,GAAgB37D,EAAc,EAAGA,EAAarrC,IAAIm/B,MAAM1lC,OAAS,EAAG2tG,EAAUjqG,GAI1F,IAAI+1E,EAAiBjC,EAAYpoE,SAASsqE,gBAC1C,GAAID,EACA,IAASt1C,EAAI,EAAGA,EAAIs1C,EAAez5E,OAAQmkC,IAAK,CAC5C,IAAI2pE,EAAgBr0B,EAAet1C,GACnCopE,GAAgBO,EAAe,EAAGA,EAAcvnG,IAAIm/B,MAAM1lC,OAAS,EAAG2tG,EAAUjqG,KAIvFuxE,EAAQ8G,oBAAsB4xB,EAASP,YAAcO,EAASP,WAE/DvtG,GAAKo1E,EAAQE,YAGrB,OAAOzxE,EAEX,SAASkqG,GAAcvqF,EAAM4xD,EAAS84B,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAOl9B,GAAcxtD,EAAM4xD,EAAQzxD,WAAWkwD,cAClD,KAAK,EACD,OAAO,IAAI9L,GAAWiJ,GAAcxtD,EAAM4xD,EAAQzxD,WAAWkwD,eACjE,KAAK,EACD,OAAO7C,GAAcxtD,EAAM4xD,EAAQzxD,WAAWpU,SAClD,KAAK,EACD,OAAOyhE,GAAcxtD,EAAM4xD,EAAQzxD,WAAWsyD,cAClD,KAAK,EACD,OAAOhF,GAAeztD,EAAM4xD,EAAQzxD,WAAWwD;;;;;;;OAwC/D,SAASgnF,GAAgB3qF,EAAMoxD,EAAYluE,GACvC,IAAI2lG,EAAW13B,GAAuBnxD,EAAMoxD,EAAYluE,GACnD2lG,GAKL92B,GAA0B/xD,EADL9c,EAAImvE,UAAUzxE,MACa,EAAqBioG,EAAU,UAAMtmG;;;;;;;OA4BzF,SAASqoG,GAAmBjjG,EAAO2wE,EAAYuyB,GAE3C,IADA,IAAIr7B,EAAW,GACNhzE,EAAI,EAAGA,EAAIquG,EAAcluG,OAAQH,IAAK,CAC3C,IAAI6hB,EAAOwsF,EAAcruG,GACzBgzE,EAAS7wE,KAAK,CACVgJ,MAAO,EACPxI,KAAMkf,EACNuqF,GAAI,KACJ9uB,gBAAiBz7D,EACjBirF,gBAAiB,KACjB/6C,OAAQ,OAGhB,MAAO,CAEHpuC,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEdF,WAAYA,EACZ3wE,MAAOA,EACP6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EACrB7H,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZiB,gBAAiB,EACjBF,WAAY,EAAGtC,SAAUA,EACzB+C,aAAcM,GAAiBrD,GAC/BnjE,QAAS,GACTmO,QAAS,KACTsjC,SAAU,KACVj1C,KAAM,KACN8vE,MAAO,KACPtG,UAAW,MAuMnB,SAAS1iC,GAAW3vB,EAAMoxD,EAAYluE,GAClC,IAAIktE,EACA93D,EAAW0H,EAAK1H,SACpB83D,EAAa93D,EAASq3B,WAAWzsC,EAAI2F,KAAK+1B,QAC1C,IAAIiqE,EAAW13B,GAAuBnxD,EAAMoxD,EAAYluE,GAIxD,OAHI2lG,GACAvwF,EAAS4P,YAAY2gF,EAAUz4B,GAE5B,CAAEE,WAAYF,GA0EzB,SAAS06B,GAAsBxsG,EAAO0gC,GAElC,OADwB,MAAT1gC,EAAgBA,EAAM0F,WAAa,IAChCg7B,EAAQuvB;;;;;;;OAmI9B,SAASw8C,GAAcr9E,GACnB,OAA8C,IAAzB,EAAbA,EAAK/lB,QAA4D,OAAtB+lB,EAAKlT,QAAQrb,KAEpE,SAAS6rG,GAAa9zF,EAAQwW,EAAMu9E,GAChC,IAAIl/F,EAAW2hB,EAAKlT,SAAWkT,EAAKlT,QAAQzO,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAAS2lE,mBACV,MAAM,IAAIzvE,MAAM,oEAEpB,GAAI8J,EAAS2lE,oBAC2B,SAApC3lE,EAAS2lE,mBAAmB/pE,MAC5B,MAAM,IAAI1F,MAAM,mFAAqFyrB,EAAKvN,UAAY,KAG9H,GAAiB,MAAbuN,EAAK/lB,OAEuC,IAAzB,GADDuP,EAASA,EAAOvP,MAAQ,IAEtC,MAAM,IAAI1F,MAAM,sGAAwGyrB,EAAKvN,UAAY,KAGjJ,GAAIuN,EAAKirD,MAAO,CACZ,GAAiB,SAAbjrD,EAAK/lB,SACHuP,GAAyD,IAA/B,MAAfA,EAAOvP,QACpB,MAAM,IAAI1F,MAAM,kFAAoFyrB,EAAKvN,UAAY,KAEzH,GAAiB,UAAbuN,EAAK/lB,OAAyCuP,EAC9C,MAAM,IAAIjV,MAAM,wEAA0EyrB,EAAKvN,UAAY,KAGnH,GAAIuN,EAAKokD,WAAY,CACjB,IAAIo5B,EAAYh0F,EAASA,EAAOiJ,UAAYjJ,EAAO46D,WAAam5B,EAAY,EAC5E,GAAIv9E,EAAKvN,WAAa+qF,GAAax9E,EAAKvN,UAAYuN,EAAKokD,WAAao5B,EAClE,MAAM,IAAIjpG,MAAM,uEAAyEyrB,EAAKvN,UAAY,MAItH,SAASg2B,GAAmBj/B,EAAQi0F,EAAWl2B,EAAShsE,GAGpD,IAAI+W,EAAOorF,GAAWl0F,EAAO84D,KAAM94D,EAAOoB,SAAUpB,EAAQi0F,EAAWl2B,GAGvE,OAFAo2B,GAASrrF,EAAM9I,EAAO0Z,UAAW3nB,GACjCqiG,GAAgBtrF,GACTA,EAEX,SAAS+tD,GAAeiC,EAAM9sE,EAAK+F,GAC/B,IAAI+W,EAAOorF,GAAWp7B,EAAMA,EAAK13D,SAAU,KAAM,KAAMpV,GAGvD,OAFAmoG,GAASrrF,EAAM/W,EAASA,GACxBqiG,GAAgBtrF,GACTA,EAEX,SAASguD,GAAoB/zD,EAAY23D,EAASqD,EAASx8D,GACvD,IACI8yF,EADA7yF,EAAek5D,EAAQp3D,QAAQ62D,sBAQnC,OAFIk6B,EAJC7yF,EAIcuB,EAAW+1D,KAAK5pC,gBAAgB5tB,eAAeC,EAAaC,GAH5DuB,EAAW+1D,KAAK13D,SAK5B8yF,GAAWnxF,EAAW+1D,KAAMu7B,EAActxF,EAAY23D,EAAQp3D,QAAQ26D,kBAAmBF,GAEpG,SAASm2B,GAAWp7B,EAAM13D,EAAUpB,EAAQg5D,EAAehtE,GACvD,IAAIm/B,EAAQ,IAAIzmC,MAAMsH,EAAIm/B,MAAM1lC,QAC5Bq6E,EAAc9zE,EAAIsoG,YAAc,IAAI5vG,MAAMsH,EAAIsoG,aAAe,KAWjE,MAVW,CACPtoG,IAAKA,EACLgU,OAAQA,EACRy4D,oBAAqB,KAAMO,cAAeA,EAC1CjnE,QAAS,KACT2nB,UAAW,KAAMyR,MAAOA,EACxBvL,MAAO,GAAkBk5C,KAAMA,EAAM13D,SAAUA,EAC/C82D,UAAW,IAAIxzE,MAAMsH,EAAIuoG,cAAez0B,YAAaA,EACrD3J,WAAY,GAIpB,SAASg+B,GAASrrF,EAAM4Q,EAAW3nB,GAC/B+W,EAAK4Q,UAAYA,EACjB5Q,EAAK/W,QAAUA,EAEnB,SAASqiG,GAAgBtrF,GACrB,IAAIoxD,EACAb,GAAgBvwD,KAEhBoxD,EAAa5D,GAAcxtD,EAAK9I,OADlB8I,EAAKkwD,cAC6Bh5D,OAAOiJ,WAAWkwD,eAItE,IAFA,IAAIntE,EAAM8c,EAAK9c,IACXm/B,EAAQriB,EAAKqiB,MACR7lC,EAAI,EAAGA,EAAI0G,EAAIm/B,MAAM1lC,OAAQH,IAAK,CACvC,IAAIo1E,EAAU1uE,EAAIm/B,MAAM7lC,GACxBqxE,GAASC,eAAe9tD,EAAMxjB,GAC9B,IAAIkvG,OAAW,EACf,OAAwB,UAAhB95B,EAAQjqE,OACZ,KAAK,EACD,IAAI8hB,EAAKxB,GAAcjI,EAAMoxD,EAAYQ,GACrCnlC,OAAgBlqC,EACpB,GAAoB,SAAhBqvE,EAAQjqE,MAAsC,CAC9C,IAAIgkG,EAAcn6B,GAAkBI,EAAQp3D,QAAQiyB,eACpDA,EAAgBohC,GAASG,oBAAoBhuD,EAAM4xD,EAAS+5B,EAAaliF,GAE7Eq/E,GAAuB9oF,EAAMysB,EAAemlC,EAASnoD,GACrDiiF,EAAW,CACPr7B,cAAe5mD,EACfgjB,cAAeA,EACfgmC,cAAe,KACf1mE,SAAU6lE,EAAQp3D,QAAQzO,SAAWkrE,GAAmBj3D,EAAM4xD,QAAWrvE,GAEzD,SAAhBqvE,EAAQjqE,QACR+jG,EAASj5B,cAAgBkD,GAAwB31D,EAAM4xD,EAAS85B,IAEpE,MACJ,KAAK,EACDA,EAAW/7D,GAAW3vB,EAAMoxD,EAAYQ,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACD85B,EAAWrpE,EAAM7lC,KACkB,KAAhBo1E,EAAQjqE,QAEvB+jG,EAAW,CAAE/nF,SADEi1D,GAAuB54D,EAAM4xD,KAGhD,MAEJ,KAAK,GAED85B,EAAW,CAAE/nF,SADEm1D,GAAmB94D,EAAM4xD,IAExC,MAEJ,KAAK,OACD85B,EAAWrpE,EAAM7lC,MAGbkvG,EAAW,CAAE/nF,SADEq1D,GAAwBh5D,EAAM4xD,KAG7B,MAAhBA,EAAQjqE,OAER0jG,GADe79B,GAAcxtD,EAAM4xD,EAAQ16D,OAAOiJ,WAAWssB,cAC1Ci/D,EAAS/nF,SAAU+nF,EAAS/nF,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACD+nF,EA3iBL,CAAEptG,WAAOiE,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACDmpG,EAnyBL,IAAI5iB,GAoyBC,MACJ,KAAK,EACD6hB,GAAgB3qF,EAAMoxD,EAAYQ,GAElC85B,OAAWnpG,EAGnB8/B,EAAM7lC,GAAKkvG,EAIfE,GAAyB5rF,EAAMyoF,GAAWoD,iBAE1CC,GAAkB9rF,EAAM,UAAiE,UAA6B,GAE1H,SAASsuD,GAAmBtuD,GACxB+rF,GAA2B/rF,GAC3B6tD,GAASc,iBAAiB3uD,EAAM,GAChCgsF,GAAwBhsF,EAAMyoF,GAAWwD,gBACzCp+B,GAASe,eAAe5uD,EAAM,GAC9B4rF,GAAyB5rF,EAAMyoF,GAAWwD,gBAG1CjsF,EAAK8W,QAAS,GAElB,SAASu3C,GAAmBruD,GACP,EAAbA,EAAK8W,OACL9W,EAAK8W,QAAS,EACd9W,EAAK8W,OAAS,GAGd9W,EAAK8W,QAAS,EAElBm2C,GAAejtD,EAAM,EAA8B,KACnD+rF,GAA2B/rF,GAC3B6tD,GAASc,iBAAiB3uD,EAAM,GAChCgsF,GAAwBhsF,EAAMyoF,GAAWyD,gBACzCJ,GAAkB9rF,EAAM,SAAiC,UAA8B,GACvF,IAAImsF,EAAWl/B,GAAejtD,EAAM,IAAmC,KACvE+5D,GAAgC/5D,EAAM,SAAqCmsF,EAAW,QAAiC,IACvHt+B,GAASe,eAAe5uD,EAAM,GAC9B4rF,GAAyB5rF,EAAMyoF,GAAWyD,gBAC1CJ,GAAkB9rF,EAAM,UAA+B,UAA8B,GAErF+5D,GAAgC/5D,EAAM,UADtCmsF,EAAWl/B,GAAejtD,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAK9c,IAAIyE,QACTqY,EAAK8W,QAAS,GAElB9W,EAAK8W,QAAS,GACdm2C,GAAejtD,EAAM,IAA0C,MAEnE,SAASosF,GAAmBpsF,EAAM4xD,EAASy6B,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyBxsF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACjF,OAAwB,UAAhB36B,EAAQjqE,OACZ,KAAK,EACD,OAjhCZ,SAAS8kG,EAA4BzsF,EAAM9c,EAAKorD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAChF,IAAIG,EAAUxpG,EAAIssE,SAAS7yE,OACvB46B,GAAU,EAqBd,OApBIm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGorD,KACxD/2B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGwrD,KACxDn3B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAG2rD,KACxDt3B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAG8rD,KACxDz3B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGisD,KACxD53B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGosD,KACxD/3B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGusD,KACxDl4B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAG0sD,KACxDr4B,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGopG,KACxD/0E,GAAU,GACVm1E,EAAU,GAAKtD,GAA2BppF,EAAM9c,EAAK,EAAGqpG,KACxDh1E,GAAU,GACPA,EA0/BQk1E,CAA4BzsF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASI,EAAyB3sF,EAAM9c,EAAKorD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAC7E,IAAIh1E,GAAU,EACVi4C,EAAWtsE,EAAIssE,SACfk9B,EAAUl9B,EAAS7yE,OAqBvB,GApBI+vG,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGorD,KACnD/2B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGwrD,KACnDn3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG2rD,KACnDt3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG8rD,KACnDz3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGisD,KACnD53B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGosD,KACnD/3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGusD,KACnDl4B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG0sD,KACnDr4B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGopG,KACnD/0E,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGqpG,KACnDh1E,GAAU,GACVA,EAAS,CACT,IAAIj5B,EAAQ4E,EAAI2F,KAAK+1B,OACjB8tE,EAAU,IACVpuG,GAASwsG,GAAsBx8C,EAAIkhB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBp8C,EAAI8gB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBj8C,EAAI2gB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsB97C,EAAIwgB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsB37C,EAAIqgB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBx7C,EAAIkgB,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBr7C,EAAI+f,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBl7C,EAAI4f,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsBwB,EAAI98B,EAAS,KAC5Ck9B,EAAU,IACVpuG,GAASwsG,GAAsByB,EAAI/8B,EAAS,KAChD,IAAIY,EAAa7C,GAAWvtD,EAAM9c,EAAIid,WAAWmwD,WACjDtwD,EAAK1H,SAASmE,SAAS2zD,EAAY9xE,GAEvC,OAAOi5B,EA2YQo1E,CAAyB3sF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACvF,KAAK,MACD,OApyQZ,SAASK,EAA8B5sF,EAAM9c,EAAKorD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAClF,IAAI5yB,EAAelM,GAAeztD,EAAM9c,EAAIid,WACxC4T,EAAY4lD,EAAah2D,SACzB4T,GAAU,EACVsiD,OAAUt3E,EACVmqG,EAAUxpG,EAAIssE,SAAS7yE,OAmD3B,OAlDI+vG,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGorD,KAC1C/2B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGorD,EAAIurB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGwrD,KAC1Cn3B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGwrD,EAAImrB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAG2rD,KAC1Ct3B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAG2rD,EAAIgrB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAG8rD,KAC1Cz3B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAG8rD,EAAI6qB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGisD,KAC1C53B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGisD,EAAI0qB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGosD,KAC1C/3B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGosD,EAAIuqB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGusD,KAC1Cl4B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGusD,EAAIoqB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAG0sD,KAC1Cr4B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAG0sD,EAAIiqB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGopG,KAC1C/0E,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGopG,EAAIzyB,IAErD6yB,EAAU,GAAKx9B,GAAalvD,EAAM9c,EAAK,EAAGqpG,KAC1Ch1E,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK,EAAGqpG,EAAI1yB,IAErDA,GACA9lD,EAAUwtC,YAAYsY,GAET,MAAZ32E,EAAIyE,OACL2lE,GAA4BttD,EAAM,IAAmC9c,EAAIid,YACzE4T,EAAUtnB,WAEE,OAAZvJ,EAAIyE,OACJosB,EAAUpnB,YAEP4qB,EA4uQQq1E,CAA8B5sF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASM,EAAmC7sF,EAAM9c,EAAKorD,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACvF,IAAI/8B,EAAWtsE,EAAIssE,SACfj4C,GAAU,EACVm1E,EAAUl9B,EAAS7yE,OAqBvB,GApBI+vG,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGorD,KACnD/2B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGwrD,KACnDn3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG2rD,KACnDt3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG8rD,KACnDz3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGisD,KACnD53B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGosD,KACnD/3B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGusD,KACnDl4B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAG0sD,KACnDr4B,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGopG,KACnD/0E,GAAU,GACVm1E,EAAU,GAAKr9B,GAAsBrvD,EAAM9c,EAAK,EAAGqpG,KACnDh1E,GAAU,GACVA,EAAS,CACT,IAAIzpB,EAAO4/D,GAAqB1tD,EAAM9c,EAAIid,WACtC7hB,OAAQ,EACZ,OAAoB,UAAZ4E,EAAIyE,OACR,KAAK,GACDrJ,EAAQ,GACJouG,EAAU,GACVpuG,EAAMK,KAAK2vD,GACXo+C,EAAU,GACVpuG,EAAMK,KAAK+vD,GACXg+C,EAAU,GACVpuG,EAAMK,KAAKkwD,GACX69C,EAAU,GACVpuG,EAAMK,KAAKqwD,GACX09C,EAAU,GACVpuG,EAAMK,KAAKwwD,GACXu9C,EAAU,GACVpuG,EAAMK,KAAK2wD,GACXo9C,EAAU,GACVpuG,EAAMK,KAAK8wD,GACXi9C,EAAU,GACVpuG,EAAMK,KAAKixD,GACX88C,EAAU,GACVpuG,EAAMK,KAAK2tG,GACXI,EAAU,GACVpuG,EAAMK,KAAK4tG,GACf,MACJ,KAAK,GACDjuG,EAAQ,GACJouG,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQmvD,GAC1Bo+C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQuvD,GAC1Bg+C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQ0vD,GAC1B69C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQ6vD,GAC1B09C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQgwD,GAC1Bu9C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQmwD,GAC1Bo9C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQswD,GAC1Bi9C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQywD,GAC1B88C,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQmtG,GAC1BI,EAAU,IACVpuG,EAAMkxE,EAAS,GAAGrwE,MAAQotG,GAC9B,MACJ,KAAK,IACD,IAAItd,EAAO3gC,EACX,OAAQo+C,GACJ,KAAK,EACDpuG,EAAQ2wF,EAAKtH,UAAUr5B,GACvB,MACJ,KAAK,EACDhwD,EAAQ2wF,EAAKtH,UAAUj5B,GACvB,MACJ,KAAK,EACDpwD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,GAC3B,MACJ,KAAK,EACDvwD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,GAC/B,MACJ,KAAK,EACD1wD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,GACnC,MACJ,KAAK,EACD7wD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,EAAIG,GACvC,MACJ,KAAK,EACDhxD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACDnxD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDtxD,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,GACnD,MACJ,KAAK,GACDhuG,EAAQ2wF,EAAKtH,UAAUj5B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,IAKvEz+F,EAAKxP,MAAQA,EAEjB,OAAOi5B,EA6hBQs1E,CAAmC7sF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyBxsF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GA+C3F,SAASO,EAA0B9sF,EAAM4xD,EAASvxE,GAC9C,OAAwB,UAAhBuxE,EAAQjqE,OACZ,KAAK,EACD,OAxgCZ,SAASolG,EAA6B/sF,EAAM9c,EAAK7C,GAE7C,IADA,IAAIk3B,GAAU,EACL/6B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC3B4sG,GAA2BppF,EAAM9c,EAAK1G,EAAG6D,EAAO7D,MAChD+6B,GAAU,GAElB,OAAOA,EAkgCQw1E,CAA6B/sF,EAAM4xD,EAASvxE,GACvD,KAAK,EACD,OAzZZ,SAAS2sG,EAA0BhtF,EAAM9c,EAAK7C,GAG1C,IAFA,IAAImvE,EAAWtsE,EAAIssE,SACfj4C,GAAU,EACL/6B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAG3B6yE,GAAsBrvD,EAAM9c,EAAK1G,EAAG6D,EAAO7D,MAC3C+6B,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIj5B,EAAQ,GACZ,IAAS9B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/B8B,GAAgBwsG,GAAsBzqG,EAAO7D,GAAIgzE,EAAShzE,IAE9D8B,EAAQ4E,EAAI2F,KAAK+1B,OAAStgC,EAC1B,IAAI8xE,EAAa7C,GAAWvtD,EAAM9c,EAAIid,WAAWmwD,WACjDtwD,EAAK1H,SAASmE,SAAS2zD,EAAY9xE,GAEvC,OAAOi5B,EAsYQy1E,CAA0BhtF,EAAM4xD,EAASvxE,GACpD,KAAK,MACD,OA1vQZ,SAAS4sG,EAA+BjtF,EAAM9c,EAAK7C,GAK/C,IAJA,IAAIs5E,EAAelM,GAAeztD,EAAM9c,EAAIid,WACxC4T,EAAY4lD,EAAah2D,SACzB4T,GAAU,EACVsiD,OAAUt3E,EACL/F,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC3B0yE,GAAalvD,EAAM9c,EAAK1G,EAAG6D,EAAO7D,MAClC+6B,GAAU,EACVsiD,EAAUD,GAAW55D,EAAM25D,EAAcz2E,EAAK1G,EAAG6D,EAAO7D,GAAIq9E,IAapE,OAVIA,GACA9lD,EAAUwtC,YAAYsY,GAET,MAAZ32E,EAAIyE,OACL2lE,GAA4BttD,EAAM,IAAmC9c,EAAIid,YACzE4T,EAAUtnB,WAEE,OAAZvJ,EAAIyE,OACJosB,EAAUpnB,YAEP4qB,EAquQQ01E,CAA+BjtF,EAAM4xD,EAASvxE,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAAS6sG,EAAoCltF,EAAM9c,EAAK7C,GAGpD,IAFA,IAAImvE,EAAWtsE,EAAIssE,SACfj4C,GAAU,EACL/6B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAG3B6yE,GAAsBrvD,EAAM9c,EAAK1G,EAAG6D,EAAO7D,MAC3C+6B,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIzpB,EAAO4/D,GAAqB1tD,EAAM9c,EAAIid,WACtC7hB,OAAQ,EACZ,OAAoB,UAAZ4E,EAAIyE,OACR,KAAK,GACDrJ,EAAQ+B,EACR,MACJ,KAAK,GAED,IADA/B,EAAQ,GACC9B,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/B8B,EAAMkxE,EAAShzE,GAAG2C,MAAQkB,EAAO7D,GAErC,MACJ,KAAK,IACD,IAAIyyF,EAAO5uF,EAAO,GACdokD,EAASpkD,EAAOgK,MAAM,GAC1B/L,EAAQ2wF,EAAKtH,UAAU9qF,MAAMoyF,EAAMpwF,EAAS4lD,IAGpD32C,EAAKxP,MAAQA,EAEjB,OAAOi5B;;;;;;;OA4gBQ21E,CAAoCltF,EAAM4xD,EAASvxE,GAC9D,QACI,KAAM,eAzDHysG,CAA0B9sF,EAAM4xD,EAAStjB,GAGxD,SAASy9C,GAA2B/rF,GAChC,IAAI9c,EAAM8c,EAAK9c,IACf,GAAsB,EAAhBA,EAAIqzE,UAGV,IAAK,IAAI/5E,EAAI,EAAGA,EAAI0G,EAAIm/B,MAAM1lC,OAAQH,IAAK,CACvC,IAAIo1E,EAAU1uE,EAAIm/B,MAAM7lC,GACxB,GAAoB,EAAhBo1E,EAAQjqE,MAAmC,CAC3C,IAAIyuE,EAAiB5I,GAAcxtD,EAAMxjB,GAAGuP,SAASsqE,gBACrD,GAAID,EACA,IAAK,IAAIt+C,EAAM,EAAGA,EAAMs+C,EAAez5E,OAAQm7B,IAAO,CAClD,IAAI2yE,EAAgBr0B,EAAet+C,GACnC2yE,EAAc3zE,OAAS,GACvB84C,GAAsC66B,EAAezqF,SAIH,IAA/B,EAArB4xD,EAAQ4E,cAIdh6E,GAAKo1E,EAAQE,aAoCzB,SAASq7B,GAAmBntF,EAAM4xD,EAASy6B,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASe,EAAyBptF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACjF,IAAIG,EAAU96B,EAAQpC,SAAS7yE,OAC3B+vG,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGtjB,GACxCo+C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGljB,GACxCg+C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAG/iB,GACxC69C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAG5iB,GACxC09C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGziB,GACxCu9C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGtiB,GACxCo9C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGniB,GACxCi9C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAGhiB,GACxC88C,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAG06B,GACxCI,EAAU,GACVp9B,GAAsBtvD,EAAM4xD,EAAS,EAAG26B,GA7BxCa,CAAyBptF,EAAM4xD,EAAStjB,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GA+BpF,SAASc,EAA0BrtF,EAAM4xD,EAASvxE,GAC9C,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAO1D,OAAQH,IAC/B8yE,GAAsBtvD,EAAM4xD,EAASp1E,EAAG6D,EAAO7D,IA9B/C6wG,CAA0BrtF,EAAM4xD,EAAStjB,IAGtC,EAkCX,SAASg/C,GAAoBttF,EAAM4xD,GAE/B,GADgBjE,GAAY3tD,EAAM4xD,EAAQzxD,WAC5B4jB,MACV,MAAM0oC,GAA4CoB,GAASY,mBAAmBzuD,EAAM4xD,EAAQzxD,WAAY,SAAWyxD,EAAQ+G,MAAM1qE,GAAK,aAAc,SAAW2jE,EAAQ+G,MAAM1qE,GAAK,SAAsD,IAA9B,EAAb+R,EAAK8W,QAG1M,SAASy3C,GAAYvuD,GACjB,KAAiB,IAAbA,EAAK8W,OAAT,CAMA,GAHAk1E,GAAwBhsF,EAAMyoF,GAAW8E,SACzC3B,GAAyB5rF,EAAMyoF,GAAW8E,SAC1CxzB,GAAgC/5D,EAAM,QAClCA,EAAKg3D,YACL,IAAK,IAAIx6E,EAAI,EAAGA,EAAIwjB,EAAKg3D,YAAYr6E,OAAQH,IACzCwjB,EAAKg3D,YAAYx6E,MAz5R7B,SAASgxG,EAAoBxtF,GACzB,GAAmB,GAAbA,EAAK8W,MAAX,CAGA,IAAIq/C,EAAiBlG,GAAsBjwD,GAC3C,GAAIm2D,EAAgB,CAChB,IAAIC,EAAiBD,EAAepqE,SAASsqE,gBACzCD,IACAzrE,GAAgByrE,EAAgBA,EAAelyE,QAAQ8b,IACvD6tD,GAASgB,mBAAmB7uD,MAm5RpCwtF,CAAoBxtF,GAChBA,EAAK1H,SAAS+2B,aAQtB,SAASo+D,EAAiBztF,GAEtB,IADA,IAAI+nC,EAAM/nC,EAAK9c,IAAIm/B,MAAM1lC,OAChBH,EAAI,EAAGA,EAAIurD,EAAKvrD,IAAK,CAC1B,IAAI0G,EAAM8c,EAAK9c,IAAIm/B,MAAM7lC,GACT,EAAZ0G,EAAIyE,MACJqY,EAAK1H,SAAS+2B,YAAYm+B,GAAcxtD,EAAMxjB,GAAG6zE,eAEhC,EAAZntE,EAAIyE,MACTqY,EAAK1H,SAAS+2B,YAAYk+B,GAAWvtD,EAAMxjB,GAAG8zE,aAE7B,SAAZptE,EAAIyE,OAAuD,UAAZzE,EAAIyE,QACxDgmE,GAAY3tD,EAAMxjB,GAAGm1C,WAlBzB87D,CAAiBztF,GAEjBuwD,GAAgBvwD,IAChBA,EAAK1H,SAASq5B,UAElB3xB,EAAK8W,OAAS,KA0BlB,SAAS80E,GAAyB5rF,EAAM6uB,GACpC,IAAI3rC,EAAM8c,EAAK9c,IACf,GAAsB,SAAhBA,EAAIqzE,UAGV,IAAK,IAAI/5E,EAAI,EAAGA,EAAI0G,EAAIm/B,MAAM1lC,OAAQH,IAAK,CACvC,IAAIo1E,EAAU1uE,EAAIm/B,MAAM7lC,GACJ,SAAhBo1E,EAAQjqE,MAER+lG,GAAelgC,GAAcxtD,EAAMxjB,GAAGiwC,cAAeoC,GAEQ,IAAlC,SAArB+iC,EAAQ4E,cAIdh6E,GAAKo1E,EAAQE,aAIzB,SAASk6B,GAAwBhsF,EAAM6uB,GACnC,IAAI3rC,EAAM8c,EAAK9c,IACf,GAAsB,SAAhBA,EAAIqzE,UAGV,IAAK,IAAI/5E,EAAI,EAAGA,EAAI0G,EAAIm/B,MAAM1lC,OAAQH,IAAK,CACvC,IAAIo1E,EAAU1uE,EAAIm/B,MAAM7lC,GACxB,GAAoB,SAAhBo1E,EAAQjqE,MAGR,IADA,IAAI6qE,EAAgBhF,GAAcxtD,EAAMxjB,GAAGi2E,cAAcC,eAChD5xC,EAAI,EAAGA,EAAI0xC,EAAc71E,OAAQmkC,IACtC4sE,GAAel7B,EAAc1xC,GAAI+N,QAGwB,IAAlC,SAArB+iC,EAAQ4E,cAIdh6E,GAAKo1E,EAAQE,aAIzB,SAAS47B,GAAe1tF,EAAM6uB,GAC1B,IAAI8+D,EAAY3tF,EAAK8W,MACrB,OAAQ+X,GACJ,KAAK45D,GAAWwD,eAC8B,IAAzB,IAAZ0B,KAC+C,KAA/B,GAAZA,GACDr/B,GAAmBtuD,GAEF,GAAZ2tF,GACLC,GAAyB5tF,EAAMyoF,GAAWoF,+BAGlD,MACJ,KAAKpF,GAAWoF,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACAr/B,GAAmBtuD,GAEF,GAAZ2tF,GACLC,GAAyB5tF,EAAM6uB,IAGvC,MACJ,KAAK45D,GAAWyD,eAC8B,IAAzB,IAAZyB,KAC+C,KAA/B,GAAZA,GACDt/B,GAAmBruD,GAEF,GAAZ2tF,GACLC,GAAyB5tF,EAAMyoF,GAAWqF,+BAGlD,MACJ,KAAKrF,GAAWqF,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACAt/B,GAAmBruD,GAEF,GAAZ2tF,GACLC,GAAyB5tF,EAAM6uB,IAGvC,MACJ,KAAK45D,GAAW8E,QAGZh/B,GAAYvuD,GACZ,MACJ,KAAKyoF,GAAWoD,gBACZP,GAAgBtrF,IAI5B,SAAS4tF,GAAyB5tF,EAAM6uB,GACpCm9D,GAAwBhsF,EAAM6uB,GAC9B+8D,GAAyB5rF,EAAM6uB,GAEnC,SAASi9D,GAAkB9rF,EAAM+tF,EAAYC,EAAwBC,GACjE,GAAMjuF,EAAK9c,IAAIqzE,UAAYw3B,GAAiB/tF,EAAK9c,IAAIqzE,UAAYy3B,EAIjE,IADA,IAAI/C,EAAYjrF,EAAK9c,IAAIm/B,MAAM1lC,OACtBH,EAAI,EAAGA,EAAIyuG,EAAWzuG,IAAK,CAChC,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GAC7B,GAAKo1E,EAAQjqE,MAAQomG,GAAgBn8B,EAAQjqE,MAAQqmG,EAEjD,OADAngC,GAASC,eAAe9tD,EAAM4xD,EAAQzxD,WAC9B8tF,GACJ,KAAK,EACDjE,GAAoBhqF,EAAM4xD,GAC1B,MACJ,KAAK,EACD07B,GAAoBttF,EAAM4xD,GAIhCA,EAAQ4E,WAAau3B,GAAiBn8B,EAAQ4E,WAAaw3B,IAG7DxxG,GAAKo1E,EAAQE;;;;;;;QA/HzB,SAAW22B,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,GAAa,KAoI/B,IAAIzU,IAAc,EAClB,SAASka,KACL,IAAIla,GAAJ,CAGAA,IAAc,EACd,IAAIma,EAAW1mF,KA0CnB,SAAS2mF,IACL,MAAO,CACHtgC,eAAgBugC,GAChBtgC,eAAgBugC,GAChBn4D,mBAAoBo4D,GACpBvgC,oBAAqBwgC,GACrBvgC,kBAAmBwgC,GACnBvgC,iBAAkBwgC,GAClBvgC,sBAAuBwgC,GACvBvgC,eAAgBwgC,GAChBvgC,mBAAoBwgC,GACpBvgC,mBAAoBwgC,GACpBvgC,YAAawgC,GACbtgC,mBAAoB,SAAUzuD,EAAMG,GAAa,OAAO,IAAI6uF,GAAchvF,EAAMG,IAChFuuD,YAAaugC,GACbtgC,iBAAkBugC,GAClBtgC,eAAgBugC,IA1DSf,GAmBjC,SAASgB,IACL,MAAO,CACHthC,eAAgB,aAChBC,eAAgBshC,GAChBl5D,mBAAoBA,GACpB63B,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBY,GAClBX,sBAAuBW,GACvBV,eAAgBU,GAChBT,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUzuD,EAAMG,GAAa,OAAO,IAAI6uF,GAAchvF,EAAMG,IAChFuuD,YAAa,SAAU1uD,EAAMG,EAAWm3C,EAAWyY,GAC/C,OAAO/vD,EAAK9c,IAAIwrE,YAAY1uD,EAAMG,EAAWm3C,EAAWyY,IAE5DpB,iBAAkB,SAAU3uD,EAAMiuF,GAAa,OAAOjuF,EAAK9c,IAAIyrE,iBAA+B,IAAds/B,EAAuCqB,GACnHC,GAAwBvvF,IAC5B4uD,eAAgB,SAAU5uD,EAAMiuF,GAAa,OAAOjuF,EAAK9c,IAAI0rE,eAA6B,IAAdq/B,EAAuCqB,GAC/GC,GAAwBvvF,KAvCqBovF,GACrDvhC,GAASC,eAAiBqgC,EAASrgC,eACnCD,GAASE,eAAiBogC,EAASpgC,eACnCF,GAAS13B,mBAAqBg4D,EAASh4D,mBACvC03B,GAASG,oBAAsBmgC,EAASngC,oBACxCH,GAASI,kBAAoBkgC,EAASlgC,kBACtCJ,GAASK,iBAAmBigC,EAASjgC,iBACrCL,GAASM,sBAAwBggC,EAAShgC,sBAC1CN,GAASO,eAAiB+/B,EAAS//B,eACnCP,GAASQ,mBAAqB8/B,EAAS9/B,mBACvCR,GAASS,mBAAqB6/B,EAAS7/B,mBACvCT,GAASU,YAAc4/B,EAAS5/B,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqB0/B,EAAS1/B,mBACvCZ,GAASa,YAAcy/B,EAASz/B,YAChCb,GAASc,iBAAmBw/B,EAASx/B,iBACrCd,GAASe,eAAiBu/B,EAASv/B,eACnCf,GAASgB,mBAAqBA,IA4ClC,SAASwgC,GAAmBG,EAAYp4D,EAAkBgtB,EAAoBlhE,EAAKs0C,EAAUvuC,GACzF,IAAIm9B,EAAkBoR,EAASnwC,SAASS,IAAI48D,IAC5C,OAAOqJ,GAAe0hC,GAAeD,EAAYh4D,EAAUpR,EAAiBgR,EAAkBgtB,GAAqBlhE,EAAK+F,GAE5H,SAASqlG,GAAoBkB,EAAYp4D,EAAkBgtB,EAAoBlhE,EAAKs0C,EAAUvuC,GAC1F,IAAIm9B,EAAkBoR,EAASnwC,SAASS,IAAI48D,IACxCsL,EAAOy/B,GAAeD,EAAYh4D,EAAU,IAAIk4D,GAAsBtpE,GAAkBgR,EAAkBgtB,GAC1GurC,EAAkBC,GAA6B1sG,GACnD,OAAO2sG,GAAqBC,GAAY3zG,OAAQ4xE,GAAgB,KAAM,CAACiC,EAAM2/B,EAAiB1mG,IAElG,SAASwmG,GAAeD,EAAYh4D,EAAUpR,EAAiBgR,EAAkBgtB,GAC7E,IAAIrsD,EAAYy/B,EAASnwC,SAASS,IAAIg9D,IAClC52B,EAAesJ,EAASnwC,SAASS,IAAIoe,IACrC5N,EAAW8tB,EAAgB5tB,eAAe,KAAM,MACpD,MAAO,CACHg/B,SAAUA,EACVnwC,SAAUmoG,EAAYp4D,iBAAkBA,EACxCuxD,eAAgBvkC,EAAoBrsD,UAAWA,EAAWquB,gBAAiBA,EAAiB9tB,SAAUA,EAAU41B,aAAcA,GAGtI,SAASqgE,GAAwBt0F,EAAYkxF,EAAWl2B,EAAShsE,GAC7D,IAAI0mG,EAAkBC,GAA6B36B,GACnD,OAAO46B,GAAqBC,GAAY3zG,OAAQg6C,GAAoB,KAAM,CAACl8B,EAAYkxF,EAAWwE,EAAiB1mG,IAEvH,SAASulG,GAAyBv0F,EAAY23D,EAASqD,EAASx8D,GAQ5D,OALIw8D,EAFwB86B,GAAiBjoG,IAAI8pE,EAAQp3D,QAAQ26D,kBAAkBr3B,SAASx8C,QAK9EsuG,GAA6B36B,GAEpC46B,GAAqBC,GAAY3zG,OAAQ6xE,GAAqB,KAAM,CAAC/zD,EAAY23D,EAASqD,EAASx8D,IAE9G,SAASg2F,GAAuBr3B,EAAY7/B,EAAgB8/B,EAAqBn0E,GAE7E,OAAO+qE,GAAkBmJ,EAAY7/B,EAAgB8/B,EAkFzD,SAAS24B,EAAiC9sG,GACtC,IAAIvD,EASJ,SAASswG,EAAiB/sG,GACtB,IAAIgtG,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkBtlG,KACX,CAAEolG,aAAcA,EAAcC,uBAAwBA,IAEjEjtG,EAAIP,UAAU6H,SAAQ,SAAUkjB,GAC5B,IAAI2iF,EAAWD,GAAkBtoG,IAAI4lB,EAAKpsB,OACxB,KAAbosB,EAAK/lB,OAA8C0oG,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,uBAGpEptG,EAAI2wE,QAAQrpE,SAAQ,SAAU5P,GAC1B21G,GAA2B/lG,SAAQ,SAAU6lG,EAAU/uG,GAC/CuB,EAAiBvB,GAAOgB,aAAe1H,IACvCs1G,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,0BAIjE,CAAEJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiB/sG,GAAsCitG,EAAyBxwG,EAAGwwG,uBAC5F,OAD+CxwG,EAAGuwG,cAgClD,SAASM,EAAuBttG,GAC5B,IAAK,IAAI1G,EAAI,EAAGA,EAAI0G,EAAIP,UAAUhG,OAAQH,IAAK,CAC3C,IAAIshD,EAAW56C,EAAIP,UAAUnG,GACzB2zG,IAIAryD,EAASn2C,OAAS,MAEtB,IAAI0oG,EAAWD,GAAkBtoG,IAAIg2C,EAASx8C,OAC1C+uG,IACAvyD,EAASn2C,OAA0B,KAAjBm2C,EAASn2C,MAA8C0oG,EAAS1oG,MAClFm2C,EAAS1B,KAAO60B,GAAao/B,EAASj0D,MACtC0B,EAASx/C,MAAQ+xG,EAAS/xG,OAGlC,GAAIiyG,GAA2BzlG,KAAO,EAAG,CACrC,IAAI2lG,EAAc,IAAIjxD,IAAIt8C,EAAI2wE,SAC9B08B,GAA2B/lG,SAAQ,SAAU6lG,EAAU/uG,GACnD,GAAImvG,EAAY/uD,IAAI7+C,EAAiBvB,GAAOgB,YAAa,CACrD,IAAIw7C,EAAW,CACXx8C,MAAOA,EACPqG,MAAO0oG,EAAS1oG,OAASwoG,EAAyB,KAA0B,GAC5E/zD,KAAM60B,GAAao/B,EAASj0D,MAC5B99C,MAAO+xG,EAAS/xG,MAChBsC,MAAOsC,EAAIP,UAAUhG,QAEzBuG,EAAIP,UAAUhE,KAAKm/C,GACnB56C,EAAIswE,eAAexE,GAAS1tE,IAAUw8C,OArDtD0yD,CADAttG,EAAMA,EAAIxI,SAAQ,WAAc,OAAOo0E,OAEhC5rE,GANIA,EAtFW8sG,CAAiC9sG,IAG3D,IA0KI4sG,GAQAY,GACAC,GACAC,GApLAR,GAAoB,IAAI9wD,IACxBixD,GAA6B,IAAIjxD,IACjCywD,GAAmB,IAAIzwD,IAC3B,SAASovD,GAAsB2B,GAE3B,IAAInoG,EADJkoG,GAAkBxvE,IAAIyvE,EAAS/uG,MAAO+uG,GAER,mBAAnBA,EAAS/uG,QAAyB4G,EAAgBrF,EAAiBwtG,EAAS/uG,SAC/C,mBAA7B4G,EAAc5F,YACrBiuG,GAA2B3vE,IAAIyvE,EAAS/uG,MAAO+uG,GAGvD,SAAS1B,GAA2BkC,EAAMC,GACtC,IAAIC,EAAcv/B,GAAkBiD,GAAkCq8B,IAClEnF,EAAcn6B,GAAkBu/B,EAAY1uE,MAAM,GAAG7nB,QAAQiyB,eACjEsjE,GAAiBnvE,IAAIiwE,EAAMlF,GAE/B,SAASiD,KACLwB,GAAkBr5D,QAClBw5D,GAA2Bx5D,QAC3Bg5D,GAAiBh5D,QAQrB,SAAS64D,GAA6B1sG,GAClC,GAA+B,IAA3BktG,GAAkBtlG,KAClB,OAAO5H,EAEX,IAAI8tG,EAWJ,SAASC,EAA2C/tG,GAGhD,IAFA,IAAIguG,EAAoC,GACpCC,EAAiB,KACZ30G,EAAI,EAAGA,EAAI0G,EAAIm/B,MAAM1lC,OAAQH,IAAK,CACvC,IAAIo1E,EAAU1uE,EAAIm/B,MAAM7lC,GACJ,EAAhBo1E,EAAQjqE,QACRwpG,EAAiBv/B,GAEjBu/B,GAAkC,KAAhBv/B,EAAQjqE,OAC1ByoG,GAAkB1uD,IAAIkwB,EAAQ9zB,SAASx8C,SACvC4vG,EAAkCvyG,KAAKwyG,EAAehxF,WACtDgxF,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2C/tG,GACxF,GAAsD,IAAlD8tG,EAAuCr0G,OACvC,OAAOuG,EAIXA,EAAMA,EAAIxI,SAAQ,WAAc,OAAOo0E,MACvC,IAAK,IAAItyE,EAAI,EAAGA,EAAIw0G,EAAuCr0G,OAAQH,IAC/D40G,EAAgCluG,EAAK8tG,EAAuCx0G,IAEhF,OAAO0G,EAiBP,SAASkuG,EAAgCn8B,EAASo8B,GAC9C,IAAK,IAAI70G,EAAI60G,EAAU,EAAG70G,EAAIy4E,EAAQ5yC,MAAM1lC,OAAQH,IAAK,CACrD,IAAIo1E,EAAUqD,EAAQ5yC,MAAM7lC,GAC5B,GAAoB,EAAhBo1E,EAAQjqE,MAER,OAEJ,GAAoB,KAAhBiqE,EAAQjqE,MAA2C,CACnD,IAAIm2C,EAAW8zB,EAAQ9zB,SACnBuyD,EAAWD,GAAkBtoG,IAAIg2C,EAASx8C,OAC1C+uG,IACAz+B,EAAQjqE,OAAyB,KAAhBiqE,EAAQjqE,MAA8C0oG,EAAS1oG,MAChFm2C,EAAS1B,KAAO60B,GAAao/B,EAASj0D,MACtC0B,EAASx/C,MAAQ+xG,EAAS/xG,UA4E9C,SAASgxG,GAAuBtvF,EAAMs4D,EAAY+zB,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAC5F,IAAI36B,EAAU5xD,EAAK9c,IAAIm/B,MAAMi2C,GAE7B,OADA8zB,GAAmBpsF,EAAM4xD,EAASy6B,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACxD,IAAhB36B,EAAQjqE,MACZ+lE,GAAqB1tD,EAAMs4D,GAAYh6E,WACvCiE,EAER,SAASgtG,GAAuBvvF,EAAMs4D,EAAY+zB,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GAC5F,IAAI36B,EAAU5xD,EAAK9c,IAAIm/B,MAAMi2C,GAE7B,OADA60B,GAAmBntF,EAAM4xD,EAASy6B,EAAU/9C,EAAII,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI08C,EAAIC,GACxD,IAAhB36B,EAAQjqE,MACZ+lE,GAAqB1tD,EAAMs4D,GAAYh6E,WACvCiE,EAER,SAASssG,GAAwB7uF,GAC7B,OAAO6vF,GAAqBC,GAAYj7D,cAAew5B,GAAoB,KAAM,CAACruD,IAEtF,SAAS8uF,GAAwB9uF,GAC7B,OAAO6vF,GAAqBC,GAAYh7D,eAAgBw5B,GAAoB,KAAM,CAACtuD,IAEvF,SAAS+uF,GAAiB/uF,GACtB,OAAO6vF,GAAqBC,GAAYn+D,QAAS48B,GAAa,KAAM,CAACvuD,IAazE,SAASquF,GAAoBruF,EAAMG,GAC/BwwF,GAAe3wF,EACf4wF,GAAoBzwF,EAExB,SAAS8uF,GAAiBjvF,EAAMG,EAAWm3C,EAAWyY,GAElD,OADAs+B,GAAoBruF,EAAMG,GACnB0vF,GAAqBC,GAAYphC,YAAa1uD,EAAK9c,IAAIwrE,YAAa,KAAM,CAAC1uD,EAAMG,EAAWm3C,EAAWyY,IAElH,SAASm/B,GAAsBlvF,EAAMiuF,GACjC,GAAiB,IAAbjuF,EAAK8W,MACL,MAAMk2C,GAAmB8iC,GAAYY,KAGzC,OADArC,GAAoBruF,EAAMsxF,GAAyBtxF,EAAM,IAClDA,EAAK9c,IAAIyrE,kBAChB,SAAS4iC,EAAuBvxF,EAAMG,EAAWksF,GAE7C,IADA,IAAIhsG,EAAS,GACJR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/B,IAAI+xE,EAAU5xD,EAAK9c,IAAIm/B,MAAMliB,GAU7B,OATkB,IAAd8tF,EACAuD,GAAwBxxF,EAAM4xD,EAASy6B,EAAUhsG,GAGjDoxG,GAAwBzxF,EAAM4xD,EAASy6B,EAAUhsG,GAEjC,MAAhBuxE,EAAQjqE,OACR0mG,GAAoBruF,EAAMsxF,GAAyBtxF,EAAMG,IAErC,IAAhByxD,EAAQjqE,MACZ+lE,GAAqB1tD,EAAM4xD,EAAQzxD,WAAW7hB,WAC9CiE,IAlBiDyd,GAqB7D,SAASmvF,GAAoBnvF,EAAMiuF,GAC/B,GAAiB,IAAbjuF,EAAK8W,MACL,MAAMk2C,GAAmB8iC,GAAYY,KAGzC,OADArC,GAAoBruF,EAAM0xF,GAA0B1xF,EAAM,IACnDA,EAAK9c,IAAI0rE,gBAChB,SAAS+iC,EAAuB3xF,EAAMG,EAAWksF,GAE7C,IADA,IAAIhsG,EAAS,GACJR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAE/B,IAAI+xE,EAAU5xD,EAAK9c,IAAIm/B,MAAMliB,GAU7B,OATkB,IAAd8tF,EACAuD,GAAwBxxF,EAAM4xD,EAASy6B,EAAUhsG,GAGjDoxG,GAAwBzxF,EAAM4xD,EAASy6B,EAAUhsG,GAEjC,EAAhBuxE,EAAQjqE,OACR0mG,GAAoBruF,EAAM0xF,GAA0B1xF,EAAMG,IAEtC,IAAhByxD,EAAQjqE,MACZ+lE,GAAqB1tD,EAAM4xD,EAAQzxD,WAAW7hB,WAC9CiE,IAlB+Cyd,GAqB3D,SAASwxF,GAAwBxxF,EAAM4xD,EAASy6B,EAAUuF,GAEtD,GADcxF,GAAmBvvG,WAAM,EAAQgC,EAAS,CAACmhB,EAAM4xD,EAASy6B,GAAWuF,IACtE,CACT,IAAIvxG,EAAsB,IAAbgsG,EAA+BuF,EAAY,GAAKA,EAC7D,GAAoB,MAAhBhgC,EAAQjqE,MAAmC,CAE3C,IADA,IAAIkqG,EAAgB,GACXr1G,EAAI,EAAGA,EAAIo1E,EAAQpC,SAAS7yE,OAAQH,IAAK,CAC9C,IAAIwiC,EAAU4yC,EAAQpC,SAAShzE,GAC3B8B,EAAQ+B,EAAO7D,GACC,EAAhBwiC,EAAQr3B,QACRkqG,GA/+yBe1yG,EA++yByB6/B,EAAQ86C,gBA5+yBzD,cAGX,SAASg4B,EAAoBvnG,GACzB,OAAOA,EAAMnB,QAAQonB,IAAmB,WAEpC,IADA,IAAItyB,EAAI,GACC2B,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpC3B,EAAE2B,GAAMnD,UAAUmD,GAEtB,MAAO,IAAM3B,EAAE,GAAGqf,iBAVfu0F,CAAoB3yG,EAAKiK,QAAQ,QAAS,QA8+yB7BqnB,GAA2BnyB,IAGvC,IAAIs3E,EAAQhE,EAAQ16D,OAChBuS,EAAK+jD,GAAcxtD,EAAM41D,EAAMz1D,WAAWkwD,cAC9C,GAAKuF,EAAMp7D,QAAQrb,KAMf,IAAK,IAAI61D,KAAQ68C,EAEA,OADTvzG,EAAQuzG,EAAc78C,IAEtBh1C,EAAK1H,SAASY,aAAauQ,EAAIurC,EAAM12D,GAGrC0hB,EAAK1H,SAASsR,gBAAgBH,EAAIurC,QAV1Ch1C,EAAK1H,SAASmE,SAASgN,EAAI,YAActgB,KAAKzF,UAAUmuG,EAAe,KAAM;;;;;;;;AAv/yB7F,IAAmC1yG,EAwgzBnC,SAASsyG,GAAwBzxF,EAAM4xD,EAASy6B,EAAUhsG,GACtD8sG,GAAmBtwG,WAAM,EAAQgC,EAAS,CAACmhB,EAAM4xD,EAASy6B,GAAWhsG,IAEzE,SAASixG,GAAyBtxF,EAAMG,GACpC,IAAK,IAAI3jB,EAAI2jB,EAAW3jB,EAAIwjB,EAAK9c,IAAIm/B,MAAM1lC,OAAQH,IAAK,CACpD,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GAC7B,GAAoB,MAAhBo1E,EAAQjqE,OAAqCiqE,EAAQpC,UAAYoC,EAAQpC,SAAS7yE,OAClF,OAAOH,EAGf,OAAO,KAEX,SAASk1G,GAA0B1xF,EAAMG,GACrC,IAAK,IAAI3jB,EAAI2jB,EAAW3jB,EAAIwjB,EAAK9c,IAAIm/B,MAAM1lC,OAAQH,IAAK,CACpD,IAAIo1E,EAAU5xD,EAAK9c,IAAIm/B,MAAM7lC,GAC7B,GAAqB,EAAhBo1E,EAAQjqE,OAAkCiqE,EAAQpC,UAAYoC,EAAQpC,SAAS7yE,OAChF,OAAOH,EAGf,OAAO,MA5HX,SAAWszG,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,GAAc,KAwHjC,IAAId,GAA+B,WAC/B,SAASA,EAAchvF,EAAMG,GACzB9kB,KAAK2kB,KAAOA,EACZ3kB,KAAK8kB,UAAYA,EACA,MAAbA,IACA9kB,KAAK8kB,UAAYA,EAAY,GAEjC9kB,KAAKu2E,QAAU5xD,EAAK9c,IAAIm/B,MAAMliB,GAG9B,IAFA,IAAIy1D,EAAQv6E,KAAKu2E,QACbmgC,EAAS/xF,EACN41D,GAAiD,IAAzB,EAAdA,EAAMjuE,QACnBiuE,EAAQA,EAAM1+D,OAElB,IAAK0+D,EACD,MAAQA,GAASm8B,GACbn8B,EAAQzF,GAAa4hC,GACrBA,EAASA,EAAO76F,OAGxB7b,KAAKu6E,MAAQA,EACbv6E,KAAK02G,OAASA,EA+GlB,OA7GAt2G,OAAO+B,eAAewxG,EAAc9yG,UAAW,eAAgB,CAC3D4L,IAAK,WAED,OAAO0lE,GAAcnyE,KAAK02G,OAAQ12G,KAAKu6E,MAAMz1D,WAAWssB,eAAiBpxC,KAAK2kB,MAElFke,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,WAAY,CACvD4L,IAAK,WAAc,OAAOqvE,GAAiB97E,KAAK02G,OAAQ12G,KAAKu6E,QAC7D13C,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,YAAa,CACxD4L,IAAK,WAAc,OAAOzM,KAAK22G,aAAaphF,WAC5CsN,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,UAAW,CACtD4L,IAAK,WAAc,OAAOzM,KAAK22G,aAAa/oG,SAC5Ci1B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,iBAAkB,CAC7D4L,IAAK,WACD,IAAIw4C,EAAS,GACb,GAAIjlD,KAAKu6E,MACL,IAAK,IAAIp5E,EAAInB,KAAKu6E,MAAMz1D,UAAY,EAAG3jB,GAAKnB,KAAKu6E,MAAMz1D,UAAY9kB,KAAKu6E,MAAM9D,WAAYt1E,IAAK,CAC3F,IAAIy1G,EAAW52G,KAAK02G,OAAO7uG,IAAIm/B,MAAM7lC,GAChB,MAAjBy1G,EAAStqG,OACT24C,EAAO3hD,KAAKszG,EAASn0D,SAASx8C,OAElC9E,GAAKy1G,EAASngC,WAGtB,OAAOxxB,GAEXpiB,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,aAAc,CACzD4L,IAAK,WACD,IAAIipE,EAAa,GACjB,GAAI11E,KAAKu6E,MAAO,CACZs8B,GAAkB72G,KAAK02G,OAAQ12G,KAAKu6E,MAAO7E,GAC3C,IAAK,IAAIv0E,EAAInB,KAAKu6E,MAAMz1D,UAAY,EAAG3jB,GAAKnB,KAAKu6E,MAAMz1D,UAAY9kB,KAAKu6E,MAAM9D,WAAYt1E,IAAK,CAC3F,IAAIy1G,EAAW52G,KAAK02G,OAAO7uG,IAAIm/B,MAAM7lC,GAChB,MAAjBy1G,EAAStqG,OACTuqG,GAAkB72G,KAAK02G,OAAQE,EAAUlhC,GAE7Cv0E,GAAKy1G,EAASngC,YAGtB,OAAOf,GAEX7yC,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,yBAA0B,CACrE4L,IAAK,WACD,IAAI+tE,EA6DhB,SAASs8B,EAAgBnyF,GACrB,KAAOA,IAASuwD,GAAgBvwD,IAC5BA,EAAOA,EAAK9I,OAEhB,OAAI8I,EAAK9I,OACEs2D,GAAcxtD,EAAK9I,OAAQi5D,GAAanwD,GAAMG,WAElD,KApEcgyF,CAAgB92G,KAAK22G,cAClC,OAAOn8B,EAASA,EAAOxF,mBAAgB9tE,GAE3C27B,YAAY,EACZC,cAAc,IAElB1iC,OAAO+B,eAAewxG,EAAc9yG,UAAW,aAAc,CACzD4L,IAAK,WACD,OAA4B,EAArBzM,KAAKu2E,QAAQjqE,MAA2ByoE,GAAW/0E,KAAK2kB,KAAM3kB,KAAKu2E,SACtExB,GAAW/0E,KAAK02G,OAAQ12G,KAAKu6E,QAErC13C,YAAY,EACZC,cAAc,IAElB6wE,EAAc9yG,UAAU6wE,SAAW,SAAU9mD,GAEzC,IADA,IAIImsF,EACAC,EALAhyG,EAAS,GACJR,EAAK,EAAGA,EAAKnD,UAAUC,OAAQkD,IACpCQ,EAAOR,EAAK,GAAKnD,UAAUmD,GAIN,EAArBxE,KAAKu2E,QAAQjqE,OACbyqG,EAAa/2G,KAAK2kB,KAAK9c,IACvBmvG,EAAeh3G,KAAKu2E,QAAQzxD,YAG5BiyF,EAAa/2G,KAAK02G,OAAO7uG,IACzBmvG,EAAeh3G,KAAKu6E,MAAMz1D,WAI9B,IAAImyF,EAAkBC,GAAmBH,EAAYC,GACjDG,GAAuB,EACvBC,EAAa,WACb,IAAI9yG,EAEJ,QADA6yG,IAC4BF,GAChB3yG,EAAKsmB,EAAQrnB,OAAOmB,KAAKlD,MAAM8C,EAAId,EAAS,CAAConB,GAAU5lB,IAGxDyuE,IAGfsjC,EAAW13G,QAAQ+3G,GACfD,EAAsBF,IACtBrsF,EAAQrnB,MAAM,qEACdqnB,EAAQrnB,MAAM/B,MAAMopB,EAASpnB,EAASwB,MAGvC2uG,EAnIuB,GAqIlC,SAASuD,GAAmBt9B,EAAS90D,GAEjC,IADA,IAAImyF,GAAmB,EACd91G,EAAI,EAAGA,GAAK2jB,EAAW3jB,IAER,EADNy4E,EAAQ5yC,MAAM7lC,GAChBmL,OACR2qG,IAGR,OAAOA,EAWX,SAASJ,GAAkBlyF,EAAM4xD,EAASb,GACtC,IAAK,IAAI2hC,KAAW9gC,EAAQb,WACxBA,EAAW2hC,GAAWnI,GAAcvqF,EAAM4xD,EAASA,EAAQb,WAAW2hC,IAG9E,SAAS7C,GAAqBhhE,EAAQpqC,EAAIzJ,EAAM4E,GAC5C,IAAI+yG,EAAYjC,GACZkC,EAAUjC,GACVkC,EAAejC,GACnB,IACIF,GAAiB7hE,EACjB,IAAI9J,EAAStgC,EAAG5H,MAAM7B,EAAM4E,GAI5B,OAHA+wG,GAAeiC,EACfhC,GAAoBiC,EACpBnC,GAAiBiC,EACV5tE,EAEX,MAAOtmC,GACH,GAv3UR,SAASq0G,EAAiBjmC,GACtB,QAAS/mD,GAAgB+mD,GAs3UjBimC,CAAiBr0G,KAAOkyG,GACxB,MAAMlyG,EAEV,MA54UR,SAASs0G,EAAsBlmC,EAAK5jE,GAOhC,OANM4jE,aAAe5qE,QAGjB4qE,EAAM,IAAI5qE,MAAM4qE,EAAI7oE,aAExB8oE,GAAiBD,EAAK5jE,GACf4jE,EAq4UGkmC,CAAsBt0G,EAAGu0G,OAGvC,SAASA,KACL,OAAOrC,GAAe,IAAI3B,GAAc2B,GAAcC,IAAqB,KAE/E,IAAIlB,GAAuC,WACvC,SAASA,EAAsBzV,GAC3B5+F,KAAK4+F,SAAWA,EAqBpB,OAnBAyV,EAAsBxzG,UAAUsc,eAAiB,SAAUgC,EAASy4F,GAChE,OAAO,IAAIC,GAAe73G,KAAK4+F,SAASzhF,eAAegC,EAASy4F,KAEpEvD,EAAsBxzG,UAAUqsC,MAAQ,WAChCltC,KAAK4+F,SAAS1xD,OACdltC,KAAK4+F,SAAS1xD,SAGtBmnE,EAAsBxzG,UAAU22B,IAAM,WAC9Bx3B,KAAK4+F,SAASpnE,KACdx3B,KAAK4+F,SAASpnE,OAGtB68E,EAAsBxzG,UAAUi3G,kBAAoB,WAChD,OAAI93G,KAAK4+F,SAASkZ,kBACP93G,KAAK4+F,SAASkZ,oBAElBztE,QAAQC,QAAQ,OAEpB+pE,EAvB+B,GAyBtCwD,GAAgC,WAChC,SAASA,EAAejZ,GACpB5+F,KAAK4+F,SAAWA,EAShB5+F,KAAK+3G,oBAAsBJ,GAC3B33G,KAAKyS,KAAOzS,KAAK4+F,SAASnsF,KAwI9B,OAtIAolG,EAAeh3G,UAAUuyE,mBAAqB,SAAUjK,GAAiB,OAAOnpE,KAAK+3G,oBAAoB5uC,IACzG0uC,EAAeh3G,UAAUmzC,YAAc,SAAU3hB,GAC7C,IAAI2wC,EAAY4oC,GAAev5E,IAxsEvC,SAAS2lF,EAAyB3lF,GAC9Bg6E,GAAuBn8C,OAAO79B,EAAKy2E,YAwsE/BkP,CAAyBh1C,GACrBA,aAAqB6lC,KACrB7lC,EAAUR,UAAUlhE,OAAS,GAE7BtB,KAAK4+F,SAAS5qD,aACdh0C,KAAK4+F,SAAS5qD,YAAY3hB,IAGlCwlF,EAAeh3G,UAAUy1C,QAAU,WAAct2C,KAAK4+F,SAAStoD,WAC/DuhE,EAAeh3G,UAAU+rB,cAAgB,SAAU9oB,EAAM4mC,GACrD,IAAItc,EAAKpuB,KAAK4+F,SAAShyE,cAAc9oB,EAAM4mC,GACvCutE,EAAWj4G,KAAKozE,mBAAmBhlD,GACvC,GAAI6pF,EAAU,CACV,IAAIC,EAAU,IAAInP,GAAuB36E,EAAI,KAAM6pF,GACnDC,EAAQp0G,KAAOA,EACf0oG,GAAe0L,GAEnB,OAAO9pF,GAEXypF,EAAeh3G,UAAUg8C,cAAgB,SAAU55C,GAC/C,IAAIqzD,EAAUt2D,KAAK4+F,SAAS/hD,cAAc55C,GACtCg1G,EAAWj4G,KAAKozE,mBAAmB9c,GAIvC,OAHI2hD,GACAzL,GAAe,IAAI3D,GAAoBvyC,EAAS,KAAM2hD,IAEnD3hD,GAEXuhD,EAAeh3G,UAAUyzC,WAAa,SAAUrxC,GAC5C,IAAIuK,EAAOxN,KAAK4+F,SAAStqD,WAAWrxC,GAChCg1G,EAAWj4G,KAAKozE,mBAAmB5lE,GAIvC,OAHIyqG,GACAzL,GAAe,IAAI3D,GAAoBr7F,EAAM,KAAMyqG,IAEhDzqG,GAEXqqG,EAAeh3G,UAAUgsB,YAAc,SAAUhR,EAAQ2tF,GACrD,IAAI0O,EAAUtM,GAAe/vF,GACzBs8F,EAAevM,GAAepC,GAC9B0O,GAAWC,GAAgBD,aAAmBnP,IAC9CmP,EAAQlP,SAASmP,GAErBn4G,KAAK4+F,SAAS/xE,YAAYhR,EAAQ2tF,IAEtCqO,EAAeh3G,UAAU81C,aAAe,SAAU96B,EAAQ2tF,EAAUD,GAChE,IAAI2O,EAAUtM,GAAe/vF,GACzBs8F,EAAevM,GAAepC,GAC9B4O,EAAaxM,GAAerC,GAC5B2O,GAAWC,GAAgBD,aAAmBnP,IAC9CmP,EAAQvhE,aAAayhE,EAAYD,GAErCn4G,KAAK4+F,SAASjoD,aAAa96B,EAAQ2tF,EAAUD,IAEjDsO,EAAeh3G,UAAUitB,YAAc,SAAUjS,EAAQw8F,GACrD,IAAIH,EAAUtM,GAAe/vF,GACzBs8F,EAAevM,GAAeyM,GAC9BH,GAAWC,GAAgBD,aAAmBnP,IAC9CmP,EAAQpqF,YAAYqqF,GAExBn4G,KAAK4+F,SAAS9wE,YAAYjS,EAAQw8F,IAEtCR,EAAeh3G,UAAU8tC,kBAAoB,SAAU2+D,EAAgBgL,GACnE,IAAIlqF,EAAKpuB,KAAK4+F,SAASjwD,kBAAkB2+D,EAAgBgL,GACrDL,EAAWN,KAIf,OAHIM,GACAzL,GAAe,IAAIzD,GAAuB36E,EAAI,KAAM6pF,IAEjD7pF,GAEXypF,EAAeh3G,UAAUgd,aAAe,SAAUuQ,EAAItqB,EAAMb,EAAOynC,GAC/D,IAAIwtE,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAE9BmP,EAAQ5pF,WADOoc,EAAYA,EAAY,IAAM5mC,EAAOA,GACrBb,GAEnCjD,KAAK4+F,SAAS/gF,aAAauQ,EAAItqB,EAAMb,EAAOynC,IAEhDmtE,EAAeh3G,UAAU0tB,gBAAkB,SAAUH,EAAItqB,EAAM4mC,GAC3D,IAAIwtE,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAE9BmP,EAAQ5pF,WADOoc,EAAYA,EAAY,IAAM5mC,EAAOA,GACrB,MAEnC9D,KAAK4+F,SAASrwE,gBAAgBH,EAAItqB,EAAM4mC,IAE5CmtE,EAAeh3G,UAAUi/B,SAAW,SAAU1R,EAAItqB,GAC9C,IAAIo0G,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAC9BmP,EAAQvwF,QAAQ7jB,IAAQ,GAE5B9D,KAAK4+F,SAAS9+D,SAAS1R,EAAItqB,IAE/B+zG,EAAeh3G,UAAUm/B,YAAc,SAAU5R,EAAItqB,GACjD,IAAIo0G,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAC9BmP,EAAQvwF,QAAQ7jB,IAAQ,GAE5B9D,KAAK4+F,SAAS5+D,YAAY5R,EAAItqB,IAElC+zG,EAAeh3G,UAAUw+B,SAAW,SAAUjR,EAAIoR,EAAOv8B,EAAOqJ,GAC5D,IAAI4rG,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAC9BmP,EAAQrlG,OAAO2sB,GAASv8B,GAE5BjD,KAAK4+F,SAASv/D,SAASjR,EAAIoR,EAAOv8B,EAAOqJ,IAE7CurG,EAAeh3G,UAAU4+B,YAAc,SAAUrR,EAAIoR,EAAOlzB,GACxD,IAAI4rG,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAC9BmP,EAAQrlG,OAAO2sB,GAAS,MAE5Bx/B,KAAK4+F,SAASn/D,YAAYrR,EAAIoR,EAAOlzB,IAEzCurG,EAAeh3G,UAAUmd,YAAc,SAAUoQ,EAAItqB,EAAMb,GACvD,IAAIi1G,EAAUtM,GAAex9E,GACzB8pF,GAAWA,aAAmBnP,KAC9BmP,EAAQzZ,WAAW36F,GAAQb,GAE/BjD,KAAK4+F,SAAS5gF,YAAYoQ,EAAItqB,EAAMb,IAExC40G,EAAeh3G,UAAUq8D,OAAS,SAAUv7D,EAAQs6D,EAAW9iB,GAC3D,GAAsB,iBAAXx3C,EAAqB,CAC5B,IAAIu2G,EAAUtM,GAAejqG,GACzBu2G,GACAA,EAAQ11C,UAAUl/D,KAAK,IAAIslG,GAAmB3sC,EAAW9iB,IAGjE,OAAOn5C,KAAK4+F,SAAS1hC,OAAOv7D,EAAQs6D,EAAW9iB,IAEnD0+D,EAAeh3G,UAAUkxB,WAAa,SAAUM,GAAQ,OAAOryB,KAAK4+F,SAAS7sE,WAAWM,IACxFwlF,EAAeh3G,UAAU+tB,YAAc,SAAUyD,GAAQ,OAAOryB,KAAK4+F,SAAShwE,YAAYyD,IAC1FwlF,EAAeh3G,UAAUugB,SAAW,SAAUiR,EAAMpvB,GAAS,OAAOjD,KAAK4+F,SAASx9E,SAASiR,EAAMpvB,IAC1F40G,EApJwB,GA2L/BU,GAAkC,SAAU/sF,GAE5C,SAAS+sF,EAAiBx8B,EAAYI,EAAsBq8B,GACxD,IAAIr+D,EAGJ3uB,EAAOjqB,KAAKvB,OAASA,KAIrB,OAHAm6C,EAAM4hC,WAAaA,EACnB5hC,EAAMgiC,qBAAuBA,EAC7BhiC,EAAMq+D,oBAAsBA,EACrBr+D,EAUX,OAnBAz5C,EAAU63G,EAAkB/sF,GAW5B+sF,EAAiB13G,UAAUC,OAAS,SAAUo7C,GAC1C22D,KAIA,IAAIhrG,EA7BZ,SAAS4wG,EAAwB5wG,GAC7B,IAAIP,EAAY/G,MAAMqrD,KAAK/jD,EAAIP,WAC3BkxE,EAAUj4E,MAAMqrD,KAAK/jD,EAAI2wE,SACzBL,EAAiB,GACrB,IAAK,IAAIv2E,KAAOiG,EAAIswE,eAChBA,EAAev2E,GAAOiG,EAAIswE,eAAev2E,GAE7C,MAAO,CACHvC,QAASwI,EAAIxI,QACb+U,MAAOvM,EAAIuM,MAAO9M,UAAWA,EAAWkxE,QAASA,EAASL,eAAgBA,GAoBhEsgC,CAAwBtiC,GAAkBn2E,KAAKw4G,sBACzD,OAAOhmC,GAASI,kBAAkB5yE,KAAK+7E,WAAY7/B,GAAkBiL,GAASC,KAAMpnD,KAAKm8E,qBAAsBt0E,IAE5G0wG,EApB0B,CAqBnC/pG;;;;;;;;;;;;;;;AA2EFlP,EAAQkvD,6BAA+BA,GACvClvD,EAAQs6F,uBAAyBA,GACjCt6F,EAAQ65F,OAASA,GACjB75F,EAAQk5F,gBAAkBA,GAC1Bl5F,EAAQm5F,sBAAwBA,GAChCn5F,EAAQ+tG,kBAAoBA,GAC5B/tG,EAAQimG,eAAiBA,GACzBjmG,EAAQmH,UAAYA,EACpBnH,EAAQi8F,iBAAmBA,GAC3Bj8F,EAAQo5G,uBAnh2BqB,CACzB50G,KAAM,mBAmh2BVxE,EAAQ69C,kBAAoBA,GAC5B79C,EAAQy7F,SAAWA,GACnBz7F,EAAQk8F,gBAAkBA,GAC1Bl8F,EAAQk4F,UAAYA,GACpBl4F,EAAQ8oE,iBAAmBA,GAC3B9oE,EAAQmpE,yBAA2BA,GACnCnpE,EAAQ6oE,aAAeA,GACvB7oE,EAAQsvD,aAAeA,GACvBtvD,EAAQmvD,gBAAkBA,GAC1BnvD,EAAQotG,aAAeA,GACvBptG,EAAQspG,mBAAqBA,GAC7BtpG,EAAQmtG,UAAYA,GACpBntG,EAAQ4qE,sBAAwBA,GAChC5qE,EAAQs2F,UAAYA,GACpBt2F,EAAQ4pE,WAAaA,GACrB5pE,EAAQqpG,gBAAkBA,GAC1BrpG,EAAQurB,aAAeA,GACvBvrB,EAAQqtF,aAAeA,GACvBrtF,EAAQgH,KAAOA,EACfhH,EAAQw4F,YAAcA,GACtBx4F,EAAQ04F,aAAeA,GACvB14F,EAAQ6L,SAAWA,GACnB7L,EAAQ4G,OAASA,EACjB5G,EAAQ4jD,WAAaA,GACrB5jD,EAAQ2L,eAAiBA,GACzB3L,EAAQ6nD,SAAWA,GACnB7nD,EAAQq4F,MAAQA,GAChBr4F,EAAQ+wE,gBAAkBA,GAC1B/wE,EAAQqxE,gBAAkBA,GAC1BrxE,EAAQspF,UAAYmR,GACpBz6F,EAAQ66F,6BAA+BA,GACvC76F,EAAQq5G,iBA3i2Be,CACnB70G,KAAM,oBA2i2BVxE,EAAQ84F,SAAWA,GACnB94F,EAAQkP,gBAAkBA,GAC1BlP,EAAQgoG,sBAAwBA,GAChChoG,EAAQiP,YAAcA,GACtBjP,EAAQikG,aAAeA,GACvBjkG,EAAQu9F,OAASA,GACjBv9F,EAAQ6G,SAAWA,EACnB7G,EAAQu4F,OAASA,GACjBv4F,EAAQu6F,iBAAmBA,GAC3Bv6F,EAAQq6F,YAAcA,GACtBr6F,EAAQo6F,qBAAuBA,GAC/Bp6F,EAAQg4F,KAAOA,GACfh4F,EAAQmkG,YAAcA,GACtBnkG,EAAQ0sD,MAAQA,GAChB1sD,EAAQmuF,UAAYA,GACpBnuF,EAAQ4sD,mBAAqBA,GAC7B5sD,EAAQkqD,cAAgBA,GACxBlqD,EAAQiqE,UAAYA,GACpBjqE,EAAQ+pE,iBAAmBA,GAC3B/pE,EAAQqrD,0BAA4BA,GACpCrrD,EAAQmqE,UAAYA,GACpBnqE,EAAQ8G,KAAOA,EACf9G,EAAQqmE,aAAeA,GACvBrmE,EAAQ+G,SAAWA,EACnB/G,EAAQwoG,uBAAyBA,GACjCxoG,EAAQooG,6BAA+BA,GACvCpoG,EAAQ06F,aAAeA,GACvB16F,EAAQ26F,oBAAsBA,GAC9B36F,EAAQ0xE,YAAcA,GACtB1xE,EAAQohG,YAAcA,GACtBphG,EAAQ+iG,oBAAsBA,GAC9B/iG,EAAQg+C,KAAOA,GACfh+C,EAAQoqE,QAAUA,GAClBpqE,EAAQgqE,QAAUA,GAClBhqE,EAAQwvD,UAAYA,GACpBxvD,EAAQuvD,aAAeA,GACvBvvD,EAAQ4xE,iBAAmBA,GAC3B5xE,EAAQk5C,QAAUkwD,GAClBppG,EAAQsyD,aAAeA,GACvBtyD,EAAQs5G,iBAtkGR,SAASA,GAAiBC,GACtB,OAAOA,EAAStwG,KAAI,SAAU6lB,GAAM,OAAOA,EAAG+6C,kBAskGlD7pE,EAAQ2kG,eAAiBA,GACzB3kG,EAAQkkG,eAAiBA,GACzBlkG,EAAQqkG,sBAAwBA,GAChCrkG,EAAQ6H,iBAAmBA,EAC3B7H,EAAQw5G,gBAh9HR,SAASA,KACDtY,KAAcA,GAAU53D,WACxB43D,GAAUlqD,WA+8HlBh3C,EAAQy5G,eAz61BR,SAASA,KACL,GAAI5sF,GACA,MAAM,IAAIvlB,MAAM,iDAEpBslB,IAAW,GAs61Bf5sB,EAAQ0J,WAAaA,EACrB1J,EAAQyjE,aAAe6oC,GACvBtsG,EAAQmoG,iBAAmBA,GAC3BnoG,EAAQykG,YAAcA,GACtBzkG,EAAQqN,OAASA,GACjBrN,EAAQ8sB,UAAYA,GACpB9sB,EAAQqtG,aAAeA,GACvBrtG,EAAQ4J,kBAAoBA,EAC5B5J,EAAQ05G,qBAjmIR,SAASA,GAAqBl5D,GAC1ByiD,GAAqBziD,GAimIzBxgD,EAAQi9F,eAAiBA,GACzBj9F,EAAQo9F,gBAAkBA,GAC1Bp9F,EAAQk9F,SAAWA,GACnBl9F,EAAQm9F,kBAAoBA,GAC5Bn9F,EAAQ0G,GAAKA,EACb1G,EAAQiH,GAAKA,EACbjH,EAAQ25G,0BAA4B3V,GACpChkG,EAAQ45G,wBAA0B5f,GAClCh6F,EAAQ65G,iCAAmCzwC,GAC3CppE,EAAQ85G,wDAh5JqD,SAAUr9B,GACnE,OAAO1xC,QAAQC,QAAQswD,GAAsD7e,KAg5JjFz8E,EAAQ+5G,uDAAyDze,GACjEt7F,EAAQg6G,wCAp6JqC,SAAUv9B,GACnD,OAAO1xC,QAAQC,QAAQmwD,GAAsC1e,KAo6JjEz8E,EAAQi6G,uCAAyC9e,GACjDn7F,EAAQk6G,kBAAoBpxC,GAC5B9oE,EAAQm6G,SAAW3f,GACnBx6F,EAAQo6G,mBAAqB34B,GAC7BzhF,EAAQq6G,aA5zUY,GA6zUpBr6G,EAAQs6G,WA5zUQ,GA6zUhBt6G,EAAQu6G,0BA/slBR,SAASC,GAAyBxyG,EAAWuU,EAAQ/X,GACjD,OAAO8/C,GAAe,CAAE9/C,KAAMA,GAAQ+X,EAAQvU,EAAWxD,IA+slB7DxE,EAAQy6G,gBAAkBz2D,GAC1BhkD,EAAQ06G,uBAAyBn2C,GACjCvkE,EAAQ26G,aAAe9vG,GACvB7K,EAAQ46G,YAAc7vG,GACtB/K,EAAQ66G,eAAiBpvG,GACzBzL,EAAQ86G,YAAcryG,EACtBzI,EAAQ+6G,YAAc5vG,GACtBnL,EAAQg7G,aAAe/vG,GACvBjL,EAAQi7G,aAAe5yG,EACvBrI,EAAQk7G,uCAAyCx8B,GACjD1+E,EAAQm7G,WAAa96F,GACrBrgB,EAAQo7G,iBAAmB/vB,GAC3BrrF,EAAQq7G,YAAcla,GACtBnhG,EAAQs7G,wBAA0Bh9D,GAClCt+C,EAAQu7G,yBAA2B/7B,GACnCx/E,EAAQw7G,qBAAuBn7B,GAC/BrgF,EAAQy7G,oBAAsBxwB,GAC9BjrF,EAAQ07G,+CAAiD39D,GACzD/9C,EAAQ27G,qCAAuChjB,GAC/C34F,EAAQ47G,qCAAuChjB,GAC/C54F,EAAQ67G,sCAz2mBR,SAASC,GAAkB3zG,EAAMs6C,GAC7B,IAAI55C,EAAkB,KAClBstF,EAAe,KAEdhuF,EAAKhH,eAAekH,IACrBvH,OAAO+B,eAAesF,EAAME,EAAa,CACrC8E,IAAK,WAID,OAHwB,OAApBtE,IACAA,EAAkB4B,IAAoBqxG,kBAAkBjtG,GAAkB,SAAW1G,EAAK3D,KAAO,YAAkBg+C,GAAsBr6C,EAAMs6C,KAE5I55C,KAKdV,EAAKhH,eAAeoK,KACrBzK,OAAO+B,eAAesF,EAAMoD,GAAgB,CACxC4B,IAAK,WACD,GAAqB,OAAjBgpF,EAAuB,CACvB,IAAI/yF,EAAWo/C,GAAsBr6C,EAAMs6C,GACvCf,EAAWj3C,IACf0rF,EAAez0C,EAAS00C,eAAevnF,GAAkB,SAAW1G,EAAK3D,KAAO,WAAiB,CAC7FA,KAAMpB,EAASoB,KACf2D,KAAM/E,EAAS+E,KACfw6C,kBAAmBv/C,EAASu/C,kBAC5BlB,KAAMF,GAAoBp5C,GAC1BkuF,SAAU,SACVh0F,OAAQq/C,EAAS13C,gBAAgBguF,OAGzC,OAAO7B,GAGX3yD,cAAc,KAy0mB1BxjC,EAAQ+7G,oCAAsC/iB,GAC9Ch5F,EAAQg8G,gCAAkCnjB,GAC1C74F,EAAQi8G,uCApmoBR,SAASC,GAAiBlhE,GACtB,OAAOD,GAAiBC,EAAiB7gC,KAA4BjB,OAomoBzElZ,EAAQm8G,gCAp+J4B,EAq+JpCn8G,EAAQo8G,qCAvynBR,SAASC,KAGL,IAAIljG,EAAQD,KAERojG,EAAc/2F,GADNpL,KACqClU,MAAOkT,GACxD,OAhBJ,SAASojG,EAAqBl3F,GAC1B,IAAI1H,EAAW0H,EAAK9O,IACpB,GAAImH,GAAqBC,GACrB,OAAOA,EAGP,MAAM,IAAIrW,MAAM,gEAUbi1G,CAAqBllG,GAAQilG,GAAeA,EAAcnjG,IAkynBrEnZ,EAAQw8G,wCAxkoBR,SAASC,GAAkBthE,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiB7gC,KAA4BjB,OAwkoB5FlZ,EAAQ08G,8CAhhoBR,SAASC,GAAuB/gE,EAAuBZ,GAEnD,OAAOW,GAAmBC,EAAuBZ,EAD7B7gC,KAC6DjB,OA+goBrFlZ,EAAQ48G,eAAiBtpF,GACzBtzB,EAAQ68G,gBAAkB1oF,GAC1Bn0B,EAAQ88G,cAAgBrtF,GACxBzvB,EAAQ+8G,iCAAmCtwF,GAC3CzsB,EAAQg9G,KAv8ER,SAASxM,GAAUxjG,EAAOipE,EAAmBoB,EAAgBF,EAAYpD,EAAakpC,GAClFjwG,GAAS,EACT,IAAIhI,EAAKgxE,GAAuBC,GAEhC,MAAO,CAEHzwD,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEd7wE,MAAOA,EACP2wE,YAAa,EACb9B,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EAAG7H,eAdyClxE,EAAGkxE,eAcZC,gBAd0EnxE,EAAGmxE,gBAc3CC,WAdOpxE,EAAGoxE,WAcciB,eAAgBA,EAAgBF,WAAYA,EAC9JtC,SAAU,GACV+C,aAAc,EACdlmE,QAAS,GACTmO,QAAS,CACLouF,GAAI,KACJzpG,KAAM,KACN0Z,MAAO,KAAM9M,SApBN6rG,EAAkBpmC,GAAkBomC,GAAmB,KAqB9DziC,kBAAmB,KACnB1oC,cAAe,KACf4kC,sBAAuB,KACvBqI,gBAAiB,KACjBD,aAAc,KACd/K,YAAaA,GAAeI,IAEhChxB,SAAU,KACVj1C,KAAM,KACN8vE,MAAO,KACPtG,UAAW,OAs6EnB13E,EAAQk9G,8BAAgCrzG,EACxC7J,EAAQm9G,8BAAgCpwG,GACxC/M,EAAQo9G,+BAAiCnqC,GACzCjzE,EAAQq9G,+BAAiC19B,GACzC3/E,EAAQs9G,+BAAiCn1F,GACzCnoB,EAAQu9G,+BAAiChlG,GACzCvY,EAAQw9G,+BAAiCtkG,GACzClZ,EAAQy9G,+BAAiCtjG,GACzCna,EAAQ09G,+BAAiCjhG,GACzCzc,EAAQ29G,+BAAiCnoF,GACzCx1B,EAAQ49G,+BAAiCh4G,EACzC5F,EAAQ69G,+BAAiC13G,EACzCnG,EAAQ89G,+BAAiC12G,EACzCpH,EAAQ+9G,+BAAiCvtG,GACzCxQ,EAAQg+G,+BAAiC53F,GACzCpmB,EAAQi+G,8BAAgCrwG,GACxC5N,EAAQk+G,8BAAgClxD,GACxChtD,EAAQm+G,8BAAgCrzD,GACxC9qD,EAAQo+G,8BAAgCpyD,GACxChsD,EAAQq+G,8BAAgCvkB,GACxC95F,EAAQs+G,8BAAgCvjE,GACxC/6C,EAAQu+G,8BAAgCrjE,GACxCl7C,EAAQw+G,8BAAgCvW,GACxCjoG,EAAQy+G,8BAAgClV,GACxCvpG,EAAQ0+G,8BAAgCjV,GACxCzpG,EAAQ2+G,8BAAgCl0C,GACxCzqE,EAAQ4+G,8BAAgC/uC,GACxC7vE,EAAQ6+G,8BAAgCvR,GACxCttG,EAAQ8+G,8BAAgCvR,GACxCvtG,EAAQ++G,8BAAgCvR,GACxCxtG,EAAQg/G,8BAAgCrR,GACxC3tG,EAAQi/G,8BAAgCrR,GACxC5tG,EAAQk/G,8BAAgCriB,GACxC78F,EAAQm/G,8BAAgChjB,GACxCn8F,EAAQo/G,8BAAgC/iB,GACxCr8F,EAAQq/G,8BAAgC/iB,GACxCt8F,EAAQs/G,8BAAgC9iB,GACxCx8F,EAAQu/G,8BAAgC5iB,GACxC38F,EAAQw/G,8BAAgC5mC,GACxC54E,EAAQy/G,6BAvm2BR,SAASC,GAA4BC,GACjC,OAAO,IAAI1zF,GAAa0zF,IAum2B5B3/G,EAAQ4/G,oCAxj2BR,SAASC,GAAmCC,GACxC,OAAO,IAAIvzF,GAAoBuzF,IAwj2BnC9/G,EAAQ+/G,+BAjl2BR,SAASC,GAA8BC,GACnC,OAAO,IAAI5zF,GAAe4zF,IAil2B9BjgH,EAAQkgH,8BA9l2BR,SAASC,GAA6BC,GAClC,OAAO,IAAIh0F,GAAcg0F,IA8l2B7BpgH,EAAQqgH,4BAvk2BR,SAASC,GAA2BC,GAChC,OAAO,IAAIj0F,GAAYi0F,IAuk2B3BvgH,EAAQwgH,KAtkUR,SAASC,GAAuBzmF,EAAUuvC,EAAewQ,EAAgBtoE,EAAQC,EAASJ,GACtF,OAAO,IAAI0oE,GAAkBhgD,EAAUuvC,EAAewQ,EAAgBtoE,EAAQC,EAASJ,IAskU3FtR,EAAQ0gH,gBAvTR,SAASjtC,KAEL,OADA8/B,KACOrgC,GAASO,kBAsTpBzzE,EAAQ2gH,0CAA4C9vD,GACpD7wD,EAAQ4gH,KAnTR,SAASC,GAAsBx6D,EAAcq2B,EAAqBokC,GAC9D,OAAO,IAAI7H,GAAiB5yD,EAAcq2B,EAAqBokC,IAmTnE9gH,EAAQ+gH,kBAAoB9rB,GAC5Bj1F,EAAQghH,kBAAoBlrB,GAC5B91F,EAAQihH,iBAAmBxtB,GAC3BzzF,EAAQkhH,qBAAuBxtB,GAC/B1zF,EAAQmhH,mCAvrIR,SAASC,GAAkC10G,EAAU3E,EAAS00E,GAE1D,IAAIuoB,EAAgB,IAAI3Z,GAAkB5O,GAC1C,GAzvaJ,SAAS4kC,IACL,OAAiD,IAA1CnxD,GAAiC//C,KAwvapCkxG,GACA,OAAOt2E,QAAQC,QAAQg6D,GAE3B,IACIsc,EA2nBR,SAASC,EAAahzG,GAClB,IAAI67B,EAAS,GAEb,OADA77B,EAAMsB,SAAQ,SAAU2xG,GAAQ,OAAOA,GAAQp3E,EAAOpmC,KAAK9B,MAAMkoC,EAAQlmC,EAASs9G,OAC3Ep3E,EA9nBiBm3E,CADF70G,EAASS,IAAI8uF,GAAkB,IAAI93F,OAAO4D,GACXkB,KAAI,SAAU3F,GAAK,OAAOA,EAAE0E,cAKjF,GAAiC,IAA7Bs5G,EAAkBt/G,OAClB,OAAO+oC,QAAQC,QAAQg6D,GAE3B,IAAItjD,EAAWj3C,IAEXg3G,EADmB55D,GAASrmD,OAAO,CAAEwG,UAAWs5G,IACdn0G,IAAIu0C,EAASggE,gBAGnD,OAAOjyD,IAA0B,SAAU//B,GAAO,OAAOqb,QAAQC,QAAQy2E,EAAet0G,IAAIuiB,OACvFsgC,MAAK,WAAc,OAAOg1C,MAmqInChlG,EAAQ2hH,aAAe9pB,GACvB73F,EAAQ4hH,gBAAkBt9D,GAC1BtkD,EAAQ6hH,KAzuVR,SAASC,GAAoBp8G,GACzB,MAAO,CACH4N,GANyB,cAOzBC,OAAQ7N,EAAO6N,OACfH,cAAe1N,EAAO0N,cACtBD,KAAMzN,EAAOyN,OAquVrBnT,EAAQ+hH,wBAA0BvwC,GAClCxxE,EAAQgiH,wBAA0BvwC,GAClCzxE,EAAQiiH,eAjlhBR,SAAS/nE,GAAcjkB,GAEnB+c,GADW/b,GAA2BhB,GACVA,IAglhBhCj2B,EAAQkiH,cAAgBtwD,GACxB5xD,EAAQmiH,KA7sTR,SAASvqF,GAAa+lD,EAAY3wE,EAAOkpE,EAAgBiB,EAAY1xE,EAAMg8C,EAAMh9C,EAAOiN,GACpF,IAAImjE,EAAW,GACf,GAAIpwE,EACA,IAAK,IAAIif,KAAQjf,EAAO,CACpB,IAAIO,EAAKnB,EAAOY,EAAMif,GAAO,GAC7BmxD,EADgD7vE,EAAG,IAC1B,CACrBgI,MAAO,EACPxI,KAAMkf,EAAMy7D,gBAHyDn6E,EAAG,GAIxEipG,GAAI,KACJU,gBAAiB,KACjB/6C,OAAQ,MAIpB,IAAIwuD,EAAa,GACjB,GAAI1wG,EACA,IAAK,IAAI/L,KAAY+L,EACjB0wG,EAAWp+G,KAAK,CAAEmE,KAAM,EAAyBxC,SAAUA,EAAUtD,OAAQ,KAAMs6D,UAAWjrD,EAAQ/L,KAI9G,OAAOizE,GAAK+E,EADZ3wE,GAAS,MACsBkpE,EAAgBiB,EAAY1xE,EAAMA,EAAMg8C,EAAMozB,EAAUutC,IAyrT3FpiH,EAAQqiH,KAh+ER,SAAS/S,GAAW3xB,EAAY3wE,EAAOipE,EAAmBoB,EAAgBF,EAAYmrC,EAAkBC,EAAY1tC,EAAUnjE,EAASqiE,EAAajiC,EAAe4kC,GAC/J,IAAI1xE,OACe,IAAfu9G,IAAyBA,EAAa,IACrCxuC,IACDA,EAAcI,IAElB,IAAI/jD,EAAK4lD,GAAuBC,GAAoBC,EAAiB9lD,EAAG8lD,eAAgBE,EAAahmD,EAAGgmD,WAAYD,EAAkB/lD,EAAG+lD,gBACrI83B,EAAK,KACLzpG,EAAO,KACP89G,IACkDrU,GAAlDjpG,EAAKnB,EAAOo0E,GAAeqqC,GAAmB,IAAY,GAAI99G,EAAOQ,EAAG,IAE5E6vE,EAAWA,GAAY,GAEvB,IADA,IAAI2tC,EAAc,GACT3gH,EAAI,EAAGA,EAAIgzE,EAAS7yE,OAAQH,IAAK,CACtC,IAAIwuB,EAAKxsB,EAAOgxE,EAAShzE,GAAI,GAAI+1E,EAAevnD,EAAG,GAAgCoyF,EAA0BpyF,EAAG,GAC5Gu3E,EAAK/jG,EAAOo0E,GAD4D5nD,EAAG,IAC3B,GAAIqyF,EAAO9a,EAAG,GAAIvkC,EAASukC,EAAG,GAC9E+G,OAAkB/mG,EAClBgsD,OAAShsD,EACb,OAAuB,GAAfgwE,GACJ,KAAK,EACDhkB,EAAS6uD,EACT,MACJ,KAAK,EACL,KAAK,EACD9T,EAAkB8T,EAG1BD,EAAY3gH,GACR,CAAEmL,MAAO4qE,EAAcq2B,GAAIyU,EAAMl+G,KAAM6+D,EAAQ8b,gBAAiB9b,EAAQsrC,gBAAiBA,EAAiB/6C,OAAQA,GAE1HliD,EAAUA,GAAW,GACrB,IAAI0wG,EAAa,GACjB,IAASvgH,EAAI,EAAGA,EAAI6P,EAAQ1P,OAAQH,IAAK,CACrC,IAAIgmG,EAAKhkG,EAAO6N,EAAQ7P,GAAI,GAC5BugH,EAAWvgH,GAAK,CACZsG,KAAM,EACN9F,OAHqCwlG,EAAG,GAGxBlrC,UAHwCkrC,EAAG,GAI3DliG,SAAU,MAIlB,IAAIuY,GADJqkG,EAAaA,GAAc,IACJt5G,KAAI,SAAUjE,GACjC,IAAIorB,EAAKvsB,EAAOmB,EAAI,GAA8BrB,EAAQysB,EAAG,GACzDC,EAAKxsB,EAAOo0E,GAD2B7nD,EAAG,IACI,GAClD,MAAO,CADoDC,EAAG,GAAWA,EAAG,GAC1D1sB,MAOtB,OALA+yE,EArzQJ,SAASisC,EAAqBx6G,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAKmL,GAAmC,CAEhD,IAAIsvG,EAAmC,MAAtBz6G,EAAKiL,eAAyBjL,EAAKiL,gBAAkBpT,EAAQ4O,kBAAkBi0G,MAC5F16G,EAAKoL,OAAOvR,QAAUlB,OAAO2iB,KAAKtb,EAAKgL,MAAMnR,OAE7CmG,EAAKmL,GADLsvG,EACU,IAAMtuC,KAlBC,UA2BzB,OAHInsE,GAxBqB,YAwBbA,EAAKmL,KACbnL,EAAO,MAEJA,GAAQ,KAsyQSw6G,CAAqBjsC,GACzC5kC,IACA9kC,GAAS,UAGN,CAEHwY,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEdF,WAAYA,EACZ3wE,MAVJA,GAAS,EAWL6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EAAG7H,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EAAYiB,eAAgBA,EAAgBF,WAAYA,EAC9JtC,SAAU2tC,EACV5qC,aAAcM,GAAiBsqC,GAC/B9wG,QAAS0wG,EACTviG,QAAS,CACLouF,GAAIA,EACJzpG,KAAMA,EACN0Z,MAAOA,EACP9M,SAAU,KAEVopE,kBAAmB,KACnB1oC,cAAeA,GAAiB,KAChC4kC,sBAAuBA,EACvBqI,gBAAiB,KACjBD,aAAc,KACd/K,YAAaA,GAAeI,IAEhChxB,SAAU,KACVj1C,KAAM,KACN8vE,MAAO,KACPtG,UAAW,OA64EnB13E,EAAQ8iH,gBAAkBhiC,GAC1B9gF,EAAQ+iH,yCAA2C3vB,GACnDpzF,EAAQgjH,mCAAqClpC,GAC7C95E,EAAQijH,yBAA2BtX,GACnC3rG,EAAQkjH,eAAiBvgD,GACzB3iE,EAAQmjH,gBAAkBtgD,GAC1B7iE,EAAQojH,kBAAoBl7G,EAC5BlI,EAAQqjH,aAAettF,GACvB/1B,EAAQsjH,qBAAuBliC,GAC/BphF,EAAQujH,6BAzhHR,SAASC,GAA4BlwG,GACjC,IAAInL,EAAO4iF,GAA0Bz3E,GACrC,IAAKnL,EACD,MAAM+/F,GAAc50F,GACxB,OAAO,IAAI+3E,GAAkBljF,IAshHjCnI,EAAQyjH,2BAA6B92F,GACrC3sB,EAAQ0jH,QAAUl5G,EAClBxK,EAAQ2jH,sBAAwBpQ,GAChCvzG,EAAQ4jH,mBAh9UR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAK5rC,GAAkB6rC,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EACR,KAAK,EACD,OAAON,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EAAKpsC,GAAkBqsC,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EAAKpsC,GAAkBqsC,GAAMC,EAAKtsC,GAAkBusC,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EAAKpsC,GAAkBqsC,GAAMC,EAAKtsC,GAAkBusC,GACjFC,EAAKxsC,GAAkBysC,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EAAKpsC,GAAkBqsC,GAAMC,EAAKtsC,GAAkBusC,GACjFC,EAAKxsC,GAAkBysC,GAAMC,EAAK1sC,GAAkB2sC,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAK5rC,GAAkB6rC,GAAMC,EAAK9rC,GAAkB+rC,GAAMC,EAAKhsC,GAAkBisC,GACpFC,EAAKlsC,GAAkBmsC,GAAMC,EAAKpsC,GAAkBqsC,GAAMC,EAAKtsC,GAAkBusC,GACjFC,EAAKxsC,GAAkBysC,GAAMC,EAAK1sC,GAAkB2sC,GAAMC,EAAK5sC,GAAkB6sC,GAAMC,EAC/F,QACI,MAAM,IAAI39G,MAAM,8CAk7U5BtH,EAAQklH,aAx9UR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAIh7E,EAAS,GACJvoC,EAAI,EAAGA,EAAiB,EAAbiiH,EAAgBjiH,GAAQ,EACxCuoC,EAASA,EAASg7E,EAAevjH,GAAKs2E,GAAkBitC,EAAevjH,EAAI,IAE/E,OAAOuoC,EAASg7E,EAA4B,EAAbtB,IAo9UnC9jH,EAAQqlH,4BA7qIR,SAASC,GAA2B/d,GAChC,OAAOA,EAAG3nB,iBA6qId5/E,EAAQulH,kCA5i8BR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4BzlH,EAAQ0O,wBAAwBzB,SA2i8BpEjN,EAAQ0lH,oBAAsB5zD,GAC9B9xD,EAAQ2lH,cAAgBnpD,GACxBx8D,EAAQ4lH,WAAarpD,GACrBv8D,EAAQ6lH,YAAcjrB,GACtB56F,EAAQ8lH,gBAAkBp0D,GAC1B1xD,EAAQ+lH,eAAiBxhH,EACzBvE,EAAQgmH,WAAanwD,GACrB71D,EAAQoL,KA55UR,SAAS66G,GAAUj+G,GAIf,IAHA,IAAI6wE,EAAiB,GACjBK,EAAU,GACVpkE,EAAQ,KACHjT,EAAI,EAAGA,EAAImG,EAAUhG,OAAQH,IAAK,CACvC,IAAIshD,EAAWn7C,EAAUnG,GACrBshD,EAASx8C,QAAUq9C,KACnBlvC,EAAQquC,EAASx/C,OAEA,WAAjBw/C,EAASn2C,OACTksE,EAAQl1E,KAAKm/C,EAASx8C,OAE1Bw8C,EAASl9C,MAAQpE,EACjBg3E,EAAexE,GAASlxB,EAASx8C,QAAUw8C,EAE/C,MAAO,CAEHpjD,QAAS,KACT84E,eAAgBA,EAChB7wE,UAAWA,EACXkxE,QAASA,EACTpkE,MAAOA,IAw4Uf9U,EAAQkmH,KAz6UR,SAASC,GAAiBn5G,EAAOrG,EAAOhD,EAAO89C,GAM3C,OAFA99C,EAAQiG,EAAkBjG,GAEnB,CAEHsC,OAAQ,EACRw7C,KAJU60B,GAAa70B,EAAM14C,EAAUpC,IAIxBqG,MAAOA,EAAOrG,MAAOA,EAAOhD,MAAOA,IAi6U1D3D,EAAQomH,KAllER,SAASC,GAAahvC,EAAgBpxE,GAClC,MAAO,CAEHuf,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEdF,YAAa,EACb3wE,MAAO,EACP6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EACrB7H,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GAAIiB,eAAgBA,EAChCF,WAAY,EACZtC,SAAU,GACV+C,aAAc,EACdlmE,QAAS,GACTmO,QAAS,KACTsjC,SAAU,KACVj1C,KAAM,KACN8vE,MAAO,KACPtG,UAAW,CAAEzxE,MAAOA,KA0jE5BjG,EAAQsmH,KAtzTR,SAASh0F,GAAUjN,EAAMpf,GACrB,IAAIsC,EAAM8c,EAAK9c,IAAIm/B,MAAMzhC,GACzB,GAAgB,EAAZsC,EAAIyE,MAA6B,CACjC,IAAIkuE,EAASrI,GAAcxtD,EAAM9c,EAAIid,WACrC,OAAOjd,EAAIsX,QAAQzO,SAAW8pE,EAAO9pE,SAAW8pE,EAAOxF,cAEtD,GAAgB,EAAZntE,EAAIyE,MACT,OAAO4lE,GAAWvtD,EAAM9c,EAAIid,WAAWmwD,WAEtC,GAAgB,MAAZptE,EAAIyE,MACT,OAAO8lE,GAAeztD,EAAM9c,EAAIid,WAAWwD,SAE/C,MAAM,IAAI1hB,MAAM,gDAAkDrB,IA2yTtEjG,EAAQumH,uBAxWR,SAAS/yC,GAAsB0iC,EAAM15D,GAEjC,OADA+2D,KACOrgC,GAASM,sBAAsB0iC,EAAM15D,IAuWhDx8C,EAAQwmH;;;;;;;;AA7WR,SAASjzC,GAAiBmiC,GAEtB,OADAnC,KACOrgC,GAASK,iBAAiBmiC,IA4WrC11G,EAAQymH,KAriER,SAASC,GAAa/oC,EAAYgpC,GAC9B,OAAO1W,GAAmB,GAAwBtyB,EAAYztE,GAASy2G,KAqiE3E3mH,EAAQ4mH,4BAA8B1yB,GACtCl0F,EAAQ6mH,KAxtTR,SAASrxG,GAAQxI,EAAOvH,EAAMg8C,GAE1B,OAAOm3B,IAAM,EADb5rE,GAAS,GACc,KAAM,EAAGvH,EAAMA,EAAMg8C,IAutThDzhD,EAAQ8mH,KAriER,SAASC,GAAcppC,EAAYqpC,GAI/B,IAHA,IAAIvjG,EAAO3iB,OAAO2iB,KAAKujG,GACnBC,EAASxjG,EAAKzhB,OACdkuG,EAAgB,GACXruG,EAAI,EAAGA,EAAIolH,EAAQplH,IAGxBquG,EAAclsG,KAFJyf,EAAK5hB,IAInB,OAAOouG,GAAmB,GAAyBtyB,EAAYuyB,IA6hEnElwG,EAAQknH,KA7iER,SAASC,GAAYxpC,EAAYgpC,GAE7B,OAAO1W,GAAmB,IAAwBtyB,EAAYztE,GAASy2G,EAAW,KA4iEtF3mH,EAAQonH,KAvtTR,SAASzuC,GAAY3rE,EAAOkpE,EAAgBvvE,EAAOhD,EAAO89C,GACtD,OAAOm3B,IAAM,EAAG5rE,EAAOkpE,EAAgB,EAAGvvE,EAAOhD,EAAO89C,IAutT5DzhD,EAAQqnH,2BArpaR,SAASC,KACAxjD,KACDA,IAAa,EACbC,GAAkB,eAAgB3B,IAClC2B,GAAkB,aAAcxB,IAChCwB,GAAkB,eAAgBf,IAClCe,GAAkB,mBAAoBvB,IACtCuB,GAAkB,iBAAkBlB,IACpCkB,GAAkB,cAAerB,IACjCqB,GAAkB,oBAAqBtB,IACvCsB,GAAkB,gBAAiBpB,IACnCoB,GAAkB,eAAgBN,IAClCM,GAAkB,YAAalO,MA0oavC71D,EAAQunH,mBAAqBxjD,GAC7B/jE,EAAQwnH,KA7wER,SAAS7X,GAAS3iG,EAAOsG,EAAIuhE,GACzB,IAAI2tC,EAAc,GAClB,IAAK,IAAI78G,KAAYkvE,EAEjB2tC,EAAYx+G,KAAK,CAAE2B,SAAUA,EAAU+pG,YADrB76B,EAASlvE,KAG/B,MAAO,CAEH6f,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAGdF,YAAa,EAAG3wE,MAAOA,EACvB6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EACrB1G,gBAAiB,EACjBnB,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GACZe,WAAY,EACZtC,SAAU,GACV+C,aAAc,EACdlmE,QAAS,GACTmO,QAAS,KACTsjC,SAAU,KACVj1C,KAAM,KACN8vE,MAAO,CAAE1qE,GAAIA,EAAI87F,SAAUt5B,GAAcxiE,GAAKuhE,SAAU2tC,GACxD9qC,UAAW,OA+uEnB13E,EAAQynH,oBAv/RR,SAASC,GAAmBv0G,EAAMw3E,EAAUg9B,GAChB,iBAAbh9B,IACPg9B,EAAYh9B,EACZA,EAAWx3E,EAAKnT,EAAQqhF,iBAAiBumC,WAE7Cj9B,EAAWA,EAAS/nE,cAAcnU,QAAQ,KAAM,KAChDoyE,GAAY8J,GAAYx3E,EACpBw0G,IACA9mC,GAAY8J,GAAU3qF,EAAQqhF,iBAAiBwmC,WAAaF,IAg/RpE3nH,EAAQ8nH,uBApuPR,SAASC,GAAsBz0G,EAAIvT,GAC/B,IAAI4mD,EAAWuyB,GAAQ/rE,IAAImG,GAC3Bs3E,GAAwBt3E,EAAIqzC,GAAYA,EAAS81B,WAAY18E,EAAQ08E,YACrEvD,GAAQjzC,IAAI3yB,EAAIvT,IAkuPpBC,EAAQgoH,sBAAwBl9B,GAChC9qF,EAAQioH,iBA3laR,SAASC,GAAkB3+C,EAA8E7hE,QACxF,IAATA,IAAmBA,EAAO,IAG9B,IAAI+jC,EAAkB/jC,EAAK+jC,iBAAmB7tB,GAC1CR,EAAY1V,EAAK0V,WAAa,KAC9B+mD,EAAe9vD,GAAgBk1D,GAC/BpF,EAAah8D,MAAQohE,IACrBpF,EAAah8D,KAAOohE,GAExB,IASItzC,EARA8pD,EAAY7wC,GAAkBzD,EAAiB/jC,EAAK6jC,MADrC44B,EAAanxD,UAAU,GAAG,IAEzCgtE,EAAY7b,EAAaxxD,OAAS,IAClC,IACAmgC,EAAcwxB,GAAkB58D,EAAKwuD,UAAWxuD,EAAKyuD,eACrDx4C,EAAW8tB,EAAgB5tB,eAAekiE,EAAW5b,GACrDK,EAAY31B,GAAY,GAAe,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,KAAM,MAC9EuH,EAAW9K,GAAY,KAAMk5B,EAAW1xB,EAAaktC,EAAW,KAAM,KAAMv0C,EAAiB9tB,OAAU/V,EAAWF,EAAKgF,UAAY,MACvIsP,GAAUo6B,EAAU,MAEpB,IACQ3K,EAAgBmC,OAChBnC,EAAgBmC,QAEpB3X,EAAYiuC,GADQD,GAAwB8b,EAAW5b,EAAc/tB,EAAU3K,EAAiB9tB,EAAUP,GAC3D+mD,EAAc/tB,EAAUtD,EAAaprC,EAAK08D,cAAgB,MAEzGp4B,GAAWoK,EAAUouB,EAAW,MAEhCj4B,GAAY6J,EAAUouB,EAAW,KAAM,MAE3C,QACIzoD,KACI0vB,EAAgBvT,KAChBuT,EAAgBvT,MAExB,OAAOjC,GAyjaXj2B,EAAQmoH,yBA15LR,SAASC,KACW,IAAIzjE,IACD,IAAIA,IACvBuuC,GAAYlxF,OAAS,GAw5LzBhC,EAAQqoH,2BAA6B54D,GACrCzvD,EAAQsoH;;;;;;;;AA9kPR,SAASC,GAAiBpgH,EAAM/F,EAAY+8C,EAAgBa,GACxD,OAAOxvC,IAAc,WACjB,IAAIxL,EACAwjH,EAAQrgH,EAKRsgH,EAAkBD,EAAMjnH,UAAYT,OAAOiqB,eAAey9F,EAAMjnH,WAAa,KAC7EmnH,EAAoBD,GAAmBA,EAAgBnnH,YACxC,OAAfc,SACyBwF,IAArB4gH,EAAMpmH,YACJsmH,GAAqBA,EAAkBtmH,aAAeomH,EAAMpmH,WAI9DomH,EAAMpmH,WAAaA,GAHlB4C,EAAKwjH,EAAMpmH,YAAY4B,KAAK9B,MAAM8C,EAAId,EAAS9B,KAMjC,OAAnB+8C,IAIAqpE,EAAMrpE,eAAiBA,GAEJ,OAAnBa,IAUIwoE,EAAMxoE,oBALmBp4C,IAAzB4gH,EAAMxoE,gBACJ0oE,GAAqBA,EAAkB1oE,iBAAmBwoE,EAAMxoE,eAI3CA,EAHAv+C,EAASA,EAAS,GAAI+mH,EAAMxoE,gBAAiBA,QA+iPpFhgD,EAAQ2oH,oBAAsBl8G,GAC9BzM,EAAQ4oH,aA105BR,SAASC,GAAYprG,GACjBF,GAAWE,GA005Bfzd,EAAQ8oH,aAAep+B,GACvB1qF,EAAQ+oH,OAAS9xD,GACjBj3D,EAAQgpH,WAAajgH,EACrB/I,EAAQipH,KAt2DR,SAASC,GAAQvrC,EAAYtG,EAAgB8xC,GAEzC,IADA,IAAIt0C,EAAW,GACNhzE,EAAI,EAAGA,EAAIsnH,EAAWnnH,OAAQH,IACnCgzE,EAAShzE,EAAI,GAAK,CACdmL,MAAO,EACPxI,KAAM,KACNypG,GAAI,KACJ9uB,gBAAiB,KACjBwvB,gBAAiB,KACjB/6C,OAAQu1D,EAAWtnH,IAG3B,MAAO,CAEH2jB,WAAY,EACZjJ,OAAQ,KACRq4B,aAAc,KACd35B,cAAe,EACf4iE,aAAc,EAEdF,WAAYA,EACZ3wE,MAAO,EACP6uE,WAAY,EACZiC,iBAAkB,EAClBC,oBAAqB,EACrB7H,eAAgB,GAChBC,gBAAiB,EACjBC,WAAY,GAAIiB,eAAgBA,EAChCF,WAAY,EAAGtC,SAAUA,EACzB+C,aAAc,EACdlmE,QAAS,GACTmO,QAAS,KACTsjC,SAAU,KACVj1C,KAAM,CAAE+1B,OAAQklF,EAAW,IAC3BnrC,MAAO,KACPtG,UAAW,OAo0DnB13E,EAAQopH,qBAAuBn1B,GAC/Bj0F,EAAQqpH,sBAx8RR,SAASC,KACLzoC,GAAc,IAw8RlB7gF,EAAQupH,KAnzVR,SAASC,GAAYnkG,EAAMokG,EAASj1C,EAAY7wE,GAC5C,GAAI2uD,GAAaI,UAAU/uD,GAAQ,CAC/BA,EAAQ2uD,GAAaG,OAAO9uD,GAC5B,IAAI+lH,EAAmBrkG,EAAK9c,IAAIm/B,MAAM+hF,GAASxuG,aAAeu5D,EAC1D9tD,EAAW4rC,GAAaG,OAAOptC,EAAKovD,UAAUi1C,IAClDrkG,EAAKovD,UAAUi1C,GAAoB,IAAIp3D,GAAa5rC,GAExD,OAAO/iB,GA6yVX3D,EAAQ2pH,iBAAmBn9F,GAC3BxsB,EAAQ4pH,KAvuDR,SAAStvC,GAAQttE,EAAO06B,EAAOssC,EAAkBC,GAY7C,IAVA,IAAI41C,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpCtzC,EAAqB,KAChBl1E,EAAI,EAAGA,EAAI6lC,EAAM1lC,OAAQH,IAAK,CACnC,IAAIkxB,EAAO2U,EAAM7lC,GAQjB,GAPAkxB,EAAKvN,UAAY3jB,EACjBkxB,EAAKxW,OAAS2tG,EACdn3F,EAAK9X,aAAe4uG,EACpB92F,EAAK8qD,YAAcisC,EACnB/2F,EAAK6hB,aAAeu1E,EACpBJ,GAAiBh3F,EAAK/lB,MACtBi9G,GAAsBl3F,EAAKojD,gBACvBpjD,EAAKlT,QAAS,CACd,IAAIo7D,EAAQloD,EAAKlT,QACjBo7D,EAAM8D,gBACFmrC,EAAgBA,EAAcrqG,QAAQk/D,gBAAkBj+E,OAAOU,OAAO,MAC1Ey5E,EAAM6D,aAAe7D,EAAM8D,gBAE3BqrC,GAAmC,EACnCC,GAAoC,EAChCt3F,EAAKlT,QAAQzO,WACb64G,GAAsBl3F,EAAKlT,QAAQzO,SAAS89F,oBASpD,GANAmB,GAAa6Z,EAAen3F,EAAM2U,EAAM1lC,QACxC6nH,GAAoB92F,EAAK8hD,SAAS7yE,OAClC8nH,GAAuB/2F,EAAKrhB,QAAQ1P,QAC/BmoH,GAAqC,EAAbp3F,EAAK/lB,QAC9B+pE,EAAqBhkD,GAER,MAAbA,EAAK/lB,MAAiC,CACjCo9G,IACDA,GAAmC,EAEnCF,EAAcrqG,QAAQk/D,gBAClBj+E,OAAOU,OAAO0oH,EAAcrqG,QAAQk/D,iBACxCmrC,EAAcrqG,QAAQi/D,aAAeorC,EAAcrqG,QAAQk/D,iBAE/D,IACI7wC,EAAuD,IAA3B,MAAbnb,EAAK/lB,OAD6C,IAAhC,KAAb+lB,EAAK/lB,QAEJkhC,EACrBg8E,EAAcrqG,QAAQk/D,gBAAgB1K,GAASthD,EAAKowB,SAASx8C,QAAUosB,GAGlEs3F,IACDA,GAAoC,EAEpCH,EAAcrqG,QAAQi/D,aAClBh+E,OAAOU,OAAO0oH,EAAcrqG,QAAQk/D,kBAE5CmrC,EAAcrqG,QAAQi/D,aAAazK,GAASthD,EAAKowB,SAASx8C,QAAUosB,GAEpEmb,IACAg8E,EAAcrqG,QAAQ26D,kBAAoBznD,GAclD,GAXIm3F,GACAA,EAAcruC,YAAc9oD,EAAK/lB,MACjCk9G,EAAcpsC,kBAAoB/qD,EAAK/lB,MACvCk9G,EAAcnsC,qBAAuBhrD,EAAKojD,gBACtCpjD,EAAKlT,SAAWkT,EAAKlT,QAAQzO,WAC7B84G,EAAcnsC,qBAAuBhrD,EAAKlT,QAAQzO,SAAS89F,qBAI/D8a,GAAqBj3F,EAAK/lB,MAE1B+lB,EAAKokD,WAAa,EAClB+yC,EAAgBn3F,EACXq9E,GAAcr9E,KACfo3F,EAAsBp3F,QAS1B,KAAOm3F,GAAiBroH,IAAMqoH,EAAc1kG,UAAY0kG,EAAc/yC,YAAY,CAC9E,IAAImzC,EAAYJ,EAAc3tG,OAC1B+tG,IACAA,EAAUzuC,YAAcquC,EAAcruC,WACtCyuC,EAAUvsC,qBAAuBmsC,EAAcnsC,qBAK/CosC,GAHJD,EAAgBI,IAEKla,GAAc8Z,GACTA,EAAct1E,aAGds1E,GAQtC,MAAO,CAEHnqH,QAAS,KACT67E,UAAWmuC,EACXQ,cAAeP,EACf9a,mBAAoB+a,EAAoBj9G,MAAOA,EAC/C06B,MAAOA,EACPssC,iBAAkBA,GAAoBG,GACtCF,eAAgBA,GAAkBE,GAAMJ,YAX1B,SAAU1uD,EAAMG,EAAWm3C,EAAWyY,GACpD,OAAO1tC,EAAMliB,GAAW3F,QAAQk0D,YAAY1uD,EAAMs3C,EAAWyY,IAW7D07B,aAAc+Y,EACdhZ,YAAaiZ,EAAqB/yC,mBAAoBA,IAknD9D/2E,EAAQwqH,cAl+ZR,SAASC,GAAax0F,GAClB,OAAO7P,GAAe6P,GAAWggC,OAk+ZrCj2D,EAAQ8lE,wBAA0BA,GAClC9lE,EAAQ2kE,2BAA6BA,GACrC3kE,EAAQ0mE,qBAAuBA,GAC/B1mE,EAAQ0oE,mBAAqBA,GAC7B1oE,EAAQ8gC,UAAYA,GACpB9gC,EAAQgxD,gBAAkBA,GAC1BhxD,EAAQuzD,YAAcA,GACtBvzD,EAAQk1D,wBAA0BA,GAClCl1D,EAAQo1D,wBAA0BA,GAClCp1D,EAAQq1D,wBAA0BA,GAClCr1D,EAAQs1D,wBAA0BA,GAClCt1D,EAAQu1D,wBAA0BA,GAClCv1D,EAAQw1D,wBAA0BA,GAClCx1D,EAAQy1D,wBAA0BA,GAClCz1D,EAAQ01D,wBAA0BA,GAClC11D,EAAQ21D,wBAA0BA,GAClC31D,EAAQ04D,WAAaA,GACrB14D,EAAQ+gE,uBAAyBA,GACjC/gE,EAAQghE,uBAAyBA,GACjChhE,EAAQihE,uBAAyBA,GACjCjhE,EAAQkhE,uBAAyBA,GACjClhE,EAAQmhE,uBAAyBA,GACjCnhE,EAAQohE,uBAAyBA,GACjCphE,EAAQqhE,uBAAyBA,GACjCrhE,EAAQshE,uBAAyBA,GACjCthE,EAAQuhE,uBAAyBA,GACjCvhE,EAAQ+3D,YAAcA,GACtB/3D,EAAQg9D,iCAAmCA,GAC3Ch9D,EAAQq2D,YAAcA,GACtBr2D,EAAQ82D,sBAAwBA,GAChC92D,EAAQ62D,wBAA0BA,GAClC72D,EAAQsyF,eAAiBA,GACzBtyF,EAAQ21B,wBAA0BA,GAClC31B,EAAQ6Q,kBAAoBA,GAC5B7Q,EAAQsV,kBAAoBA,GAC5BtV,EAAQyH,mBAAqBA,EAC7BzH,EAAQ8H,iBAAmBA,EAC3B9H,EAAQyU,iBAAmBA,GAC3BzU,EAAQuV,aAAeA,GACvBvV,EAAQo3D,kBAAoBA,GAC5Bp3D,EAAQiZ,kBAAoBA,GAC5BjZ,EAAQm7D,UAAYA,GACpBn7D,EAAQy7D,mBAAqBA,GAC7Bz7D,EAAQw7D,sBAAwBA,GAChCx7D,EAAQu7D,wBAA0BA,GAClCv7D,EAAQ+6D,aAAeA,GACvB/6D,EAAQo7D,mBAAqBA,GAC7Bp7D,EAAQy6D,eAAiBA,GACzBz6D,EAAQo8D,kBAAoBA,GAC5Bp8D,EAAQ07D,oBAAsBA,GAC9B17D,EAAQgZ,iBAAmBA,GAC3BhZ,EAAQs8D,iBAAmBA,GAC3Bt8D,EAAQ8O,eAAiBA,GACzB9O,EAAQ6qB,sBAAwBA,GAChC7qB,EAAQkiE,eAAiBA,GACzBliE,EAAQioF,OAASA,GACjBjoF,EAAQwoF,YAAcA,GACtBxoF,EAAQkoF,iBAAmBA,GAC3BloF,EAAQ6mF,UAAYA,GACpB7mF,EAAQuoF,UAAYA,GACpBvoF,EAAQgmF,kBAAoBA,GAC5BhmF,EAAQ2kF,YAAcA,GACtB3kF,EAAQoN,SAAWA,GACnBpN,EAAQq3D,kBAAoBA,GAC5Br3D,EAAQ+yF,8BAAgCA,GACxC/yF,EAAQs3D,iBAAmBA,GAC3Bt3D,EAAQ08D,WAAaA,GACrB18D,EAAQ2yF,YAAcA,GACtB3yF,EAAQid,gBAAkBA,GAC1Bjd,EAAQgd,kBAAoBA,GAC5Bhd,EAAQ+c,eAAiBA,GACzB/c,EAAQu+D,cAAgBA,GACxBv+D,EAAQysF,OAASA,GACjBzsF,EAAQ6sF,YAAcA,GACtB7sF,EAAQitF,YAAcA,GACtBjtF,EAAQktF,YAAcA,GACtBltF,EAAQmtF,YAAcA,GACtBntF,EAAQotF,YAAcA,GACtBptF,EAAQs/D,aAAeA,GACvBt/D,EAAQ8+D,gBAAkBA,GAC1B9+D,EAAQw/D,WAAaA,GACrBx/D,EAAQy/D,sBAAwBA,GAChCz/D,EAAQ0/D,uBAAyBA,GACjC1/D,EAAQ2/D,uBAAyBA,GACjC3/D,EAAQ4/D,uBAAyBA,GACjC5/D,EAAQ6/D,uBAAyBA,GACjC7/D,EAAQ8/D,uBAAyBA,GACjC9/D,EAAQ+/D,uBAAyBA,GACjC//D,EAAQggE,uBAAyBA,GACjChgE,EAAQigE,uBAAyBA,GACjCjgE,EAAQkgE,uBAAyBA,GACjClgE,EAAQsrF,gBAAkBA,GAC1BtrF,EAAQ0rF,gBAAkBA,GAC1B1rF,EAAQ4rF,gBAAkBA,GAC1B5rF,EAAQ6rF,gBAAkBA,GAC1B7rF,EAAQ8rF,gBAAkBA,GAC1B9rF,EAAQ+rF,gBAAkBA,GAC1B/rF,EAAQisF,gBAAkBA,GAC1BjsF,EAAQmsF,gBAAkBA,GAC1BnsF,EAAQqsF,gBAAkBA,GAC1BrsF,EAAQusF,gBAAkBA,GAC1BvsF,EAAQ2xF,eAAiBA,GACzB3xF,EAAQk3D,YAAcA,GACtBl3D,EAAQigB,cAAgBA,GACxBjgB,EAAQggB,kBAAoBA,GAC5BhgB,EAAQ4f,gBAAkBA,GAC1B5f,EAAQga,cAAgBA,GACxBha,EAAQw0B,eAAiBA,GACzBx0B,EAAQk1B,sBAAwBA,GAChCl1B,EAAQq1B,iBAAmBA,GAC3Br1B,EAAQ40B,gBAAkBA,GAC1B50B,EAAQ+0B,cAAgBA,GACxB/0B,EAAQ01B,2BAA6BA,GACrC11B,EAAQihC,SAAWA,GACnBjhC,EAAQoU,oBAAsBA,GAC9BpU,EAAQ6U,mBAAqBA,GAC7B7U,EAAQwyF,qBAAuBA,GAC/BxyF,EAAQgyF,kBAAoBA,GAC5BhyF,EAAQu4D,WAAaA,GACrBv4D,EAAQw3D,YAAcA,GACtBx3D,EAAQwhE,wBAA0BA,GAClCxhE,EAAQ0hE,wBAA0BA,GAClC1hE,EAAQ2hE,wBAA0BA,GAClC3hE,EAAQ4hE,wBAA0BA,GAClC5hE,EAAQ6hE,wBAA0BA,GAClC7hE,EAAQ8hE,wBAA0BA,GAClC9hE,EAAQ+hE,wBAA0BA,GAClC/hE,EAAQgiE,wBAA0BA,GAClChiE,EAAQiiE,wBAA0BA,GAClCjiE,EAAQu3D,iBAAmBA,GAC3Bv3D,EAAQu2D,WAAaA,GACrBv2D,EAAQ8yF,uBAAyBA,GACjC9yF,EAAQmgE,OAASA,GACjBngE,EAAQqgE,kBAAoBA,GAC5BrgE,EAAQsgE,mBAAqBA,GAC7BtgE,EAAQugE,mBAAqBA,GAC7BvgE,EAAQwgE,mBAAqBA,GAC7BxgE,EAAQygE,mBAAqBA,GAC7BzgE,EAAQ0gE,mBAAqBA,GAC7B1gE,EAAQ2gE,mBAAqBA,GAC7B3gE,EAAQ4gE,mBAAqBA,GAC7B5gE,EAAQ6gE,mBAAqBA,GAC7B7gE,EAAQ8gE,mBAAqBA,GAC7B9gE,EAAQmiE,6BAA+BA,GACvCniE,EAAQmyF,YAAcA,GAEtBrxF,OAAO+B,eAAe7C,EAAS,aAAc,CAAE2D,OAAO","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+78.sha-f750f18.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_LCONTAINER = 16;\n    var PREORDER_HOOK_FLAGS = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return getDocument(); };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        return [\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function hasConfig(tNode, flag) {\n        return (tNode.flags & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(tNode, isClassBased, firstUpdatePass) {\n        var allow = false;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        var hasDirectives = hasConfig(tNode, 128 /* hasHostBindings */);\n        if (!hasDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var duplicateStylingFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n            var hasDuplicates = hasConfig(tNode, duplicateStylingFlag);\n            var hasOnlyMapOrPropsFlag = isClassBased ? 1536 /* hasClassPropAndMapBindings */ :\n                49152 /* hasStylePropAndMapBindings */;\n            var hasOnlyMapsOrOnlyProps = (tNode.flags & hasOnlyMapOrPropsFlag) !== hasOnlyMapOrPropsFlag;\n            allow = !hasDuplicates && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function patchConfig(tNode, flag) {\n        tNode.flags |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[0 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context, tNode, isClassBased) {\n        var startPosition = 2 /* ValuesStartPosition */;\n        var flag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, flag)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[1 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 2 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        var declaredView;\n        while (rootTNode !== null && rootTNode.type === 2 /* View */ &&\n            (declaredView = lView[DECLARATION_VIEW]) !== null) {\n            lView = declaredView;\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TStylingNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass, true);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, tNode, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, isClassBased) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, tNode, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired, isClassBased);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = hasConfig(tNode, hostBindingsFlag) && !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, tNode, data, prop, isClassBased);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, tNode, data, prop, isClassBased) {\n        var valuesCount = getValuesCount(context);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (prop !== null && hasConfig(tNode, hostBindingsFlag)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 2 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            var bindingsStart = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, tNode, countId, sourceIndex, prop, bindingValue, sanitizationRequired, isClassBased) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var collisionFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 2 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(tNode, collisionFlag);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 2 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[0 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, tNode, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext, tNode, false);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, tNode, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode, false);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext, tNode, true);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, tNode, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode, true);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context, tNode, isClassBased) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, tNode, getStylingMapArray(context), isClassBased);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, tNode, initialStyling, isClassBased) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, tNode, COUNT_ID_FOR_STYLING, 0, prop, value, false, isClassBased);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(tNode, 256 /* hasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, tNode, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode, isClassBased) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 2 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context, tNode, isClassBased);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, tNode, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var hasInitial = hasConfig(tNode, 256 /* hasInitialStyling */);\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var propBindingsFlag = isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */;\n            var writeToAttrDirectly = !hasConfig(tNode, propBindingsFlag);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, tNode, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            if (!applied && hasConfig(tNode, mapBindingsFlag)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(tNode, 256 /* hasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 2 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, tNode, isClassBased) {\n        var debug = new TStylingContextDebug(context, tNode, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _tNode, _isClassBased) {\n            this.context = context;\n            this._tNode = _tNode;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 2 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _tNode, _data, _isClassBased) {\n            this._tNode = _tNode;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _tNode, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n            for (var i = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapBindingsFlag = this._isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            var hasMaps = hasConfig(this._tNode, mapBindingsFlag);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, false, this._isClassBased);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, true, this._isClassBased);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(tNode, isClassBased) {\n        var hasMapBindings = hasConfig(tNode, isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */);\n        var hasPropBindings = hasConfig(tNode, isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */);\n        var hasCollisions = hasConfig(tNode, isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */);\n        var hasTemplateBindings = hasConfig(tNode, isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */);\n        var hasHostBindings = hasConfig(tNode, isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(tNode, isClassBased, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 256 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, tNode, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, tNode, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n                var movedViews = viewOrContainer[MOVED_VIEWS];\n                if (movedViews !== null) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared. Moved views also contains intra component moves,\n                    // which we don't care about.\n                    // TODO(misko): this is not the most efficient way to do this as we have to do a lot of\n                    // searches. Will refactor for performance later.\n                    var declaredComponentLView = findComponentView(lView);\n                    for (var i = 0; i < movedViews.length; i++) {\n                        var movedLView = movedViews[i];\n                        var parentLView = movedLView[PARENT];\n                        while (isLContainer(parentLView)) {\n                            parentLView = parentLView[PARENT];\n                        }\n                        var insertedComponentLView = findComponentView(parentLView);\n                        var insertionIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n                        if (insertionIsOnPush && insertedComponentLView !== declaredComponentLView) {\n                            // Here we know that the template has been transplanted across components\n                            // (not just moved within a component)\n                            var movedTView = movedLView[TVIEW];\n                            ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                            refreshView(movedLView, movedTView, movedTView.template, movedLView[CONTEXT]);\n                        }\n                    }\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    return getNativeByTNode(tNode, lView);\n                }\n            }\n            else {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, getConstant(tViewConsts, attrsIndex));\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 32768 /* hasStylePropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 1024 /* hasClassPropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, tNode, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 16384 /* hasStyleMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 512 /* hasClassMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, tNode, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, tNode, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 256 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, tNode, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function patchHostStylingFlag(tNode, hostBindingsMode, isClassBased) {\n        var flag = hostBindingsMode ?\n            isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */ :\n            isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */;\n        patchConfig(tNode, flag);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstCreatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 256 /* hasInitialStyling */) === 256 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            var hasDirectives = resolveDirectives(tView, lView, tNode, localRefs);\n            ngDevMode && validateElement(lView, native, tNode, hasDirectives);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n    function validateElement(hostView, element, tNode, hasDirectives) {\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = (typeof HTMLUnknownElement === 'function' && element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var errorMessage = \"'\" + tagName + \"' is not a known element:\\n\";\n                errorMessage +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    errorMessage +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMessage +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                throw new Error(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs);\n        if (attrs && tView.firstCreatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+78.sha-f750f18.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: usesLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function usesLifecycleHook(type, name) {\n        var prototype = type.prototype;\n        return prototype && prototype.hasOwnProperty(name);\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return usesLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = getReflect().ownPropMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = instructionState;\n    exports.ɵangular_packages_core_core_be = getLView;\n    exports.ɵangular_packages_core_core_bf = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bg = nextContextImpl;\n    exports.ɵangular_packages_core_core_bi = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bj = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bk = makePropDecorator;\n    exports.ɵangular_packages_core_core_bl = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}