{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__window","window","__self","WorkerGlobalScope","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","renderStringify","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","viewToDetach","removeView","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","currentValue","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","style","removeStyle","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","tHostNode","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","clone","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","eventName","listenerFn","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","queries","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","creationMode","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","features_1","features_1_1","ngInherit","superPrototype","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","destroyed","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","shift","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","loadViewQuery","contentQuery","tViewContentQueries","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","sourceMapUrl","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","lNode","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_q","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_r","ɵangular_packages_core_core_e","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_k","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_i","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.3+55.sha-faf0b25\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!(component.templateUrl || component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // If this is the first content query on a node, any existing LQueries needs to be cloned.\n        // In subsequent template passes, the cloning occurs before directive instantiation\n        // in `createDirectivesAndLocals`.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[T_HOST] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return null;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            value.length !== LCONTAINER_LENGTH;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style[prop] = value;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style[prop] = '';\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[HOST] = host;\n        lView[T_HOST] = tHostNode;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        else {\n            // During first template pass, queries are created or cloned when first requested\n            // using `getOrCreateCurrentQueries`. For subsequent template passes, we clone\n            // any current LQueries here up-front if the current node hosts a content query.\n            if (isContentQueryHost(getPreviousOrParentTNode()) && lView[QUERIES]) {\n                lView[QUERIES] = lView[QUERIES].clone();\n            }\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] =\n                isContentQueryHost(previousOrParentTNode) ? currentQueries.parent : currentQueries;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(element, propName, tNode) {\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            lView[QUERIES] = queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[T_HOST];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = currentComponentView[PARENT];\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (tView.firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        // Detached views do not have a PARENT and also aren't root views\n        if (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n        }\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(hostView, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            !creationMode && executeViewQueryFn(hostView, hostTView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(lView, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(getRenderFlags(lView), component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (directiveIndex) {\n                            superContentQueries_1(directiveIndex);\n                            prevContentQueries_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex) {\n                            superContentQueriesRefresh_1(directiveIndex);\n                            prevContentQueriesRefresh_1(directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                simpleChangesStore.previous = current;\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.3+55.sha-faf0b25');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode =\n                            createNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue, null);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var sourceMapUrl = \"ng://\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), sourceMapUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, sourceMapUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_q = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_n = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _localeFactory;\n    exports.ɵangular_packages_core_core_r = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_e = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_l = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_m = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_k = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_j = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_b = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_c = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_d = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_i = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = SCHEDULER;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bg = loadInternal;\n    exports.ɵangular_packages_core_core_f = createElementRef;\n    exports.ɵangular_packages_core_core_g = createTemplateRef;\n    exports.ɵangular_packages_core_core_h = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}