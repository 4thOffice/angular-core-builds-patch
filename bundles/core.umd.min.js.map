{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","fillProperties","source","key","ÉµChangeDetectorStatus","Directive","dir","type","Component","c","changeDetection","Default","Pipe","pure","updateBaseDefFromIOProp","getProp","inheritedBaseDef","ngBaseDef","baseDef","inputs","outputs","declaredInputs","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","preR3InjectableCompile","injectableType","NgModule","ngModule","preR3NgModuleCompile","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","isObservable","subscribe","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","componentResourceResolutionQueue","unwrapResponse","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","stringify$1","loadInternal","readElementValue","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","projectionNodeIndex","native","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","createTextNode","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","grandParentContainer","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","getValue","currFlag","getPointers","hasValueChanged","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setContextDirty","store","DashCase","removeProperty","setClass","isDirtyYes","adjustedIndex","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","previousOrParentNode","isParent","currentQueries","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","currentElementNode","getRenderer","getCurrentSanitizer","_getViewData","getPreviousOrParentNode","contextViewData","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshChildComponents","componentRefresh","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","tickRootContext","namespaceHTML","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","elementStart","localRefs","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElementNS","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","tDirectives","directiveCreate","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","directiveDefs","pipeDefs","onPush","storeCleanupWithContext","storeCleanupFn","elementEnd","addNode","tViews","initialInputs","stylingTemplate","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","getStylingContext","stylingContext","allocStylingContext","lElement","templateStyleContext","elementStylingApply","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","styleSanitizer","isClassBased_6","valueToApply","baseDirectiveCreate","addComponentLogic","directiveIndex","addToViewTree","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","createLContainer","parentLNode","isForViewContainerRef","adjustedElementIndex","viewAttached","detectChangesInternal","projectionNodeStack$1","adjustedHostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","NO_CHANGE","initBindings","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","loadElement","loadElementInternal","consumeBinding","bindingUpdated","isDifferent","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","PRIVATE_PREFIX","onChangesWrapper","delegateHook","simpleChanges","ViewRef$1","_lViewNode","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","isInternalRootView","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","lNode","ComponentRef$1","ComponentRef$$1","destroyCbs","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","getOrCreateElementRef","ElementRef$1","ElementRef$$1","getOrCreateContainerRef","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","getOrCreateTemplateRef","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","adjustedIdx","_adjustIndex","newIndex","shift","TemplateRef$1","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","containerNode","createEmbeddedViewNode","declarationView","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","pureFunction1","slotOffset","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","LQueries_","deep","shallow","track","descend","createQuery$1","clone","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_l","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_v","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_w","Éµangular_packages_core_core_u","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleUrls","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdefineNgModule","defineNgModule","declarations","transitiveCompileScopes","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","attrNameToInject","ÉµPublicFeature","PublicFeature","definition","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","superPrototype","ÉµNgOnChangesFeature","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","writable","currentChange","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNC","ÉµC","Éµx","nextContext","level","walkUpViews","nestingLevel","ÉµE","ÉµNH","ÉµNM","namespaceMathML","ÉµNS","namespaceSVG","ÉµEe","ÉµL","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","cleanupInstances","outputData","createOutput","ÉµT","textNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","ÉµQ","memoryIndex","getCurrentQueries","QueryType","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµd","loadDirective","ÉµP","selectorIndex","componentNode","nodeToProject","grandparent","currentComponentHost","firstProjectedNode","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","getCreationMode","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµgV","getCurrentView","ÉµrV","restoreView","viewToRestore","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","nextIndex","ÉµqR","queryRefresh","Éµql","loadQueryList","queryListIdx","Éµe","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","pData","tails","componentChild","bucketIndex","Éµr","reference","ÉµrS","reserveSlots","numSlots","Éµa","elementAttribute","element_1","strValue","Éµs","elementStyling","classDeclarations","styleDeclarations","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","Éµsm","elementStylingMap","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","classesStartIndex","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","Éµsp","elementStyleProp","styleIndex","valueToAdd","Éµsa","Éµcp","elementClassProp","stylingIndex","updateClassProp","addOrRemove","Éµt","textBinding","existingNode","textContent","Éµv","embeddedViewEnd","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI1","i18nInterpolation1","ÉµiI2","i18nInterpolation2","ÉµiI3","i18nInterpolation3","idx","ÉµiI4","i18nInterpolation4","b1","ÉµiI5","i18nInterpolation5","ÉµiI6","i18nInterpolation6","ÉµiI7","i18nInterpolation7","b2","ÉµiI8","i18nInterpolation8","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0+100.sha-183757d\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = false;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (function () { })(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (function () { })(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty('ngBaseDef')) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty$1(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$2 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return (preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0+100.sha-183757d');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone }\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler = compilerFactory.createCompiler([options]);\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector }\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone },\n            { type: Console },\n            { type: Injector },\n            { type: ErrorHandler },\n            { type: ComponentFactoryResolver },\n            { type: ApplicationInitStatus }\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef }\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __global$1 = typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global;\n    function ngDevModeResetPerfCounters() {\n        __global$1.ngDevMode = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten$1(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    var currentElementNode = null;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The LViewData instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshContentQueries(tView);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData ? viewData[INJECTOR$1] : null,\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n            null // declarationView\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        queries && queries.addNode(node); // check if a given container node matches\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding$1(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef.rendererType)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef$1(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var different = bindingUpdated2(v0, v1);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery$1(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten$1(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_l = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_i = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_j = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_h = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_v = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_y = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateElementRef;\n    exports.Éµangular_packages_core_core_w = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_u = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_z = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_ba = bindingUpdated;\n    exports.Éµangular_packages_core_core_bb = loadInternal;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.Éµx = nextContext;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµgV = getCurrentView;\n    exports.ÉµrV = restoreView;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµr = reference;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI1 = i18nInterpolation1;\n    exports.ÉµiI2 = i18nInterpolation2;\n    exports.ÉµiI3 = i18nInterpolation3;\n    exports.ÉµiI4 = i18nInterpolation4;\n    exports.ÉµiI5 = i18nInterpolation5;\n    exports.ÉµiI6 = i18nInterpolation6;\n    exports.ÉµiI7 = i18nInterpolation7;\n    exports.ÉµiI8 = i18nInterpolation8;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}