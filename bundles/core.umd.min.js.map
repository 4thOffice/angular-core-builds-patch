{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_COMPONENT_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","registerPostOrderHooks","directiveStart","end","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","nodeIndex","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","hasConfig","allowDirectStyling","isClassBased","firstUpdatePass","allow","hasOnlyMapOrPropsFlag","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","hostView","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","view","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentLViewByIndex","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLContainerActiveIndex","lContainer","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","hostBindingsFlag","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","collisionFlag","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","config","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedViews","movedLView","insertedComponentLView","movedTView","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","move","newIndex","viewRefsArr","shift","setLContainerActiveIndex","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","Pipe","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","typeName","isFactoryProvider","isExistingProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","comment","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","patchHostStylingFlag","isHostStyling","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","lastAttrIndex","stylingInputs","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","rootTNode","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","shouldInheritFields","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","forceRecalc","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","lowercaseName","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+585.sha-9c5510b\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n            (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n        if (def) {\n            var typeName = getTypeName(type);\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + typeName + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + typeName + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /** Gets the name of a type, accounting for some cross-browser differences. */\n    function getTypeName(type) {\n        // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n        // it'll always return the name of the function itself, no matter how many other functions it\n        // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n        // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n        // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n        // the issue by converting the function to a string and parsing its name out that way via a regex.\n        if (type.hasOwnProperty('name')) {\n            return type.name;\n        }\n        var match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n        return match === null ? '' : match[1];\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n    // which will break inheriting the injectable definition from a grandparent through an\n    // undecorated parent class. We work around it by defining a fallback method which will be\n    // used to retrieve the definition. This should only be a problem in JIT mode, because in\n    // AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n    // undecorated parent is no longer supported in v10, this can safely be removed.\n    var NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn === null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return getDocument(); }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        return [\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function hasConfig(tNode, flag) {\n        return (tNode.flags & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(tNode, isClassBased, firstUpdatePass) {\n        var allow = false;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        var hasDirectives = hasConfig(tNode, 128 /* hasHostBindings */);\n        if (!hasDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var duplicateStylingFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n            var hasDuplicates = hasConfig(tNode, duplicateStylingFlag);\n            var hasOnlyMapOrPropsFlag = isClassBased ? 1536 /* hasClassPropAndMapBindings */ :\n                49152 /* hasStylePropAndMapBindings */;\n            var hasOnlyMapsOrOnlyProps = (tNode.flags & hasOnlyMapOrPropsFlag) !== hasOnlyMapOrPropsFlag;\n            allow = !hasDuplicates && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function patchConfig(tNode, flag) {\n        tNode.flags |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[0 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context, tNode, isClassBased) {\n        var startPosition = 2 /* ValuesStartPosition */;\n        var flag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, flag)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChangedUnwrapSafeValue(a, b) {\n        return hasValueChanged(unwrapSafeValue(a), unwrapSafeValue(b));\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[1 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 2 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            var inertBodyElement = this.inertDocument.body;\n            if (inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(inertBodyElement);\n            }\n            inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (inertBodyElement.querySelector && !inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (inertBodyElement.querySelector && inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n            // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n            // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n            // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n            // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n            // down the line. This has been worked around by creating a new inert `body` and using it as\n            // the root node in which we insert the HTML.\n            var inertBody = this.inertDocument.createElement('body');\n            inertBody.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(inertBody);\n            }\n            return inertBody;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:attr|calc|var)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : unwrapSafeValue(value);\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n        var field = propName ? \" for '\" + propName + \"'\" : '';\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value\" + field + \": '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook?\";\n        }\n        // TODO: include debug context, see `viewDebugError` function in\n        // `packages/core/src/view/errors.ts` for reference.\n        throw new Error(msg);\n    }\n    function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n        var _a = __read(meta.split(INTERPOLATION_DELIMITER)), propName = _a[0], prefix = _a[1], chunks = _a.slice(2);\n        var oldValue = prefix, newValue = prefix;\n        for (var i = 0; i < chunks.length; i++) {\n            var slotIdx = rootIndex + i;\n            oldValue += \"\" + lView[slotIdx] + chunks[i];\n            newValue += \"\" + (slotIdx === expressionIndex ? changedValue : lView[slotIdx]) + chunks[i];\n        }\n        return { propName: propName, oldValue: oldValue, newValue: newValue };\n    }\n    /**\n     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n     * - property name (for property bindings or interpolations)\n     * - old and new values, enriched using information from metadata\n     *\n     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n     * function description.\n     */\n    function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n        var tData = lView[TVIEW].data;\n        var metadata = tData[bindingIndex];\n        if (typeof metadata === 'string') {\n            // metadata for property interpolation\n            if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n                return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n            }\n            // metadata for property binding\n            return { propName: metadata, oldValue: oldValue, newValue: newValue };\n        }\n        // metadata is not available for this expression, check if this expression is a part of the\n        // property interpolation by going from the current binding index left and look for a string that\n        // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n        // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n        if (metadata === null) {\n            var idx = bindingIndex - 1;\n            while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n                idx--;\n            }\n            var meta = tData[idx];\n            if (typeof meta === 'string') {\n                var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n                // first interpolation delimiter separates property name from interpolation parts (in case of\n                // property interpolations), so we subtract one from total number of found delimiters\n                if (matches && (matches.length - 1) > bindingIndex - idx) {\n                    return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n                }\n            }\n        }\n        return { propName: undefined, oldValue: oldValue, newValue: newValue };\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TStylingNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass, true);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, tNode, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, isClassBased) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, tNode, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired, isClassBased);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = hasConfig(tNode, hostBindingsFlag) && !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, tNode, data, prop, isClassBased);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, tNode, data, prop, isClassBased) {\n        var valuesCount = getValuesCount(context);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (prop !== null && hasConfig(tNode, hostBindingsFlag)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 2 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            var bindingsStart = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, tNode, countId, sourceIndex, prop, bindingValue, sanitizationRequired, isClassBased) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var collisionFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 2 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(tNode, collisionFlag);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 2 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[0 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, tNode, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext, tNode, false);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, tNode, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode, false);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext, tNode, true);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, tNode, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode, true);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context, tNode, isClassBased) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, tNode, getStylingMapArray(context), isClassBased);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, tNode, initialStyling, isClassBased) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, tNode, COUNT_ID_FOR_STYLING, 0, prop, value, false, isClassBased);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(tNode, 256 /* hasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, tNode, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode, isClassBased) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 2 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context, tNode, isClassBased);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, tNode, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var hasInitial = hasConfig(tNode, 256 /* hasInitialStyling */);\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var propBindingsFlag = isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */;\n            var writeToAttrDirectly = !hasConfig(tNode, propBindingsFlag);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, tNode, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            if (!applied && hasConfig(tNode, mapBindingsFlag)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(tNode, 256 /* hasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 2 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, tNode, isClassBased) {\n        var debug = new TStylingContextDebug(context, tNode, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _tNode, _isClassBased) {\n            this.context = context;\n            this._tNode = _tNode;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 2 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _tNode, _data, _isClassBased) {\n            this._tNode = _tNode;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _tNode, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n            for (var i = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapBindingsFlag = this._isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            var hasMaps = hasConfig(this._tNode, mapBindingsFlag);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, false, this._isClassBased);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, true, this._isClassBased);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(tNode, isClassBased) {\n        var hasMapBindings = hasConfig(tNode, isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */);\n        var hasPropBindings = hasConfig(tNode, isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */);\n        var hasCollisions = hasConfig(tNode, isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */);\n        var hasTemplateBindings = hasConfig(tNode, isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */);\n        var hasHostBindings = hasConfig(tNode, isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(tNode, isClassBased, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 256 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, tNode, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, tNode, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return getLContainerActiveIndex(this._raw_lContainer); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(rendererFactory, elementOrSelector, encapsulation) {\n        var renderer = rendererFactory.createRenderer(null, null);\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        if (matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName)) {\n            return true;\n        }\n        // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n        // need to account for both here, while being careful for `typeof null` also returning 'object'.\n        return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var preOrderHooksFound = false;\n            var preOrderCheckHooksFound = false;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                // Only push a node index into the preOrderHooks array if this is the first\n                // pre-order hook found on this node.\n                if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                    // We will push the actual hook function into this array later during dir instantiation.\n                    // We cannot do it now because we must ensure hooks are registered in the same\n                    // order that directives are created (i.e. injection order).\n                    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                    preOrderHooksFound = true;\n                }\n                if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index - HEADER_OFFSET);\n                    preOrderCheckHooksFound = true;\n                }\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedLView, movedTView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, publicName, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode && assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(commentNode, hostTNode, hostView);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                var proto = Object.getPrototypeOf(param);\n                if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n            // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n            // which will break inheriting the injectable definition from a grandparent through an\n            // undecorated parent class. We work around it by defining a method which should be used\n            // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n            // seems to have a workaround for static properties. When inheriting from an undecorated\n            // parent is no longer supported in v10, this can safely be removed.\n            if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n                type[NG_PROV_DEF_FALLBACK] = function () { return type[NG_PROV_DEF]; };\n            }\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, name, value, lView, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + name, bindingIndex);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolated, lView, sanitizer, namespace);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, 'attr.' + attrName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 32768 /* hasStylePropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 1024 /* hasClassPropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n        return ɵɵclassProp;\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChangedUnwrapSafeValue(oldValue, value)) {\n                var field = isClassBased ? \"class.\" + prop : \"style.\" + prop;\n                throwErrorIfNoChangesMode(false, oldValue, value, field);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, tNode, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 16384 /* hasStyleMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 512 /* hasClassMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            // check if the value is a StylingMapArray, in which case take the first value (which stores raw\n            // value) from the array\n            var previousValue = isStylingMapArray(oldValue) ? oldValue[0 /* RawValuePosition */] : oldValue;\n            throwErrorIfNoChangesMode(false, previousValue, value);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, tNode, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, inputName, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, tNode, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 256 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, tNode, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (isStylingValueDefined(value)) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function patchHostStylingFlag(tNode, hostBindingsMode, isClassBased) {\n        var flag = hostBindingsMode ?\n            isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */ :\n            isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */;\n        patchConfig(tNode, flag);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs !== null) {\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && warnAboutUnknownElement(lView, native, tNode, hasDirectives);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var attrs = tNode.attrs;\n        if (attrs != null) {\n            setUpAttributes(renderer, native, attrs);\n        }\n        if ((tNode.flags & 256 /* hasInitialStyling */) === 256 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName], inputName);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style'], 'style');\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs, propName) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, propName, value);\n    }\n    function warnAboutUnknownElement(hostView, element, tNode, hasDirectives) {\n        var schemas = hostView[TVIEW].schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = \n            // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n            // because while most browsers return 'function', IE returns 'object'.\n            (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n                element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var warning = \"'\" + tagName + \"' is not a known element:\\n\";\n                warning +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    warning +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    warning +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                console.warn(warning);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getCleanup(lView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(textNative, tNode, lView);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var shouldInheritFields = true;\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                if (shouldInheritFields) {\n                    // Some fields in the definition may be empty, if there were no values to put in them that\n                    // would've justified object creation. Unwrap them if necessary.\n                    var writeableDef = definition;\n                    writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                    writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                    writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                    // Merge hostBindings\n                    var superHostBindings = superDef.hostBindings;\n                    superHostBindings && inheritHostBindings(definition, superHostBindings);\n                    // Merge queries\n                    var superViewQuery = superDef.viewQuery;\n                    var superContentQueries = superDef.contentQueries;\n                    superViewQuery && inheritViewQuery(definition, superViewQuery);\n                    superContentQueries && inheritContentQueries(definition, superContentQueries);\n                    // Merge inputs and outputs\n                    fillProperties(definition.inputs, superDef.inputs);\n                    fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                    fillProperties(definition.outputs, superDef.outputs);\n                    // Inherit hooks\n                    // Assume super class inheritance feature has already run.\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superDef.afterContentChecked;\n                    definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                    definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                    definition.doCheck = definition.doCheck || superDef.doCheck;\n                    definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                    definition.onInit = definition.onInit || superDef.onInit;\n                }\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                        // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                        // def already has all the necessary information inherited from its super class(es), so we\n                        // can stop merging fields from super classes. However we need to iterate through the\n                        // prototype chain to look for classes that might contain other \"features\" (like\n                        // NgOnChanges), which we should invoke for the original `definition`. We set the\n                        // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                        // logic and only invoking functions from the \"features\" list.\n                        if (feature === ɵɵInheritDefinitionFeature) {\n                            shouldInheritFields = false;\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        if (prevHostBindings) {\n            definition.hostBindings = function (rf, ctx, elementIndex) {\n                superHostBindings(rf, ctx, elementIndex);\n                prevHostBindings(rf, ctx, elementIndex);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+585.sha-9c5510b');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        '$',\n        'US Dollar',\n        {},\n        'ltr',\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 18] = \"Directionality\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 19] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 20] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * By default this operation is memoized and the result is cached on the module's definition. You\n     * can avoid memoization and previously stored results (if available) by providing the second\n     * argument with the `true` value (forcing transitive scopes recalculation).\n     *\n     * This function can be called on modules with components that have not fully compiled yet, but the\n     * result should not be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     * @param forceRecalc flag that indicates whether previously calculated and memoized values should\n     * be ignored and transitive scope to be fully recalculated.\n     */\n    function transitiveScopesFor(moduleType, forceRecalc) {\n        if (forceRecalc === void 0) { forceRecalc = false; }\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (!forceRecalc && def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, forceRecalc);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, forceRecalc);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        if (!forceRecalc) {\n            def.transitiveCompileScopes = scopes;\n        }\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var reflect = getReflect();\n        var propMetadata = reflect.ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        var reflect = getReflect();\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return reflect.hasLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = reflect.propMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: ApplicationInitStatus.ɵfac });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: Console.ɵfac });\n        return Console;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: Compiler.ɵfac });\n        return Compiler;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null); })();\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: Testability.ɵfac });\n        return Testability;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null); })();\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: TestabilityRegistry.ɵfac });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null); })();\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: PlatformRef.ɵfac });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null); })();\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: ApplicationRef.ɵfac });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null); })();\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: SystemJsNgModuleLoader.ɵfac });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null); })();\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    var lowercaseName = attr.name.toLowerCase();\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                        // Save the lowercase name to align the behavior between browsers.\n                        // IE preserves the case, while all other browser convert it to lower case.\n                        attributes[lowercaseName] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var result = {};\n                var element = this.nativeElement;\n                var classNames = element.className.split(' ');\n                classNames.forEach(function (value) { return result[value] = true; });\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ (function () { setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}